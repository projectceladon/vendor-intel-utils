From f21a5cb9ea579f34ef7dda00bba062696a48a100 Mon Sep 17 00:00:00 2001
From: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Date: Wed, 7 Apr 2021 17:52:52 +0530
Subject: [PATCH] Changes to fix build issues after adding clang 12.0.3

In order to address suspend/resume instability, clang
version is updated to 12.0.3. With clang version updated
to 12.0.3, android compilation fails.

Changes done to fix compilation issues. With the change,
Android will still be compiled with 11.0.2 clang and kernel
will be compiled with 12.0.3 clang.

Change-Id: Ia30786664f600314e3b60699a89f10e758f53700
Tracked-On: OAM-96701
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
---
 Android.bp              | 65 ++++-------------------------------------
 soong/clangprebuilts.go |  8 -----
 2 files changed, 5 insertions(+), 68 deletions(-)

diff --git a/Android.bp b/Android.bp
index 172255b6..87fbc7d7 100644
--- a/Android.bp
+++ b/Android.bp
@@ -26,7 +26,6 @@ llvm_prebuilt_library_static {
     name: "libomp",
     sdk_version: "minimum",
     vendor_available: true,
-    product_available: true,
     sanitize: {
         never: true,
     },
@@ -35,7 +34,6 @@ llvm_prebuilt_library_static {
 cc_defaults {
     name: "libclang_rt-prebuilt-default",
     ramdisk_available: true,
-    vendor_ramdisk_available: true,
     apex_available: [
         "//apex_available:anyapex",
         "//apex_available:platform",
@@ -50,7 +48,6 @@ cc_defaults {
     enabled: false,
     recovery_available: true,
     vendor_available: true,
-    product_available: true,
     native_bridge_supported: true,
     sanitize: {
         never: true,
@@ -107,23 +104,6 @@ libclang_rt_prebuilt_library_static {
     },
 }
 
-libclang_rt_prebuilt_library_static {
-    name: "libclang_rt.builtins-i686-android-exported",
-    defaults: ["libclang_rt.builtins-android-default"],
-    arch: {
-        x86: {
-            enabled: true,
-        },
-    },
-
-    // This exported variant of the builtins library is only intended for use in
-    // libc.so, which exports some builtins symbols for backwards compatibility.
-    visibility: [
-        "//bionic:__subpackages__",
-        "//frameworks/libs/native_bridge_support/libc:__subpackages__",
-    ],
-}
-
 libclang_rt_prebuilt_library_static {
     name: "libclang_rt.builtins-x86_64-android",
     defaults: [
@@ -233,7 +213,7 @@ libclang_rt_prebuilt_library_shared {
 
 ///////////////////////////////////////////////////////////////////////////////
 libclang_rt_llndk_library {
-    name: "libclang_rt.asan-arm-android.llndk",
+    name: "libclang_rt.asan-arm-android",
     native_bridge_supported: true,
     enabled: false,
     arch: {
@@ -244,7 +224,7 @@ libclang_rt_llndk_library {
 }
 
 libclang_rt_llndk_library {
-    name: "libclang_rt.asan-aarch64-android.llndk",
+    name: "libclang_rt.asan-aarch64-android",
     native_bridge_supported: true,
     enabled: false,
     arch: {
@@ -255,7 +235,7 @@ libclang_rt_llndk_library {
 }
 
 libclang_rt_llndk_library {
-    name: "libclang_rt.asan-i686-android.llndk",
+    name: "libclang_rt.asan-i686-android",
     native_bridge_supported: true,
     enabled: false,
     arch: {
@@ -266,7 +246,7 @@ libclang_rt_llndk_library {
 }
 
 libclang_rt_llndk_library {
-    name: "libclang_rt.asan-x86_64-android.llndk",
+    name: "libclang_rt.asan-x86_64-android",
     native_bridge_supported: true,
     enabled: false,
     arch: {
@@ -278,7 +258,7 @@ libclang_rt_llndk_library {
 
 ///////////////////////////////////////////////////////////////////////////////
 libclang_rt_llndk_library {
-    name: "libclang_rt.hwasan-aarch64-android.llndk",
+    name: "libclang_rt.hwasan-aarch64-android",
     enabled: false,
     arch: {
         arm64: {
@@ -294,7 +274,6 @@ cc_defaults {
     sdk_version: "minimum",
     enabled: false,
     vendor_available: true,
-    product_available: true,
     recovery_available: true,
     double_loadable: true,
     stl: "c++_shared",
@@ -385,9 +364,7 @@ cc_defaults {
     sdk_version: "minimum",
     enabled: false,
     vendor_available: true,
-    product_available: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
 }
 
 libclang_rt_prebuilt_library_static {
@@ -467,7 +444,6 @@ libclang_rt_prebuilt_library_static {
     enabled: false,
     recovery_available: true,
     vendor_available: true,
-    product_available: true,
     host_supported: true,
     arch: {
         arm64: {
@@ -506,7 +482,6 @@ cc_defaults {
     enabled: false,
     recovery_available: true,
     vendor_available: true,
-    product_available: true,
 }
 
 libclang_rt_prebuilt_library_static {
@@ -557,7 +532,6 @@ libclang_rt_prebuilt_library_static {
     enabled: false,
     host_supported: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     target: {
         linux_glibc_x86_64: {
             enabled: true,
@@ -576,7 +550,6 @@ cc_defaults {
     enabled: false,
     host_supported: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     sanitize: {
         never: true,
     },
@@ -633,7 +606,6 @@ cc_defaults {
     enabled: false,
     recovery_available: true,
     vendor_available: true,
-    product_available: true,
     sanitize: {
         never: true,
     },
@@ -687,7 +659,6 @@ libclang_rt_prebuilt_library_static {
     enabled: false,
     host_supported: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     target: {
         linux_glibc_x86: {
             enabled: true,
@@ -706,9 +677,7 @@ cc_defaults {
     sdk_version: "minimum",
     enabled: false,
     vendor_available: true,
-    product_available: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     vndk: {
         enabled: true,
     },
@@ -766,9 +735,7 @@ cc_defaults {
     defaults: ["libclang_rt-prebuilt-default"],
     enabled: false,
     vendor_available: true,
-    product_available: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     sanitize: {
         never: true,
     },
@@ -822,9 +789,7 @@ cc_defaults {
     sdk_version: "23",
     enabled: false,
     vendor_available: true,
-    product_available: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     vndk: {
         enabled: true,
     },
@@ -879,9 +844,7 @@ cc_defaults {
     defaults: ["libclang_rt-prebuilt-default"],
     enabled: false,
     vendor_available: true,
-    product_available: true,
     ramdisk_available: false,
-    vendor_ramdisk_available: false,
     sanitize: {
         never: true,
     },
@@ -938,7 +901,6 @@ cc_defaults {
     sdk_version: "minimum",
     recovery_available: true,
     vendor_available: true,
-    product_available: true,
     native_bridge_supported: true,
     sanitize: {
         never: true,
@@ -950,23 +912,6 @@ cc_defaults {
     system_shared_libs: [],
 }
 
-llvm_prebuilt_library_static {
-    name: "libunwind",
-    defaults: ["libunwind-android-default"],
-}
-
-llvm_prebuilt_library_static {
-    name: "libunwind-exported",
-    defaults: ["libunwind-android-default"],
-
-    // The libunwind-exported.a library is only intended for use with libc.so,
-    // which needs to export the unwinder API.
-    visibility: [
-        "//bionic:__subpackages__",
-        "//frameworks/libs/native_bridge_support/libc:__subpackages__",
-    ],
-}
-
 // -----------------------------------------------------------------------------
 // Export shared libraries for host tools (libLLVM, libclang, libc++).  These
 // are exported only when the LLVM_BUILD_HOST_TOOLS environment variable is set.
diff --git a/soong/clangprebuilts.go b/soong/clangprebuilts.go
index bf7f5262..1f18f1c3 100644
--- a/soong/clangprebuilts.go
+++ b/soong/clangprebuilts.go
@@ -165,12 +165,6 @@ type archProps struct {
 	Android_x86_64 struct {
 		Srcs []string
 	}
-	Linux_bionic_arm64 struct {
-		Srcs []string
-	}
-	Linux_bionic_x86_64 struct {
-		Srcs []string
-	}
 }
 
 func llvmPrebuiltLibraryStatic(ctx android.LoadHookContext) {
@@ -193,8 +187,6 @@ func llvmPrebuiltLibraryStatic(ctx android.LoadHookContext) {
 	p.Target.Android_arm64.Srcs = []string{path.Join(libDir, "aarch64", name)}
 	p.Target.Android_x86.Srcs = []string{path.Join(libDir, "i386", name)}
 	p.Target.Android_x86_64.Srcs = []string{path.Join(libDir, "x86_64", name)}
-	p.Target.Linux_bionic_arm64.Srcs = []string{path.Join(libDir, "aarch64", name)}
-	p.Target.Linux_bionic_x86_64.Srcs = []string{path.Join(libDir, "x86_64", name)}
 	ctx.AppendProperties(p)
 }
 
-- 
2.17.1

