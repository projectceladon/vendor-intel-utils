From db5dc1320e828a9f2ce3e1f629ce69d216599e7b Mon Sep 17 00:00:00 2001
From: bxu10x <bingx.xu@intel.com>
Date: Fri, 16 Oct 2020 11:17:40 +0800
Subject: [PATCH] Add a tag to check if current layout need to be relayouted.

Change-Id: I34c0b132df2ec9c07b9cca7f41f4306950a6377c
Tracked-On: OAM-92271
Signed-off-by: bxu10x <bingx.xu@intel.com>
---
 .../java/com/android/server/wm/WindowManagerService.java | 3 +++
 .../core/java/com/android/server/wm/WindowState.java     | 9 +++++++++
 .../java/com/android/server/wm/WindowStateAnimator.java  | 2 +-
 3 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/wm/WindowManagerService.java b/services/core/java/com/android/server/wm/WindowManagerService.java
index 7a2c28bd5c8..730afb59227 100644
--- a/services/core/java/com/android/server/wm/WindowManagerService.java
+++ b/services/core/java/com/android/server/wm/WindowManagerService.java
@@ -1975,6 +1975,9 @@ public class WindowManagerService extends IWindowManager.Stub
 
             win.mRelayoutCalled = true;
             win.mInRelayout = true;
+            if (requestedWidth != win.mFrame.width() || requestedWidth != win.mRequestedWidth ||win.isNeedReLayout()) {
+                win.mNeedRelayout = true;
+            }
 
             win.mViewVisibility = viewVisibility;
             if (DEBUG_SCREEN_ON) {
diff --git a/services/core/java/com/android/server/wm/WindowState.java b/services/core/java/com/android/server/wm/WindowState.java
index bee70a01194..d2d7984529e 100644
--- a/services/core/java/com/android/server/wm/WindowState.java
+++ b/services/core/java/com/android/server/wm/WindowState.java
@@ -475,6 +475,8 @@ class WindowState extends WindowContainer<WindowState> implements WindowManagerP
 
     boolean mInRelayout;
 
+    boolean mNeedRelayout;
+
     /**
      * If the application has called relayout() with changes that can
      * impact its window's size, we need to perform a layout pass on it
@@ -1550,6 +1552,13 @@ class WindowState extends WindowContainer<WindowState> implements WindowManagerP
                 && !mAnimatingExit && !mDestroying;
     }
 
+    boolean isNeedReLayout() {
+        if (mRequestedWidth != mLastRequestedWidth || mRequestedHeight != mLastRequestedHeight) {
+            return true;
+        }
+        return false;
+    }
+
     /**
      * Is this window currently on-screen?  It is on-screen either if it
      * is visible or it is currently running an animation before no longer
diff --git a/services/core/java/com/android/server/wm/WindowStateAnimator.java b/services/core/java/com/android/server/wm/WindowStateAnimator.java
index 410e1587924..beb8479d5bf 100644
--- a/services/core/java/com/android/server/wm/WindowStateAnimator.java
+++ b/services/core/java/com/android/server/wm/WindowStateAnimator.java
@@ -888,7 +888,7 @@ class WindowStateAnimator {
         // However, this would be unsafe, as the client may be in the middle
         // of producing a frame at the old size, having just completed layout
         // to find the surface size changed underneath it.
-        final boolean relayout = !w.mRelayoutCalled || w.mInRelayout;
+        final boolean relayout = !w.mRelayoutCalled || w.mInRelayout || w.mNeedRelayout;
         if (relayout) {
             mSurfaceResized = mSurfaceController.setSizeInTransaction(
                     mTmpSize.width(), mTmpSize.height(), recoveringMemory);
-- 
2.17.1

