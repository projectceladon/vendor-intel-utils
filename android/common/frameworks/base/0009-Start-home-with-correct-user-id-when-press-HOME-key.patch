From d437aa55602d673093086da899e8cd74835d651a Mon Sep 17 00:00:00 2001
From: Hongcheng Xie <hongcheng.xie@intel.com>
Date: Tue, 24 Nov 2020 09:45:37 +0800
Subject: [PATCH 9/9] Start home with correct user id when press HOME key

Each display associate with one user when support concurrent
multi users feature, start home with correct user id for the
corresponding user when press HOME key in different display.

Change-Id: I41782db2d80c63ead809d2519750be8d19240121
Tracked-On: ACP-1377
Signed-off-by: Hongcheng Xie <hongcheng.xie@intel.com>
---
 .../server/policy/PhoneWindowManager.java     | 27 ++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 0890b9212d2..21bc00735fb 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -146,6 +146,7 @@ import android.os.SystemProperties;
 import android.os.Trace;
 import android.os.UEventObserver;
 import android.os.UserHandle;
+import android.os.UserManagerInternal;
 import android.os.VibrationEffect;
 import android.os.Vibrator;
 import android.provider.MediaStore;
@@ -190,6 +191,7 @@ import com.android.internal.accessibility.AccessibilityShortcutController;
 import com.android.internal.inputmethod.SoftInputShowHideReason;
 import com.android.internal.logging.MetricsLogger;
 import com.android.internal.logging.nano.MetricsProto;
+import com.android.internal.os.IConcurrentMultiUser;
 import com.android.internal.os.RoSystemProperties;
 import com.android.internal.policy.IKeyguardDismissCallback;
 import com.android.internal.policy.IShortcutService;
@@ -5152,9 +5154,32 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
         }
 
+        int userId = mCurrentUserId;
+        if (RoSystemProperties.SUPPORT_CONCURRENT_USER) {
+            final UserManagerInternal um = LocalServices.getService(UserManagerInternal.class);
+            int id = -1;
+            IConcurrentMultiUser cmu = IConcurrentMultiUser.Stub.asInterface(
+                    ServiceManager.getService("concurrent_user_service"));
+            if (cmu != null) {
+                try {
+                    id = cmu.getUserIdForDisplayId(displayId);
+                    Slog.d(TAG, "startDokckOrHome(): get user id " + id + " for display " + displayId);
+                } catch (RemoteException e) {
+                    Slog.e(TAG, "startDokckOrHome(): exception when get user " + userId + " for display " + displayId);
+                }
+            }
+            if (um.isUserRunning(id)) {
+                userId = id;
+            } else {
+                Slog.w(TAG, "startDokckOrHome(): can't find running user " + id + " for display " + displayId);
+            }
+        }
+
+        Slog.i(TAG, "startDockOrHome for user " + userId + " in display " + displayId);
         // Start home.
-        mActivityTaskManagerInternal.startHomeOnDisplay(mCurrentUserId, "startDockOrHome",
+        mActivityTaskManagerInternal.startHomeOnDisplay(userId, "startDockOrHome",
                 displayId, true /* allowInstrumenting */, fromHomeKey);
+
     }
 
     /**
-- 
2.17.1

