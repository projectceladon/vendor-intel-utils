From 4738e91da9444f90c1483c95471a7b9097c26055 Mon Sep 17 00:00:00 2001
From: yingzhex <yingzhenx.li@intel.com>
Date: Wed, 11 Nov 2020 14:14:26 +0800
Subject: [PATCH] Show display and user id info in different display

1 setprop debug.show.displayuserid true.
2 Launch application.

Change-Id: I2faa710ffc863fa5711e766ecf843f3d65002f4f
Tracked-On: ACP-1335
Signed-off-by: yingzhex <yingzhenx.li@intel.com>
---
 core/res/res/layout/display_id.xml            | 25 ++++++++++++
 core/res/res/values/symbols.xml               |  1 +
 .../com/android/server/wm/ActivityRecord.java | 38 +++++++++++++++++++
 3 files changed, 64 insertions(+)
 create mode 100644 core/res/res/layout/display_id.xml

diff --git a/core/res/res/layout/display_id.xml b/core/res/res/layout/display_id.xml
new file mode 100644
index 00000000000..03c014b3e25
--- /dev/null
+++ b/core/res/res/layout/display_id.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2006 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content" android:layout_height="wrap_content"
+    android:textAppearance="?android:attr/textAppearanceLarge"
+    android:gravity="center"
+    android:padding="3dp"
+    android:background="@drawable/safe_mode_background"
+    android:textColor="@color/safe_mode_text"
+    android:text="displayid"
+/>
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index 871924255e6..a25db12c5b3 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -1998,6 +1998,7 @@
   <java-symbol type="layout" name="am_compat_mode_dialog" />
   <java-symbol type="layout" name="launch_warning" />
   <java-symbol type="layout" name="safe_mode" />
+  <java-symbol type="layout" name="display_id" />
   <java-symbol type="layout" name="simple_list_item_2_single_choice" />
   <java-symbol type="layout" name="app_error_dialog" />
   <java-symbol type="string" name="accessibility_binding_label" />
diff --git a/services/core/java/com/android/server/wm/ActivityRecord.java b/services/core/java/com/android/server/wm/ActivityRecord.java
index c4cfd64de5a..43c6fc9ef8a 100644
--- a/services/core/java/com/android/server/wm/ActivityRecord.java
+++ b/services/core/java/com/android/server/wm/ActivityRecord.java
@@ -43,6 +43,7 @@ import static android.app.WindowConfiguration.ACTIVITY_TYPE_UNDEFINED;
 import static android.app.WindowConfiguration.ROTATION_UNDEFINED;
 import static android.app.WindowConfiguration.WINDOWING_MODE_PINNED;
 import static android.app.WindowConfiguration.activityTypeToString;
+import static android.content.Context.WINDOW_SERVICE;
 import static android.content.Intent.ACTION_MAIN;
 import static android.content.Intent.CATEGORY_HOME;
 import static android.content.Intent.CATEGORY_LAUNCHER;
@@ -262,6 +263,7 @@ import android.os.PersistableBundle;
 import android.os.Process;
 import android.os.RemoteException;
 import android.os.SystemClock;
+import android.os.SystemProperties;
 import android.os.Trace;
 import android.os.UserHandle;
 import android.os.storage.StorageManager;
@@ -279,16 +281,20 @@ import android.util.proto.ProtoOutputStream;
 import android.view.AppTransitionAnimationSpec;
 import android.view.DisplayCutout;
 import android.view.DisplayInfo;
+import android.view.Gravity;
 import android.view.IAppTransitionAnimationSpecsFuture;
 import android.view.IApplicationToken;
 import android.view.InputApplicationHandle;
+import android.view.LayoutInflater;
 import android.view.RemoteAnimationDefinition;
 import android.view.RemoteAnimationTarget;
 import android.view.SurfaceControl;
 import android.view.SurfaceControl.Transaction;
+import android.view.View;
 import android.view.WindowManager;
 import android.view.WindowManager.LayoutParams;
 import android.view.animation.Animation;
+import android.widget.TextView;
 import android.window.WindowContainerToken;
 
 import com.android.internal.R;
@@ -329,6 +335,7 @@ import java.lang.ref.WeakReference;
 import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Objects;
@@ -669,6 +676,8 @@ final class ActivityRecord extends WindowToken implements WindowManagerService.A
     // windows, where the app hasn't had time to set a value on the window.
     int mRotationAnimationHint = -1;
 
+    private static HashMap<Integer, View> dbgViewMaps = new HashMap<Integer, View>();
+
     ArrayDeque<Rect> mFrozenBounds = new ArrayDeque<>();
     ArrayDeque<Configuration> mFrozenMergedConfig = new ArrayDeque<>();
 
@@ -1870,6 +1879,35 @@ final class ActivityRecord extends WindowToken implements WindowManagerService.A
             WindowManagerPolicy.StartingSurface surface = null;
             try {
                 surface = startingData.createStartingSurface(ActivityRecord.this);
+                if (RoSystemProperties.SUPPORT_CONCURRENT_USER
+                        && SystemProperties.getBoolean("debug.show.displayuserid", false)) {
+                    View v;
+                    int displayId = ActivityRecord.this.getDisplayContent().getDisplayId();
+                    int userId = ActivityRecord.this.mUserId;
+                    if (dbgViewMaps.containsKey(displayId)) {
+                        v = dbgViewMaps.get(displayId);
+                        ((TextView) v).setText("DId: " + displayId + " UserId: " + userId);
+                    } else {
+                        int oldDisplayId =  mAtmService.mContext.getDisplayId();
+                        v = LayoutInflater.from(mAtmService.mContext).inflate(
+                                com.android.internal.R.layout.display_id, null);
+                        dbgViewMaps.put(displayId, v);
+                        mAtmService.mContext.updateDisplay(displayId);
+                        ((TextView) v).setText("DId: " + displayId + " UserId: " + userId);
+                        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+                        lp.type = WindowManager.LayoutParams.TYPE_SECURE_SYSTEM_OVERLAY;
+                        lp.width = WindowManager.LayoutParams.WRAP_CONTENT;
+                        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+                        lp.gravity = Gravity.BOTTOM | Gravity.START;
+                        lp.format = v.getBackground().getOpacity();
+                        lp.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
+                                | WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE;
+                        lp.privateFlags |= WindowManager.LayoutParams.SYSTEM_FLAG_SHOW_FOR_ALL_USERS;
+                        WindowManager wm = (WindowManager) mAtmService.mContext.getSystemService(WINDOW_SERVICE);
+                        wm.addView(v, lp);
+                        mAtmService.mContext.updateDisplay(oldDisplayId);
+                    }
+                }
             } catch (Exception e) {
                 Slog.w(TAG, "Exception when adding starting window", e);
             }
-- 
2.25.1

