From e2216020e80cac8991059f80081d40db4a899528 Mon Sep 17 00:00:00 2001
From: Hongcheng Xie <hongcheng.xie@intel.com>
Date: Thu, 3 Sep 2020 09:53:42 +0800
Subject: [PATCH 1/2] Disable SELINUX to avoid crash

Change-Id: I127ae27fc5e4b3f0ca1407e9c09198c4de5aacc5
Signed-off-by: Hongcheng Xie <hongcheng.xie@intel.com>
---
 core/jni/com_android_internal_os_Zygote.cpp | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/core/jni/com_android_internal_os_Zygote.cpp b/core/jni/com_android_internal_os_Zygote.cpp
index 9eede83e21e5..1b2b5f039e3a 100644
--- a/core/jni/com_android_internal_os_Zygote.cpp
+++ b/core/jni/com_android_internal_os_Zygote.cpp
@@ -1247,6 +1247,7 @@ static void isolateAppDataPerPackage(int userId, std::string_view package_name,
   createAndMountAppData(package_name, ce_data_path, mirrorCePath, actualCePath, fail_fn);
 }
 
+#ifndef _DISALBE_SELINUX_
 // Relabel directory
 static void relabelDir(const char* path, security_context_t context, fail_fn_t fail_fn) {
   if (setfilecon(path, context) != 0) {
@@ -1276,6 +1277,7 @@ static void relabelAllDirs(const char* path, security_context_t context, fail_fn
   }
   closedir(dir);
 }
+#endif
 
 /**
  * Make other apps data directory not visible in CE, DE storage.
@@ -1330,11 +1332,13 @@ static void isolateAppData(JNIEnv* env, const std::vector<std::string>& merged_d
   snprintf(internalDePath, PATH_MAX, "/data/user_de");
   snprintf(externalPrivateMountPath, PATH_MAX, "/mnt/expand");
 
+#ifndef _DISALBE_SELINUX_
   security_context_t dataDataContext = nullptr;
   if (getfilecon(internalDePath, &dataDataContext) < 0) {
     fail_fn(CREATE_ERROR("Unable to getfilecon on %s %s", internalDePath,
         strerror(errno)));
   }
+#endif
 
   MountAppDataTmpFs(internalLegacyCePath, fail_fn);
   MountAppDataTmpFs(internalCePath, fail_fn);
@@ -1421,6 +1425,8 @@ static void isolateAppData(JNIEnv* env, const std::vector<std::string>& merged_d
     isolateAppDataPerPackage(userId, packageName, volUuid, ceDataInode,
         actualCePath, actualDePath, fail_fn);
   }
+
+#ifndef _DISALBE_SELINUX_
   // We set the label AFTER everything is done, as we are applying
   // the file operations on tmpfs. If we set the label when we mount
   // tmpfs, SELinux will not happy as we are changing system_data_files.
@@ -1458,6 +1464,7 @@ static void isolateAppData(JNIEnv* env, const std::vector<std::string>& merged_d
   closedir(dir);
 
   freecon(dataDataContext);
+#endif
 }
 
 static void insertPackagesToMergedList(JNIEnv* env,
@@ -1768,6 +1775,7 @@ static void SpecializeCommon(JNIEnv* env, uid_t uid, gid_t gid, jintArray gids,
   __android_log_close();
   AStatsSocket_close();
 
+#ifndef _DISALBE_SELINUX_
   const char* se_info_ptr = se_info.has_value() ? se_info.value().c_str() : nullptr;
   const char* nice_name_ptr = nice_name.has_value() ? nice_name.value().c_str() : nullptr;
 
@@ -1775,6 +1783,7 @@ static void SpecializeCommon(JNIEnv* env, uid_t uid, gid_t gid, jintArray gids,
     fail_fn(CREATE_ERROR("selinux_android_setcontext(%d, %d, \"%s\", \"%s\") failed",
                          uid, is_system_server, se_info_ptr, nice_name_ptr));
   }
+#endif
 
   // Make it easier to debug audit logs by setting the main thread's name to the
   // nice name rather than "app_process".
@@ -1793,11 +1802,13 @@ static void SpecializeCommon(JNIEnv* env, uid_t uid, gid_t gid, jintArray gids,
       fail_fn("Error calling post fork system server hooks.");
     }
 
+#ifndef _DISALBE_SELINUX_
     // TODO(oth): Remove hardcoded label here (b/117874058).
     static const char* kSystemServerLabel = "u:r:system_server:s0";
     if (selinux_android_setcon(kSystemServerLabel) != 0) {
       fail_fn(CREATE_ERROR("selinux_android_setcon(%s)", kSystemServerLabel));
     }
+#endif
   }
 
   if (is_child_zygote) {
-- 
2.17.1

