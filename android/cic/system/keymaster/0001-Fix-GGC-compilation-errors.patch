From 40fdc43e6b116a2f01f5dcd1588d61fba06a74d1 Mon Sep 17 00:00:00 2001
From: Roberto Pereira <rpere@google.com>
Date: Thu, 9 Aug 2018 15:21:24 -0700
Subject: [PATCH] Fix GGC compilation errors

The 'weak' attribute only makes sense for public symbols but const has
private linkage by default. Added extern to explcitly declare external
linkage.

GGC seems to not be able to infer the move senmantics + cast at the same
time. Added an explicit move

Bug: 110153632
Test: VtsHalKeymasterV3_0TargetTest
Change-Id: I623f9469bea58fb267be24ff7ec18cd1b186be89
---
 android_keymaster/keymaster_stl.cpp | 2 +-
 km_openssl/hmac_operation.cpp       | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/android_keymaster/keymaster_stl.cpp b/android_keymaster/keymaster_stl.cpp
index a18823c..56296b4 100644
--- a/android_keymaster/keymaster_stl.cpp
+++ b/android_keymaster/keymaster_stl.cpp
@@ -22,7 +22,7 @@ namespace std {
 struct nothrow_t {};
 }
 
-const std::nothrow_t __attribute__((weak)) std::nothrow = {};
+extern const std::nothrow_t __attribute__((weak)) std::nothrow = {};
 
 void* __attribute__((weak)) operator new(size_t __sz, const std::nothrow_t&) {
     return malloc(__sz);
diff --git a/km_openssl/hmac_operation.cpp b/km_openssl/hmac_operation.cpp
index c4f180e..30edf36 100644
--- a/km_openssl/hmac_operation.cpp
+++ b/km_openssl/hmac_operation.cpp
@@ -74,7 +74,7 @@ OperationPtr HmacOperationFactory::CreateOperation(Key&& key, const Authorizatio
 
     if (*error != KM_ERROR_OK) return nullptr;
 
-    return op;
+    return move(op);
 }
 
 static keymaster_digest_t supported_digests[] = {KM_DIGEST_SHA1, KM_DIGEST_SHA_2_224,
-- 
2.25.2

