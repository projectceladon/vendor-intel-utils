From 2430ef27f923ef2043ed54d76c3ff94a0e794876 Mon Sep 17 00:00:00 2001
From: Bin Yang <bin.y.yang@intel.com>
Date: Sun, 2 Jun 2019 19:22:56 +0800
Subject: [PATCH] [Disable SELINUX] Tmp patch to disable selinux, it should be
 reverted

Change-Id: I4cc986782341ef3c7cac9bb0aea31497aa9b631a
Tracked-On:
Signed-off-by: Bin Yang <bin.y.yang@intel.com>
---
 keystore/keystore_main.cpp |  2 ++
 keystore/permissions.cpp   | 14 +++++++++++++-
 2 files changed, 15 insertions(+), 1 deletion(-)
 mode change 100644 => 100755 keystore/keystore_main.cpp
 mode change 100644 => 100755 keystore/permissions.cpp

diff --git a/keystore/keystore_main.cpp b/keystore/keystore_main.cpp
old mode 100644
new mode 100755
index 52e83c8..4c02ded
--- a/keystore/keystore_main.cpp
+++ b/keystore/keystore_main.cpp
@@ -141,7 +141,9 @@ int main(int argc, char* argv[]) {
     CHECK(kmDevices[SecurityLevel::TRUSTED_ENVIRONMENT])
         << "Error no viable keymaster device found";
 
+#ifndef _DISALBE_SELINUX_
     CHECK(configure_selinux() != -1) << "Failed to configure SELinux.";
+#endif
 
     auto halVersion = kmDevices[SecurityLevel::TRUSTED_ENVIRONMENT]->halVersion();
 
diff --git a/keystore/permissions.cpp b/keystore/permissions.cpp
old mode 100644
new mode 100755
index b297c59..6b056cf
--- a/keystore/permissions.cpp
+++ b/keystore/permissions.cpp
@@ -124,6 +124,7 @@ int configure_selinux() {
     return 0;
 }
 
+#ifndef _DISALBE_SELINUX_
 static bool keystore_selinux_check_access(uid_t uid, perm_t perm, pid_t spid) {
     audit_data ad;
     char* sctx = NULL;
@@ -147,6 +148,7 @@ static bool keystore_selinux_check_access(uid_t uid, perm_t perm, pid_t spid) {
     freecon(sctx);
     return allowed;
 }
+#endif
 
 /**
  * Returns the UID that the callingUid should act as. This is here for
@@ -166,6 +168,9 @@ uid_t get_keystore_euid(uid_t uid) {
 
 bool has_permission(uid_t uid, perm_t perm, pid_t spid) {
     // All system users are equivalent for multi-user support.
+#ifdef _DISALBE_SELINUX_
+    (void) spid;
+#endif
     if (get_app_id(uid) == AID_SYSTEM) {
         uid = AID_SYSTEM;
     }
@@ -173,11 +178,18 @@ bool has_permission(uid_t uid, perm_t perm, pid_t spid) {
     for (size_t i = 0; i < sizeof(user_perms) / sizeof(user_perms[0]); i++) {
         struct user_perm user = user_perms[i];
         if (user.uid == uid) {
+#ifndef _DISALBE_SELINUX_
             return (user.perms & perm) && keystore_selinux_check_access(uid, perm, spid);
+#else
+            return (user.perms & perm); // && keystore_selinux_check_access(uid, perm, spid);
+#endif
         }
     }
-
+#ifndef _DISALBE_SELINUX_
     return (DEFAULT_PERMS & perm) && keystore_selinux_check_access(uid, perm, spid);
+#else
+    return (DEFAULT_PERMS & perm); // && keystore_selinux_check_access(uid, perm, spid);
+#endif
 }
 
 /**
-- 
2.21.0

