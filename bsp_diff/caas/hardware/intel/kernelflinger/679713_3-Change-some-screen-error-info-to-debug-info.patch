From 22bbdb1ec7b914b593512a08b7026f231596577e Mon Sep 17 00:00:00 2001
From: Ming Tan <ming.tan@intel.com>
Date: Thu, 5 Sep 2019 14:43:29 +0800
Subject: [PATCH 4/6] Change some screen error info to debug info.

Change-Id: I8f3980e62ef32a17dc69a76bd906c75b080d5f5f
Tracked-On:
Signed-off-by: Ming Tan <ming.tan@intel.com>
---
 avb/libavb/avb_descriptor.c          | 2 +-
 avb/libavb/avb_slot_verify.c         | 2 +-
 avb/libavb/avb_vbmeta_image.c        | 2 +-
 avb/libavb_ab/avb_ab_flow.c          | 6 +++---
 libkernelflinger/rpmb/rpmb_storage.c | 8 ++------
 5 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/avb/libavb/avb_descriptor.c b/avb/libavb/avb_descriptor.c
index 4f8e925..921612a 100644
--- a/avb/libavb/avb_descriptor.c
+++ b/avb/libavb/avb_descriptor.c
@@ -66,7 +66,7 @@ bool avb_descriptor_foreach(const uint8_t* image_data,
 
   /* Ensure magic is correct. */
   if (avb_memcmp(image_data, AVB_MAGIC, AVB_MAGIC_LEN) != 0) {
-    avb_error("Magic is incorrect.\n");
+    avb_debug("Magic is incorrect.\n");
     goto out;
   }
 
diff --git a/avb/libavb/avb_slot_verify.c b/avb/libavb/avb_slot_verify.c
index 75b26d6..ce2b797 100755
--- a/avb/libavb/avb_slot_verify.c
+++ b/avb/libavb/avb_slot_verify.c
@@ -737,7 +737,7 @@ static AvbSlotVerifyResult load_and_verify_vbmeta(
     case AVB_VBMETA_VERIFY_RESULT_INVALID_VBMETA_HEADER:
       /* No way to continue this case. */
       ret = AVB_SLOT_VERIFY_RESULT_ERROR_INVALID_METADATA;
-      avb_errorv(full_partition_name,
+      avb_debugv(full_partition_name,
                  ": Error verifying vbmeta image: invalid vbmeta header\n",
                  NULL);
       goto out;
diff --git a/avb/libavb/avb_vbmeta_image.c b/avb/libavb/avb_vbmeta_image.c
index 21bbf92..935cbca 100644
--- a/avb/libavb/avb_vbmeta_image.c
+++ b/avb/libavb/avb_vbmeta_image.c
@@ -56,7 +56,7 @@ AvbVBMetaVerifyResult avb_vbmeta_image_verify(
 
   /* Ensure magic is correct. */
   if (avb_safe_memcmp(data, AVB_MAGIC, AVB_MAGIC_LEN) != 0) {
-    avb_error("Magic is incorrect.\n");
+    avb_debug("Magic is incorrect.\n");
     goto out;
   }
 
diff --git a/avb/libavb_ab/avb_ab_flow.c b/avb/libavb_ab/avb_ab_flow.c
index bf6eab1..b0317ec 100644
--- a/avb/libavb_ab/avb_ab_flow.c
+++ b/avb/libavb_ab/avb_ab_flow.c
@@ -27,7 +27,7 @@
 bool avb_ab_data_verify_and_byteswap(const AvbABData* src, AvbABData* dest) {
   /* Ensure magic is correct. */
   if (avb_safe_memcmp(src->magic, AVB_AB_MAGIC, AVB_AB_MAGIC_LEN) != 0) {
-    avb_error("Magic is incorrect.\n");
+    avb_debug("Magic is incorrect.\n");
     return false;
   }
 
@@ -101,7 +101,7 @@ AvbIOResult avb_ab_data_read(AvbABOps* ab_ops, AvbABData* data) {
   }
 
   if (!avb_ab_data_verify_and_byteswap(&serialized, data)) {
-    avb_error(
+    avb_debug(
         "Error validating A/B metadata from disk. "
         "Resetting and writing new A/B metadata to disk.\n");
     avb_ab_data_init(data);
@@ -285,7 +285,7 @@ AvbABFlowResult avb_ab_flow(AvbABOps* ab_ops,
       }
 
       if (set_slot_unbootable) {
-        avb_errorv("Error verifying slot ",
+        avb_debugv("Error verifying slot ",
                    slot_suffixes[n],
                    " with result ",
                    avb_slot_verify_result_to_string(verify_result),
diff --git a/libkernelflinger/rpmb/rpmb_storage.c b/libkernelflinger/rpmb/rpmb_storage.c
index 275cbec..15c6087 100644
--- a/libkernelflinger/rpmb/rpmb_storage.c
+++ b/libkernelflinger/rpmb/rpmb_storage.c
@@ -514,7 +514,7 @@ static EFI_STATUS rpmb_read_counter_simulate(const void *key, RPMB_RESPONSE_RESU
 
 	efi_ret = simulate_get_rpmb_counter(&write_counter, key, result);
 	if (EFI_ERROR(efi_ret)) {
-		efi_perror(efi_ret, L"Failed to read counter for simulate");
+		debug(L"Failed to read counter for simulate: %r", efi_ret);
 		return efi_ret;
 	}
 	return EFI_SUCCESS;
@@ -711,7 +711,7 @@ EFI_STATUS rpmb_key_init(void)
 			break;
 
 		if (result == RPMB_RES_NO_AUTH_KEY_PROGRAM) {
-			efi_perror(ret, L"key is not programmed, use the first derived key.");
+			debug(L"key is not programmed, use the first derived key: %r", ret);
 			break;
 		}
 
@@ -743,10 +743,6 @@ EFI_STATUS rpmb_key_init(void)
 
 	// Should output this info, since there maybe some error log about some keys failed at before.
 	log(L"Init RPMB key successfully\n");
-#ifdef USE_UI
-	if (is_UEFI())
-		ui_print(L"Init RPMB key successfully");
-#endif
 
 err_get_rpmb_key:
 	memset(key, 0, sizeof(key));
-- 
2.21.0

