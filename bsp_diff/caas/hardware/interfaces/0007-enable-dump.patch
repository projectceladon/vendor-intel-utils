From 35cecc8f3b9995d61529acb8c0c23caefe684824 Mon Sep 17 00:00:00 2001
From: padmashree mandri <padmashree.mandri@intel.com>
Date: Thu, 16 Jan 2025 16:48:27 +0000
Subject: [PATCH] enable dump

Signed-off-by: padmashree mandri <padmashree.mandri@intel.com>
---
 audio/aidl/default/alsa/StreamAlsa.cpp | 43 +++++++++++++++++++++-----
 1 file changed, 36 insertions(+), 7 deletions(-)

diff --git a/audio/aidl/default/alsa/StreamAlsa.cpp b/audio/aidl/default/alsa/StreamAlsa.cpp
index cc8093c28e..479933500e 100644
--- a/audio/aidl/default/alsa/StreamAlsa.cpp
+++ b/audio/aidl/default/alsa/StreamAlsa.cpp
@@ -35,7 +35,13 @@
 #define PRIMARY_CHANNEL_COUNT 2
 #define HFP_CHANNEL_COUNT 1
 #define PRIMARY_SAMPLE_RATE 48000
-#define HFP_SAMPLE_RATE 8000
+#define HFP_SAMPLE_RATE 800i0
+FILE *sco_call_write = NULL;
+FILE *sco_call_write_remapped = NULL;
+FILE *sco_call_write_bt = NULL;
+FILE *sco_call_read = NULL;
+FILE *sco_call_read_remapped = NULL;
+FILE *sco_call_read_bt = NULL;
 struct resampler_itfe *voip_out_resampler;
 struct resampler_itfe *voip_in_resampler;
 namespace aidl::android::hardware::audio::core {
@@ -56,6 +62,17 @@ StreamAlsa::~StreamAlsa() {
 ::android::status_t StreamAlsa::init() {
     voip_out_resampler = NULL;
     voip_in_resampler = NULL;
+    sco_call_write = fopen("/data/dump/sco_call_write.pcm", "a");
+    sco_call_write_remapped = fopen("/data/dump/sco_call_write_remapped.pcm", "a");
+    sco_call_write_bt = fopen("/data/dump/sco_call_write_bt.pcm", "a");
+    sco_call_read = fopen("/data/dump/sco_call_read.pcm", "a");
+    sco_call_read_remapped = fopen("/data/dump/sco_call_read_remapped.pcm", "a");
+    sco_call_read_bt = fopen("/data/dump/sco_call_read_bt.pcm", "a");
+    if(sco_call_write == NULL || sco_call_write_remapped == NULL || sco_call_write_bt == NULL || sco_call_read == NULL ||
+        sco_call_read_bt == NULL || sco_call_read_remapped == NULL || out_write_dump == NULL || in_read_dump == NULL)
+        LOG(ERROR) << __func__ << "failed to open dump files";
+    else
+        LOG(ERROR) << __func__ << "success in opening dump files";
     return mConfig.has_value() ? ::android::OK : ::android::NO_INIT;
 }
 
@@ -202,12 +219,6 @@ StreamAlsa::~StreamAlsa() {
 	    int16_t *buf_out = (int16_t *) malloc (buf_size_out);
             int16_t *buf_in = (int16_t *) malloc (buf_size_in);
             int16_t *buf_remapped = (int16_t *) malloc (buf_size_remapped);
-            FILE *out_write_dump = fopen("/data/bt_call_before.pcm", "a");
-	    if (out_write_dump != NULL) {
-	        LOG(ERROR) << "Writing to bt_call_before.pcm";
-                fwrite(buffer, 1, bytesToTransfer, out_write_dump);
-	    } else 
-	        LOG(ERROR) << "Failed to Write to bt_call_before.pcm";
 	    //resample from 48 to 8k
            //adjust channel from 2 to 1 channel
 	   if (voip_out_resampler == NULL) { 
@@ -299,6 +310,24 @@ void StreamAlsa::shutdown() {
     if(voip_out_resampler != NULL) {
         release_resampler(voip_in_resampler);
         voip_in_resampler = NULL;
+    }
+    if(sco_call_write != NULL) {
+        fclose(sco_call_write);
+    }
+    if(sco_call_write_remapped != NULL) {
+        fclose(sco_call_write_remapped);
+    }
+    if(sco_call_write_bt != NULL) {
+        fclose(sco_call_write_bt);
+    }
+    if(sco_call_read != NULL) {
+        fclose(sco_call_read);
+    }
+    if(sco_call_read_remapped != NULL) {
+        fclose(sco_call_read_remapped);
+    }
+    if(sco_call_read_bt != NULL) {
+        fclose(sco_call_read_bt);
     }
      mAlsaDeviceProxies.clear();
 }
-- 
2.34.1

