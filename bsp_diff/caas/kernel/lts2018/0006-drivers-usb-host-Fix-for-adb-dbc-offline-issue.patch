From a5a7024e6b2624bf075f7b6854168101f47d68cb Mon Sep 17 00:00:00 2001
From: Balaji <m.balaji@intel.com>
Date: Fri, 16 Aug 2019 20:20:30 +0530
Subject: drivers: usb: host: Fix for adb dbc offline issue

Adb daemon doesnt know about dbc disconnect and connect.hence offline
issue occurs when replug.Changes made usb dbc layer to send
usb dbc events from kernel to restart adb daemon.

Change-Id: If7ce5c0dc22ec9c624d502f2b0aa81ccf12841a0
Tracked-On: https://jira.devtools.intel.com/browse/OAM-84514
Signed-off-by: Balaji <m.balaji@intel.com>
---
 drivers/usb/host/xhci-dbgcap.c | 33 ++++++++++++++++++++++++++++++++-
 drivers/usb/host/xhci-dbgcap.h |  1 +
 2 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/host/xhci-dbgcap.c b/drivers/usb/host/xhci-dbgcap.c
index 08c31b457f1d..8fad8331f000 100644
--- a/drivers/usb/host/xhci-dbgcap.c
+++ b/drivers/usb/host/xhci-dbgcap.c
@@ -10,6 +10,8 @@
 #include <linux/slab.h>
 #include <linux/nls.h>
 #include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/kdev_t.h>
 
 #include "xhci.h"
 #include "xhci-trace.h"
@@ -653,6 +655,33 @@ static void dbc_handle_xfer_event(struct xhci_hcd *xhci, union xhci_trb *event)
 	xhci_dbc_giveback(req, status);
 }
 
+
+static void xhci_dbc_uevent_work(struct work_struct *data)
+{
+	struct xhci_dbc *dbc  = container_of(data, struct xhci_dbc, notify_work);
+        char *disconnected[2] = { "USB_STATE=DISCONNECTED", NULL };
+        char *connected[2]    = { "USB_STATE=DBCCONNECTED", NULL };
+        char *configured[2]   = { "USB_STATE=CONFIGURED", NULL };
+	struct xhci_hcd         *xhci = dbc->xhci;
+	struct device           *dev = xhci_to_hcd(xhci)->self.controller;
+
+	switch (dbc->state) {
+
+	case DS_CONFIGURED:
+		kobject_uevent_env(&dev->kobj,
+                                KOBJ_CHANGE, connected);
+                kobject_uevent_env(&dev->kobj,
+                                KOBJ_CHANGE, configured);
+		break;
+        case DS_ENABLED:
+
+                kobject_uevent_env(&dev->kobj,
+				KOBJ_CHANGE, disconnected);
+		break;
+
+	}
+}
+
 static enum evtreturn xhci_dbc_do_handle_events(struct xhci_dbc *dbc)
 {
 	dma_addr_t		deq;
@@ -683,6 +712,7 @@ static enum evtreturn xhci_dbc_do_handle_events(struct xhci_dbc *dbc)
 			xhci_info(xhci, "DbC configured\n");
 			portsc = readl(&dbc->regs->portsc);
 			writel(portsc, &dbc->regs->portsc);
+			schedule_work(&dbc->notify_work);
 			return EVT_GSER;
 		}
 
@@ -695,7 +725,7 @@ static enum evtreturn xhci_dbc_do_handle_events(struct xhci_dbc *dbc)
 			xhci_info(xhci, "DbC cable unplugged\n");
 			dbc->state = DS_ENABLED;
 			xhci_dbc_flush_requests(dbc);
-
+                        schedule_work(&dbc->notify_work);
 			return EVT_DISC;
 		}
 
@@ -870,6 +900,7 @@ static int xhci_do_dbc_init(struct xhci_hcd *xhci)
 
 	dbc->xhci = xhci;
 	INIT_DELAYED_WORK(&dbc->event_work, xhci_dbc_handle_events);
+	INIT_WORK(&dbc->notify_work, xhci_dbc_uevent_work);
 	spin_lock_init(&dbc->lock);
 
 	return 0;
diff --git a/drivers/usb/host/xhci-dbgcap.h b/drivers/usb/host/xhci-dbgcap.h
index 302e6ca72370..2c631df0a42f 100644
--- a/drivers/usb/host/xhci-dbgcap.h
+++ b/drivers/usb/host/xhci-dbgcap.h
@@ -174,6 +174,7 @@ struct xhci_dbc {
 	struct dbc_port			port;
 	/* priv pointer for a function */
 	void                            *func_priv;
+        struct work_struct              notify_work;
 };
 
 #define dbc_bulkout_ctx(d)		\
-- 
2.24.0

