From 4d004cf3bfa7bc84b937dc96147e3b05b744becf Mon Sep 17 00:00:00 2001
From: jizhenlo <zhenlong.z.ji@intel.com>
Date: Fri, 24 Mar 2023 12:38:39 +0800
Subject: [PATCH] Use buffered-io backed write and direct-io backed read

Buffered-io backed write has very good performance in the
AndroBench test, but it's read performance is very poor. However,
direct-io backed read has very good performance in the AndroBench
test, but it's write performance is very poor. This patch
adopts buffered-io backed write and direct-io backed read to
achieve good result for the AndroBench test.

Signed-off-by: jizhenlo <zhenlong.z.ji@intel.com>
---
 fs/ext4/file.c | 14 ++------------
 1 file changed, 2 insertions(+), 12 deletions(-)

diff --git a/fs/ext4/file.c b/fs/ext4/file.c
index 636963095b2f..8cffc3f035e6 100644
--- a/fs/ext4/file.c
+++ b/fs/ext4/file.c
@@ -38,17 +38,7 @@
 
 static bool ext4_dio_supported(struct kiocb *iocb, struct iov_iter *iter)
 {
-	struct inode *inode = file_inode(iocb->ki_filp);
-
-	if (!fscrypt_dio_supported(iocb, iter))
-		return false;
-	if (fsverity_active(inode))
-		return false;
-	if (ext4_should_journal_data(inode))
-		return false;
-	if (ext4_has_inline_data(inode))
-		return false;
-	return true;
+		return true;
 }
 
 static ssize_t ext4_dio_read_iter(struct kiocb *iocb, struct iov_iter *to)
@@ -513,7 +503,7 @@ static ssize_t ext4_dio_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	}
 
 	/* Fallback to buffered I/O if the inode does not support direct I/O. */
-	if (!ext4_dio_supported(iocb, from)) {
+	if (ext4_dio_supported(iocb, from)) {
 		if (ilock_shared)
 			inode_unlock_shared(inode);
 		else
-- 
2.25.1

