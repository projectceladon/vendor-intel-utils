From f8b443934afdcabe493c7fed73e36d6d0e84c351 Mon Sep 17 00:00:00 2001
From: hangliu1 <hang1.liu@linux.intel.com>
Date: Tue, 30 May 2023 23:13:25 -0400
Subject: [PATCH] Add modifier support in virtio-gpu

Tracked-On: OAM-110757
Signed-off-by: hangliu1 <hang1.liu@linux.intel.com>
---
 drivers/gpu/drm/virtio/virtgpu_display.c |  2 --
 drivers/gpu/drm/virtio/virtgpu_plane.c   | 25 +++++++++++++++++++++++-
 2 files changed, 24 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/virtio/virtgpu_display.c b/drivers/gpu/drm/virtio/virtgpu_display.c
index 2df9d839ecad..49d469a97aa1 100644
--- a/drivers/gpu/drm/virtio/virtgpu_display.c
+++ b/drivers/gpu/drm/virtio/virtgpu_display.c
@@ -344,8 +344,6 @@ int virtio_gpu_modeset_init(struct virtio_gpu_device *vgdev)
 	vgdev->ddev->mode_config.max_width = XRES_MAX;
 	vgdev->ddev->mode_config.max_height = YRES_MAX;
 
-	vgdev->ddev->mode_config.fb_modifiers_not_supported = true;
-
 	for (i = 0 ; i < vgdev->num_scanouts; ++i)
 		vgdev_output_init(vgdev, i);
 
diff --git a/drivers/gpu/drm/virtio/virtgpu_plane.c b/drivers/gpu/drm/virtio/virtgpu_plane.c
index 6c824305d6c4..72dc0d04c89e 100644
--- a/drivers/gpu/drm/virtio/virtgpu_plane.c
+++ b/drivers/gpu/drm/virtio/virtgpu_plane.c
@@ -112,12 +112,27 @@ uint32_t virtio_gpu_translate_format(uint32_t drm_fourcc)
 	return format;
 }
 
+static bool virtio_gpu_plane_format_mod_supported(struct drm_plane *_plane,
+					    u32 format, u64 modifier)
+{
+	switch (modifier) {
+
+	case DRM_FORMAT_MOD_LINEAR:
+	case I915_FORMAT_MOD_X_TILED:
+	case I915_FORMAT_MOD_Y_TILED:
+		return true;
+	default:
+		return false;
+	}
+}
+
 static const struct drm_plane_funcs virtio_gpu_plane_funcs = {
 	.update_plane		= drm_atomic_helper_update_plane,
 	.disable_plane		= drm_atomic_helper_disable_plane,
 	.reset			= drm_atomic_helper_plane_reset,
 	.atomic_duplicate_state = drm_atomic_helper_plane_duplicate_state,
 	.atomic_destroy_state	= drm_atomic_helper_plane_destroy_state,
+	.format_mod_supported   = virtio_gpu_plane_format_mod_supported,
 };
 
 static int virtio_gpu_plane_atomic_check(struct drm_plane *plane,
@@ -376,12 +391,20 @@ static const struct drm_plane_helper_funcs virtio_gpu_cursor_helper_funcs = {
 	.atomic_update		= virtio_gpu_cursor_plane_update,
 };
 
+static const uint64_t virtio_gpu_format_modifiers[] = {
+       DRM_FORMAT_MOD_LINEAR,
+       I915_FORMAT_MOD_X_TILED,
+       I915_FORMAT_MOD_Y_TILED,
+       DRM_FORMAT_MOD_INVALID
+};
+
 struct drm_plane *virtio_gpu_plane_init(struct virtio_gpu_device *vgdev,
 					enum drm_plane_type type,
 					int index)
 {
 	struct drm_device *dev = vgdev->ddev;
 	const struct drm_plane_helper_funcs *funcs;
+	const uint64_t *modifiers = virtio_gpu_format_modifiers;
 	struct drm_plane *plane;
 	const uint32_t *formats;
 	int nformats;
@@ -398,7 +421,7 @@ struct drm_plane *virtio_gpu_plane_init(struct virtio_gpu_device *vgdev,
 
 	plane = drmm_universal_plane_alloc(dev, struct drm_plane, dev,
 					   1 << index, &virtio_gpu_plane_funcs,
-					   formats, nformats, NULL, type, NULL);
+					   formats, nformats, modifiers, type, NULL);
 	if (IS_ERR(plane))
 		return plane;
 
-- 
2.17.1

