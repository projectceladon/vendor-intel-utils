From b0a7fbc2e4618c6d436ec545a02e33b99ee31622 Mon Sep 17 00:00:00 2001
From: Wenkui <kui.wen@intel.com>
Date: Thu, 14 Dec 2023 06:48:06 +0000
Subject: [PATCH] drm/i915: Fix i915 crash issue

Encountered i915 crash during Monkey test

Add filelist mutex if access device file list  to avoid race conditions

Tests Done:
 -Boot with iGPU
 -i915 debugfs check
 -Reboot

Tracked-On: OAM-114325
Tracked-On: OAM-114178
Signed-off-by: Wenkui <kui.wen@intel.com>
---
 drivers/gpu/drm/i915/i915_driver.c | 2 +-
 drivers/gpu/drm/i915/i915_gem.c    | 4 ++++
 drivers/gpu/drm/i915/i915_sysfs.c  | 8 +++++---
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_driver.c b/drivers/gpu/drm/i915/i915_driver.c
index 10b14b6d8dc9..f4002ee49b6f 100644
--- a/drivers/gpu/drm/i915/i915_driver.c
+++ b/drivers/gpu/drm/i915/i915_driver.c
@@ -1813,13 +1813,13 @@ static void i915_driver_postclose(struct drm_device *dev, struct drm_file *file)
 	i915_drm_client_cleanup(file_priv->client);
 
 	uninit_client_clos(file_priv);
-	kfree_rcu(file_priv, rcu);
 
 #if IS_ENABLED(CONFIG_DRM_I915_MEMTRACK)
 	i915_gem_remove_sysfs_file_entry(dev, file);
 	put_pid(file_priv->tgid);
 	kfree(file_priv->process_name);
 #endif
+	kfree_rcu(file_priv, rcu);
 
 	/* Catch up with all the deferred frees from "this" client */
 	i915_gem_flush_free_objects(to_i915(dev));
diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index 8f0e0399595a..f240e00f3b04 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -625,6 +625,7 @@ static int __i915_get_drm_clients_info(struct drm_i915_error_state_buf *m,
                m,
                "\n\n  pid   Total  Shared  Priv   Purgeable  Alloced  SharedPHYsize   SharedPHYprop    PrivPHYsize   PurgeablePHYsize   process\n");
 
+       mutex_lock(&dev->filelist_mutex);
        list_for_each_entry (file, &dev->filelist, lhead) {
                struct pid *tgid;
                struct drm_i915_file_private *file_priv = file->driver_priv;
@@ -671,6 +672,7 @@ static int __i915_get_drm_clients_info(struct drm_i915_error_state_buf *m,
                if (ret)
                        break;
        }
+       mutex_unlock(&dev->filelist_mutex);
 
        list_for_each_entry_safe (pid_entry, temp_entry, &per_pid_stats, head) {
                if (list_empty(&sorted_pid_stats)) {
@@ -788,6 +790,7 @@ static int __i915_gem_get_obj_info(struct drm_i915_error_state_buf *m,
         */
        err_printf(m, "%" SPACES_STR(NUM_SPACES) "s\n", " ");
 
+       mutex_lock(&dev->filelist_mutex);
        list_for_each_entry (file, &dev->filelist, lhead) {
                struct drm_i915_file_private *file_priv = file->driver_priv;
                struct get_obj_stats_buf obj_stat_buf;
@@ -806,6 +809,7 @@ static int __i915_gem_get_obj_info(struct drm_i915_error_state_buf *m,
                if (ret)
                        break;
        }
+       mutex_unlock(&dev->filelist_mutex);
 
        if (file_priv_reqd) {
                int space_remaining;
diff --git a/drivers/gpu/drm/i915/i915_sysfs.c b/drivers/gpu/drm/i915/i915_sysfs.c
index e8461fdf15a3..e083decad8d8 100644
--- a/drivers/gpu/drm/i915/i915_sysfs.c
+++ b/drivers/gpu/drm/i915/i915_sysfs.c
@@ -652,18 +652,18 @@ int i915_gem_create_sysfs_file_entry(struct drm_device *dev,
         * bin attribute into the new file priv. Otherwise allocate a new
         * copy of bin attribute, and create its corresponding sysfs file.
         */
-       mutex_lock(&dev->struct_mutex);
+       mutex_lock(&dev->filelist_mutex);
        list_for_each_entry (file_local, &dev->filelist, lhead) {
                struct drm_i915_file_private *file_priv_local =
                        file_local->driver_priv;
 
                if (file_priv->tgid == file_priv_local->tgid) {
                        file_priv->obj_attr = file_priv_local->obj_attr;
-                       mutex_unlock(&dev->struct_mutex);
+		       mutex_unlock(&dev->filelist_mutex);
                        return 0;
                }
        }
-       mutex_unlock(&dev->struct_mutex);
+       mutex_unlock(&dev->filelist_mutex);
 
        if (!dev_priv->mmtkobj_initialized) {
                DRM_ERROR("memtrack_kobj hasn't been initialized yet\n");
@@ -720,6 +720,7 @@ void i915_gem_remove_sysfs_file_entry(struct drm_device *dev,
         * that particular tgid, and no other instances for this tgid exist in
         * the filelist. If so, remove the corresponding sysfs file entry also.
         */
+       mutex_lock(&dev->filelist_mutex);
        list_for_each_entry (file_local, &dev->filelist, lhead) {
                struct drm_i915_file_private *file_priv_local =
                        file_local->driver_priv;
@@ -727,6 +728,7 @@ void i915_gem_remove_sysfs_file_entry(struct drm_device *dev,
                if (pid_nr(file_priv->tgid) == pid_nr(file_priv_local->tgid))
                        open_count++;
        }
+       mutex_unlock(&dev->filelist_mutex);
 
        if (open_count == 1) {
                struct i915_gem_file_attr_priv *attr_priv;
-- 
2.43.0

