From 4e19ef17241123bd62f8676190be4ef7cbf4d156 Mon Sep 17 00:00:00 2001
From: Bharat B Panda <bharat.b.panda@intel.com>
Date: Fri, 16 Sep 2022 11:41:59 +0530
Subject: [PATCH] Fix bdaddress comparison with garbage value

Intel Read Verision(TLV) data is parsed into a local
structure variable and it contains a field for bd address.
Bd address is returned only in bootloader mode and hence bd address
in TLV structure needs to be validated only if controller is present
in boot loader mode.

Tracked-On: OAM-103692
Signed-off-by: Bharat B Panda <bharat.b.panda@intel.com>
Signed-off-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Co-authored-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Change-Id: Id2e1e9e10a7015fb8510d6cfb15f84a7957c02d2
---
 drivers/bluetooth/btintel.c | 22 ++++++++++++++--------
 1 file changed, 14 insertions(+), 8 deletions(-)

diff --git a/drivers/bluetooth/btintel.c b/drivers/bluetooth/btintel.c
index f6fe6ab7194d..7bbbb64e9d98 100644
--- a/drivers/bluetooth/btintel.c
+++ b/drivers/bluetooth/btintel.c
@@ -2006,14 +2006,16 @@ static int btintel_prepare_fw_download_tlv(struct hci_dev *hdev,
 	if (ver->img_type == 0x03) {
 		btintel_clear_flag(hdev, INTEL_BOOTLOADER);
 		btintel_check_bdaddr(hdev);
-	}
-
-	/* If the OTP has no valid Bluetooth device address, then there will
-	 * also be no valid address for the operational firmware.
-	 */
-	if (!bacmp(&ver->otp_bd_addr, BDADDR_ANY)) {
-		bt_dev_info(hdev, "No device address configured");
-		set_bit(HCI_QUIRK_INVALID_BDADDR, &hdev->quirks);
+	} else {
+		/*
+		 * Check for valid bd address in boot loader mode. Device
+		 * will be marked as unconfigured if empty bd address is
+		 * found.
+		 */
+		if (!bacmp(&ver->otp_bd_addr, BDADDR_ANY)) {
+			bt_dev_info(hdev, "No device address configured");
+			set_bit(HCI_QUIRK_INVALID_BDADDR, &hdev->quirks);
+		}
 	}
 
 	btintel_get_fw_name_tlv(ver, fwname, sizeof(fwname), "sfi");
@@ -2310,6 +2312,10 @@ static int btintel_setup_combined(struct hci_dev *hdev)
 		goto exit_error;
 	}
 
+	/* memset ver_tlv to start with clean state as few fields are exclusive
+	 * to bootloader mode and are not populated in operational mode
+	 */
+	memset(&ver_tlv, 0, sizeof(ver_tlv));
 	/* For TLV type device, parse the tlv data */
 	err = btintel_parse_version_tlv(hdev, &ver_tlv, skb);
 	if (err) {
-- 
2.40.0

