From 6b45ab4d01f3f973b603f7f3a97e21313b5d489c Mon Sep 17 00:00:00 2001
From: "yiyang.wang" <yiyang.wang@intel.com>
Date: Sun, 28 Jan 2024 14:16:30 +0800
Subject: [PATCH] drm/i915: minigbm wrokaroud

Tracked-On: OAM-114110
Signed-off-by: yiyang.wang <yiyang.wang@intel.com>
---
 drivers/gpu/drm/i915/i915_scatterlist.c | 68 ++++++++-----------------
 drivers/gpu/drm/i915/i915_scatterlist.h |  2 +-
 2 files changed, 23 insertions(+), 47 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_scatterlist.c b/drivers/gpu/drm/i915/i915_scatterlist.c
index 08286999c7fe..1d0df6dae471 100644
--- a/drivers/gpu/drm/i915/i915_scatterlist.c
+++ b/drivers/gpu/drm/i915/i915_scatterlist.c
@@ -13,55 +13,31 @@
 #include "i915_scatterlist.h"
 #include "i915_ttm_buddy_manager.h"
 
-void i915_sg_trim(struct sg_table *sgt)
+bool i915_sg_trim(struct sg_table *orig_st)
 {
-	struct scatterlist *sg;
-	unsigned int n, end;
-
-	GEM_BUG_ON(sgt->nents > sgt->orig_nents);
-	if (sgt->nents == sgt->orig_nents)
-		return;
-
-	n = 0;
-	end = 0;
-	sg = sgt->sgl;
-	do {
-		struct scatterlist *chain;
-
-		if (sgt->orig_nents - n <= SG_MAX_SINGLE_ALLOC)
-			break;
-
-		if (end == 0 && n + SG_MAX_SINGLE_ALLOC >= sgt->nents)
-			end = n + SG_MAX_SINGLE_ALLOC;
-
-		chain = sg_chain_ptr(sg + I915_MAX_CHAIN_ALLOC);
-		if (n >= sgt->nents) {
-			kmemleak_free(sg);
-			free_page((unsigned long)sg);
-		}
-
-		n += I915_MAX_CHAIN_ALLOC;
-		if (sgt->nents == n + 1) {
-			sg[I915_MAX_CHAIN_ALLOC] = *chain;
-			GEM_BUG_ON(!sg_is_last(sg + I915_MAX_CHAIN_ALLOC));
-			GEM_BUG_ON(end != sgt->nents);
-		}
-
-		sg = chain;
-	} while (1);
-	if (!end)
-		return;
-
-	if (n >= sgt->nents) {
-		if (sgt->orig_nents - n == SG_MAX_SINGLE_ALLOC) {
-			kmemleak_free(sg);
-			free_page((unsigned long)sg);
-		} else {
-			kfree(sg);
-		}
+	struct sg_table new_st;
+	struct scatterlist *sg, *new_sg;
+	unsigned int i;
+
+	if (orig_st->nents == orig_st->orig_nents)
+		return false;
+
+	if (sg_alloc_table(&new_st, orig_st->nents, GFP_KERNEL | __GFP_NOWARN))
+		return false;
+
+	new_sg = new_st.sgl;
+	for_each_sg(orig_st->sgl, sg, orig_st->nents, i) {
+		sg_set_page(new_sg, sg_page(sg), sg->length, 0);
+		sg_dma_address(new_sg) = sg_dma_address(sg);
+		sg_dma_len(new_sg) = sg_dma_len(sg);
+		new_sg = sg_next(new_sg);
 	}
 
-	sgt->orig_nents = end;
+	GEM_BUG_ON(new_sg); /* Should walk exactly nents and hit the end */
+
+	sg_free_table(orig_st);
+	*orig_st = new_st;
+	return true;
 }
 
 unsigned long i915_sg_compact(struct sg_table *st, unsigned long max)
diff --git a/drivers/gpu/drm/i915/i915_scatterlist.h b/drivers/gpu/drm/i915/i915_scatterlist.h
index 740dc0b3ad91..b661b762026d 100644
--- a/drivers/gpu/drm/i915/i915_scatterlist.h
+++ b/drivers/gpu/drm/i915/i915_scatterlist.h
@@ -153,7 +153,7 @@ static inline unsigned int i915_sg_segment_size(void)
 	return size;
 }
 
-void i915_sg_trim(struct sg_table *sgt);
+bool i915_sg_trim(struct sg_table *orig_st);
 unsigned long i915_sg_compact(struct sg_table *st, unsigned long max);
 
 /* Wrap scatterlist.h to sanity check for integer truncation */
-- 
2.34.1

