From 3b8175b630923a43c85a860976ce8a82c921d89b Mon Sep 17 00:00:00 2001
From: Wenkui <kui.wen@intel.com>
Date: Tue, 26 Dec 2023 05:26:36 +0000
Subject: [PATCH] Debug memleak patch

Signed-off-by: Wenkui <kui.wen@intel.com>
---
 drivers/gpu/drm/i915/Kconfig                   | 2 +-
 drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c | 3 ++-
 drivers/gpu/drm/i915/gem/i915_gem_object.c     | 7 ++++++-
 drivers/gpu/drm/i915/i915_debugfs.c            | 8 ++++++++
 drivers/gpu/drm/i915/i915_request.c            | 3 +++
 5 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/Kconfig b/drivers/gpu/drm/i915/Kconfig
index 864d75f66c7e..cbfbd2717796 100644
--- a/drivers/gpu/drm/i915/Kconfig
+++ b/drivers/gpu/drm/i915/Kconfig
@@ -99,7 +99,7 @@ config DRM_I915_COMPRESS_ERROR
 config DRM_I915_MEMTRACK
 	bool "Enable shmem usage status track"
 	depends on DRM_I915_CAPTURE_ERROR
-	default y
+	default n
 	help
 	  This option enables shmem usage status track of system summary and
 	  each process.
diff --git a/drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c b/drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c
index 0a5a1291b4d4..7ff3b5612a61 100644
--- a/drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c
+++ b/drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c
@@ -1949,6 +1949,7 @@ eb_find_first_request_added(struct i915_execbuffer *eb)
 }
 
 #if IS_ENABLED(CONFIG_DRM_I915_CAPTURE_ERROR)
+unsigned long  num_cap_no_free = 0;
 
 /* Stage with GFP_KERNEL allocations before we enter the signaling critical path */
 static int eb_capture_stage(struct i915_execbuffer *eb)
@@ -1974,7 +1975,7 @@ static int eb_capture_stage(struct i915_execbuffer *eb)
 			capture = kmalloc(sizeof(*capture), GFP_KERNEL);
 			if (!capture)
 				continue;
-
+			num_cap_no_free++;
 			capture->next = eb->capture_lists[j];
 			capture->vma_res = i915_vma_resource_get(vma->resource);
 			eb->capture_lists[j] = capture;
diff --git a/drivers/gpu/drm/i915/gem/i915_gem_object.c b/drivers/gpu/drm/i915/gem/i915_gem_object.c
index 0301515f71a9..611236370e50 100644
--- a/drivers/gpu/drm/i915/gem/i915_gem_object.c
+++ b/drivers/gpu/drm/i915/gem/i915_gem_object.c
@@ -94,6 +94,7 @@ void i915_gem_object_init(struct drm_i915_gem_object *obj,
 	INIT_RADIX_TREE(&obj->mm.get_page.radix, GFP_KERNEL | __GFP_NOWARN);
 	mutex_init(&obj->mm.get_page.lock);
 #if IS_ENABLED(CONFIG_DRM_I915_MEMTRACK)
+...
 	/*
 	 * Mark the object as not having backing pages, as no allocation
 	 * for it yet
@@ -173,13 +174,15 @@ bool i915_gem_object_can_bypass_llc(struct drm_i915_gem_object *obj)
 	return IS_JSL_EHL(i915);
 }
 
+#if IS_ENABLED(CONFIG_DRM_I915_MEMTRACK)
+
 static int i915_gem_open_object(struct drm_gem_object *gem, struct drm_file *file)
 {
 	struct drm_i915_gem_object *obj = to_intel_bo(gem);
 
 	return i915_gem_obj_insert_pid(obj);
 }
-
+#endif
 static void i915_gem_close_object(struct drm_gem_object *gem, struct drm_file *file)
 {
 	struct drm_i915_gem_object *obj = to_intel_bo(gem);
@@ -785,7 +788,9 @@ int __init i915_objects_module_init(void)
 
 static const struct drm_gem_object_funcs i915_gem_object_funcs = {
 	.free = i915_gem_free_object,
+#if IS_ENABLED(CONFIG_DRM_I915_MEMTRACK)
 	.open = i915_gem_open_object,
+#endif
 	.close = i915_gem_close_object,
 	.export = i915_gem_prime_export,
 };
diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index b6af31a05cd0..1b75e4452896 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -761,6 +761,13 @@ static const struct file_operations i915_forcewake_fops = {
 	.release = i915_forcewake_release,
 };
 
+extern unsigned long  num_cap_no_free; 
+static int i915_num_cap_no_free(struct seq_file *m, void *data)
+{
+	seq_printf(m, "num_cap_no_free = %lu \n", num_cap_no_free);
+	return 0;
+}
+
 static const struct drm_info_list i915_debugfs_list[] = {
 	{"i915_capabilities", i915_capabilities, 0},
 	{"i915_gem_objects", i915_gem_object_info, 0},
@@ -772,6 +779,7 @@ static const struct drm_info_list i915_debugfs_list[] = {
 	{"i915_sseu_status", i915_sseu_status, 0},
 	{"i915_rps_boost_info", i915_rps_boost_info, 0},
 	{"i915_sriov_info", sriov_info, 0},
+	{"i915_num_cap_no_free", i915_num_cap_no_free, 0},
 };
 #define I915_DEBUGFS_ENTRIES ARRAY_SIZE(i915_debugfs_list)
 
diff --git a/drivers/gpu/drm/i915/i915_request.c b/drivers/gpu/drm/i915/i915_request.c
index f949a9495758..bfab92ef6729 100644
--- a/drivers/gpu/drm/i915/i915_request.c
+++ b/drivers/gpu/drm/i915/i915_request.c
@@ -327,6 +327,8 @@ static void __rq_cancel_watchdog(struct i915_request *rq)
 
 #if IS_ENABLED(CONFIG_DRM_I915_CAPTURE_ERROR)
 
+extern unsigned long  num_cap_no_free;
+
 /**
  * i915_request_free_capture_list - Free a capture list
  * @capture: Pointer to the first list item or NULL
@@ -339,6 +341,7 @@ void i915_request_free_capture_list(struct i915_capture_list *capture)
 
 		i915_vma_resource_put(capture->vma_res);
 		kfree(capture);
+		num_cap_no_free--;
 		capture = next;
 	}
 }
-- 
2.34.1

