From 755753406fe1f9e19e26be6434aa92fd7dd65d84 Mon Sep 17 00:00:00 2001
From: "Xue, Bosheng" <bosheng.xue@intel.com>
Date: Fri, 22 Mar 2024 03:25:28 +0800
Subject: [PATCH] Improve virtio gpu vblank operation

set vblank on/off during atomic enable/disable
add vblank_get to protect vblank event operation

Signed-off-by: Xue, Bosheng <bosheng.xue@intel.com>
---
 drivers/gpu/drm/virtio/virtgpu_display.c | 18 ++++++++++++------
 drivers/gpu/drm/virtio/virtgpu_drv.c     |  1 +
 2 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/virtio/virtgpu_display.c b/drivers/gpu/drm/virtio/virtgpu_display.c
index f7cf13ee2a0f..4ce701d7a6b1 100644
--- a/drivers/gpu/drm/virtio/virtgpu_display.c
+++ b/drivers/gpu/drm/virtio/virtgpu_display.c
@@ -54,6 +54,7 @@ static int virtio_irq_enable_vblank(struct drm_crtc *crtc)
 	struct virtio_gpu_device *vgdev = dev->dev_private;
 	struct virtio_gpu_output *output = drm_crtc_to_virtio_gpu_output(crtc);
 
+	DRM_ERROR("bosheng enable vblank\n");
 	virtio_gpu_vblank_poll_arm(vgdev->vblank[output->index].vblank.vq);
 	virtqueue_enable_cb(vgdev->vblank[output->index].vblank.vq);
 	return 0;
@@ -65,6 +66,7 @@ static void virtio_irq_disable_vblank(struct drm_crtc *crtc)
 	struct virtio_gpu_device *vgdev;
 	vgdev = dev->dev_private;
 	struct virtio_gpu_output *output = drm_crtc_to_virtio_gpu_output(crtc);
+	DRM_ERROR("bosheng disable vblank\n");
 
 	virtqueue_disable_cb(vgdev->vblank[output->index].vblank.vq);
 }
@@ -122,6 +124,8 @@ static void virtio_gpu_crtc_mode_set_nofb(struct drm_crtc *crtc)
 static void virtio_gpu_crtc_atomic_enable(struct drm_crtc *crtc,
 					  struct drm_atomic_state *state)
 {
+	DRM_ERROR("bosheng atomic enable\n");
+	drm_crtc_vblank_on(crtc);
 }
 
 static void virtio_gpu_crtc_atomic_disable(struct drm_crtc *crtc,
@@ -130,7 +134,9 @@ static void virtio_gpu_crtc_atomic_disable(struct drm_crtc *crtc,
 	struct drm_device *dev = crtc->dev;
 	struct virtio_gpu_device *vgdev = dev->dev_private;
 	struct virtio_gpu_output *output = drm_crtc_to_virtio_gpu_output(crtc);
+	DRM_ERROR("bosheng atomic disable\n");
 
+	drm_crtc_vblank_off(crtc);
 	virtio_gpu_cmd_set_scanout(vgdev, output->index, 0, 0, 0, 0, 0);
 	virtio_gpu_notify(vgdev);
 }
@@ -149,16 +155,16 @@ static void virtio_gpu_crtc_atomic_flush(struct drm_crtc *crtc,
 	struct virtio_gpu_output *output = drm_crtc_to_virtio_gpu_output(crtc);
 	struct drm_device *drm = crtc->dev;
 
-	spin_lock_irq(&drm->event_lock);
-
-
 	if (crtc->state->event) {
-		drm_crtc_send_vblank_event(crtc, crtc->state->event);
+		spin_lock_irq(&drm->event_lock);
+		if (drm_crtc_vblank_get(crtc) != 0)
+			drm_crtc_send_vblank_event(crtc, crtc->state->event);
+		else
+			drm_crtc_arm_vblank_event(crtc, crtc->state->event);
+		spin_unlock_irq(&drm->event_lock);
 		crtc->state->event = NULL;
 	}
 
-	spin_unlock_irq(&drm->event_lock);
-
 	/*
 	 * virtio-gpu can't do modeset and plane update operations
 	 * independent from each other.  So the actual modeset happens
diff --git a/drivers/gpu/drm/virtio/virtgpu_drv.c b/drivers/gpu/drm/virtio/virtgpu_drv.c
index 10a84c241b6c..4f0e9c3aead7 100644
--- a/drivers/gpu/drm/virtio/virtgpu_drv.c
+++ b/drivers/gpu/drm/virtio/virtgpu_drv.c
@@ -171,6 +171,7 @@ static int virtgpu_freeze(struct virtio_device *vdev)
 	struct virtio_gpu_device *vgdev = dev->dev_private;
 	int error;
 
+	DRM_ERROR("start to freezen\n");
 	error = drm_mode_config_helper_suspend(dev);
 	if (error) {
 		DRM_ERROR("suspend error %d\n", error);
-- 
2.34.1

