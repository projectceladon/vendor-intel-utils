From 9beffb3c3e72be4fc94d2833f34b0b4557805577 Mon Sep 17 00:00:00 2001
From: HeYue <yue.he@intel.com>
Date: Mon, 30 Oct 2023 12:51:16 +0800
Subject: [PATCH 06/14] export ivshm size to user space by ioctl()

Signed-off-by: Fei Li <fei1.li@intel.com>
---
 drivers/ivshm/ivshm.c         | 2 ++
 drivers/ivshm/ivshm.h         | 3 +++
 drivers/ivshm/ivshm_ivshmem.c | 3 +++
 3 files changed, 8 insertions(+)

diff --git a/drivers/ivshm/ivshm.c b/drivers/ivshm/ivshm.c
index 7799d4f4cf25..7220c1a46d34 100644
--- a/drivers/ivshm/ivshm.c
+++ b/drivers/ivshm/ivshm.c
@@ -385,6 +385,8 @@ static long ivshm_region_ioctl(struct file *filep, unsigned int cmd, unsigned lo
 	case IVSHM_ADD_LISTENER:
 		err = ivshm_region_add_listener(user, iregion, arg);
 		break;
+	case IVSHM_GET_MMIO_SZ:
+		return put_user(iregion->idev->info->dev_mmio_len, (unsigned long long __user *)arg) ? -EFAULT : 0;
 	default:
 		dev_err(&iregion->dev, "Unsupported ioctl command: 0x%x.\n", cmd);
 		err = -EOPNOTSUPP;
diff --git a/drivers/ivshm/ivshm.h b/drivers/ivshm/ivshm.h
index 12b66f02252c..8c2825110bbc 100644
--- a/drivers/ivshm/ivshm.h
+++ b/drivers/ivshm/ivshm.h
@@ -16,6 +16,7 @@ struct ivshm_listener_data {
 };
 
 #define IVSHM_ADD_LISTENER	_IOW('u', 100, struct ivshm_listener_data)
+#define IVSHM_GET_MMIO_SZ	_IOR('u', 101, unsigned long long)
 
 /*
  * Internal data structures
@@ -74,6 +75,8 @@ struct ivshm_info {
 	resource_size_t        dev_ctrls;
 	resource_size_t        dev_ctrls_len;
 
+	resource_size_t        dev_mmio;
+	resource_size_t        dev_mmio_len;
 	struct ivshm_device   *ivshm_dev;
 };
 
diff --git a/drivers/ivshm/ivshm_ivshmem.c b/drivers/ivshm/ivshm_ivshmem.c
index b395c06e561a..69b2f1635aa9 100644
--- a/drivers/ivshm/ivshm_ivshmem.c
+++ b/drivers/ivshm/ivshm_ivshmem.c
@@ -113,6 +113,9 @@ static int probe(struct pci_dev *pdev, const struct pci_device_id *id)
 
 	start = pci_resource_start(pdev, IVSHMEM_MEM_BAR);
 	len = pci_resource_len(pdev, IVSHMEM_MEM_BAR);
+	idev->info.dev_mmio = start;
+	idev->info.dev_mmio_len = len;
+	dev_info(&pdev->dev, "mmio: 0x%llx, mmio_len: 0x%llx", idev->info.dev_mmio, idev->info.dev_mmio_len);
 	err = ivshm_register_region(idev->info.ivshm_dev, "default", start, len, pci_msix_vec_count(pdev), &iregion);
 	if (err) {
 		dev_err(&pdev->dev, "Failed to register ivshm region.\n");
-- 
2.17.1

