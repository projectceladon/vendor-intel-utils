From 3c366df2b0433c4761845543c94c19fce6e7b37f Mon Sep 17 00:00:00 2001
From: Yuanyuan Zhao <yuanyuan.zhao@intel.com>
Date: Tue, 5 Sep 2023 08:34:29 +0800
Subject: [PATCH 12/14] virtio drm

---
 drivers/gpu/drm/drm_gem.c       | 12 ++++++------
 drivers/virtio/Kconfig          |  2 ++
 drivers/virtio/virtio_ivshmem.c |  4 +---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/drm_gem.c b/drivers/gpu/drm/drm_gem.c
index 88b15c17e3f0..1fefdcefb065 100644
--- a/drivers/gpu/drm/drm_gem.c
+++ b/drivers/gpu/drm/drm_gem.c
@@ -556,8 +556,8 @@ struct page **drm_gem_get_pages(struct drm_gem_object *obj)
 	mapping_set_unevictable(mapping);
 
 	for (i = 0; i < npages; i++) {
-		if (strcmp(obj->dev->dev->parent->driver->name, "virtio-ivshmem") == 0) {
-			p = virtio_ivshmem_allocate_page(obj->dev->dev->parent);
+		if (strcmp(obj->dev->dev->driver->name, "virtio-ivshmem") == 0) {
+			p = virtio_ivshmem_allocate_page(obj->dev->dev);
 		} else {
 			p = shmem_read_mapping_page(mapping, i);
 		}
@@ -582,8 +582,8 @@ struct page **drm_gem_get_pages(struct drm_gem_object *obj)
 	while (i--) {
 		if (!pagevec_add(&pvec, pages[i]))
 			drm_gem_check_release_pagevec(&pvec);
-		if (strcmp(obj->dev->dev->parent->driver->name, "virtio-ivshmem") == 0) {
-			virtio_ivshmem_free_page(obj->dev->dev->parent, pages[i]);
+		if (strcmp(obj->dev->dev->driver->name, "virtio-ivshmem") == 0) {
+			virtio_ivshmem_free_page(obj->dev->dev, pages[i]);
 		}
 	}
 	if (pagevec_count(&pvec))
@@ -634,8 +634,8 @@ void drm_gem_put_pages(struct drm_gem_object *obj, struct page **pages,
 		if (!pagevec_add(&pvec, pages[i]))
 			drm_gem_check_release_pagevec(&pvec);
 
-		if (strcmp(obj->dev->dev->parent->driver->name, "virtio-ivshmem") == 0) {
-			virtio_ivshmem_free_page(obj->dev->dev->parent, pages[i]);
+		if (strcmp(obj->dev->dev->driver->name, "virtio-ivshmem") == 0) {
+			virtio_ivshmem_free_page(obj->dev->dev, pages[i]);
 		}
 	}
 	if (pagevec_count(&pvec))
diff --git a/drivers/virtio/Kconfig b/drivers/virtio/Kconfig
index 54d830e7d0ba..2d80c7ecbb61 100644
--- a/drivers/virtio/Kconfig
+++ b/drivers/virtio/Kconfig
@@ -162,6 +162,8 @@ config VIRTIO_IVSHMEM
 	tristate "Driver for ivshmem-based virtio front-end devices"
 	depends on PCI && !HIGHMEM
 	select VIRTIO
+	select DMA_OPS
+	select ZONE_DEVICE
 	help
 	  This provides virtio front-end devices via ivshmem shared memory
 	  devices.
diff --git a/drivers/virtio/virtio_ivshmem.c b/drivers/virtio/virtio_ivshmem.c
index fe3548b38363..f812f3214618 100644
--- a/drivers/virtio/virtio_ivshmem.c
+++ b/drivers/virtio/virtio_ivshmem.c
@@ -1006,9 +1006,7 @@ static void virtio_ivshmem_remove(struct pci_dev *pci_dev)
 }
 
 static const struct pci_device_id virtio_ivshmem_id_table[] = {
-	//{ PCI_DEVICE(PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1110) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1110),
-	  (PCI_CLASS_OTHERS << 16) | IVSHM_PROTO_VIRTIO_FRONT, 0xffff00 },
+	{ PCI_DEVICE(PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1110) },
 	{ 0 }
 };
 
-- 
2.17.1

