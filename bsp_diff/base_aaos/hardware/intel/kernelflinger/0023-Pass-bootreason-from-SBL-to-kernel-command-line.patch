From 09aeef64a6c27ddbe4cc22a74321ee97b56493c4 Mon Sep 17 00:00:00 2001
From: "Guo, Jade" <jade.guo@intel.com>
Date: Thu, 26 Oct 2023 11:08:19 +0800
Subject: [PATCH 23/54] Pass bootreason from SBL to kernel command line

Pass bootreason from SBL to kernel command line

Tracked-On: OAM-112951
Signed-off-by: Guo, Jade <jade.guo@intel.com>
---
 include/vars.h             |  4 ++++
 libkernelflinger/android.c |  8 +++-----
 libkernelflinger/vars.c    | 15 +++++++++++++++
 3 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/include/vars.h b/include/vars.h
index 0136fd4..b2c7dfb 100644
--- a/include/vars.h
+++ b/include/vars.h
@@ -151,6 +151,10 @@ EFI_STATUS erase_efivars(VOID);
 #endif
 EFI_STATUS set_reboot_reason(CHAR16 *reboot_reason);
 CHAR16 *get_reboot_reason();
+#ifdef USE_SBL
+CHAR16 *get_sbl_boot_reason();
+const char *ewarg_getval(const char *name);
+#endif
 BOOLEAN is_reboot_reason(CHAR16 *reason);
 VOID del_reboot_reason();
 
diff --git a/libkernelflinger/android.c b/libkernelflinger/android.c
index 51d75bc..9e4db87 100644
--- a/libkernelflinger/android.c
+++ b/libkernelflinger/android.c
@@ -1267,10 +1267,7 @@ static EFI_STATUS setup_command_line(
         CHAR16 *cmdline16 = NULL;
         char   *serialno = NULL;
         CHAR16 *serialport = NULL;
-#ifndef USE_SBL
-	//todo: support boot reason
         CHAR16 *bootreason = NULL;
-#endif
         EFI_PHYSICAL_ADDRESS cmdline_addr;
         CHAR8 *cmdline;
         CHAR8 *cmd_conf= NULL;
@@ -1326,11 +1323,13 @@ static EFI_STATUS setup_command_line(
                         goto out;
         }
 #ifndef USE_SBL
-	//todo: support boot reason
         if (is_uefi)
                 bootreason = get_boot_reason();
         else
                 bootreason = get_reboot_reason();
+#else
+        bootreason = get_sbl_boot_reason();
+#endif
 
         if (!bootreason) {
                 ret = EFI_OUT_OF_RESOURCES;
@@ -1340,7 +1339,6 @@ static EFI_STATUS setup_command_line(
         ret = prepend_command_line(&cmdline16, L"androidboot.bootreason=%s", bootreason);
         if (EFI_ERROR(ret))
                 goto out;
-#endif
         ret = prepend_command_line(&cmdline16, L"androidboot.verifiedbootstate=%s",
                                    boot_state_to_string(boot_state));
         if (EFI_ERROR(ret))
diff --git a/libkernelflinger/vars.c b/libkernelflinger/vars.c
index a578a30..7e8b7db 100644
--- a/libkernelflinger/vars.c
+++ b/libkernelflinger/vars.c
@@ -66,6 +66,7 @@
 
 #define ANDROID_PROP_VALUE_MAX	92
 #define REBOOT_REASON_MAX 	64
+#define SBL_RESET_REASON "reset"
 
 /* Default maximum number of watchdog resets in a row before the crash
  * event menu is displayed. */
@@ -871,6 +872,20 @@ bad:
 	return serialno;
 }
 
+#ifdef USE_SBL
+CHAR16 *get_sbl_boot_reason(){
+	const char *reason;
+	CHAR16 *ret;
+
+	reason = ewarg_getval(SBL_RESET_REASON);
+	if (!reason)
+		return L"unknown";
+	//convert to CHAR16
+	ret = stra_to_str((CHAR8 *)reason);
+	return ret;
+}
+#endif
+
 CHAR16 *get_reboot_reason()
 {
 	static CHAR16 reboot_reason[REBOOT_REASON_MAX];
-- 
2.25.1

