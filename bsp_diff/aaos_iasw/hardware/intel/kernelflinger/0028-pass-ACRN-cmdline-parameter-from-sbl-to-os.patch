From 8e3a3f7962333d952c212a0e118914efc533c64e Mon Sep 17 00:00:00 2001
From: "Guo, Jade" <jade.guo@intel.com>
Date: Thu, 23 Nov 2023 09:55:04 +0800
Subject: [PATCH 28/54] pass ACRN cmdline parameter from sbl to os

We will pass ACRN cmdline from SBL to OS.
Any parameter passing from cmd_for_kernel, like cmd_for_kernel=key1=value\\key2=value2
\\key3=value3 will be passed without any check as
key1=value1 key2=value2 key3=value3

Tracked-On: OAM-113545
Signed-off-by: Guo, Jade <jade.guo@intel.com>
---
 include/vars.h             |  1 +
 libkernelflinger/android.c | 15 +++++++++++++++
 libkernelflinger/vars.c    |  5 +++++
 3 files changed, 21 insertions(+)

diff --git a/include/vars.h b/include/vars.h
index b2c7dfb..15a52b6 100644
--- a/include/vars.h
+++ b/include/vars.h
@@ -154,6 +154,7 @@ CHAR16 *get_reboot_reason();
 #ifdef USE_SBL
 CHAR16 *get_sbl_boot_reason();
 const char *ewarg_getval(const char *name);
+const char *get_cmd_for_kernel();
 #endif
 BOOLEAN is_reboot_reason(CHAR16 *reason);
 VOID del_reboot_reason();
diff --git a/libkernelflinger/android.c b/libkernelflinger/android.c
index a27e59b..81b6be3 100644
--- a/libkernelflinger/android.c
+++ b/libkernelflinger/android.c
@@ -1283,6 +1283,10 @@ static EFI_STATUS setup_command_line(
         CHAR8 *abl_cmd_line = NULL;
         BOOLEAN is_uefi = TRUE;
         UINTN abl_cmd_len = 0;
+#ifdef USE_SBL
+        const char *cmd_for_kernel = NULL;
+        char *tmp = NULL;
+#endif
 
         is_uefi = is_UEFI();
 
@@ -1358,6 +1362,17 @@ static EFI_STATUS setup_command_line(
                         goto out;
         }
 
+#ifdef USE_SBL
+        /* Append cmd_for_kernel */
+        cmd_for_kernel = get_cmd_for_kernel();
+        tmp = (char *)cmd_for_kernel;
+        while ((tmp = strchr(tmp, '\\')) != NULL) {
+                *tmp = ' ';
+                tmp++;
+        }
+        ret = prepend_command_line(&cmdline16, L"%a", cmd_for_kernel);
+#endif
+
 #ifndef USER
         if (get_disable_watchdog()) {
                 ret = prepend_command_line(&cmdline16, CONVERT_TO_WIDE(TCO_OPT_DISABLED));
diff --git a/libkernelflinger/vars.c b/libkernelflinger/vars.c
index 7e8b7db..adcd01f 100644
--- a/libkernelflinger/vars.c
+++ b/libkernelflinger/vars.c
@@ -67,6 +67,7 @@
 #define ANDROID_PROP_VALUE_MAX	92
 #define REBOOT_REASON_MAX 	64
 #define SBL_RESET_REASON "reset"
+#define CMD_FOR_KERNEL   "cmd_for_kernel"
 
 /* Default maximum number of watchdog resets in a row before the crash
  * event menu is displayed. */
@@ -884,6 +885,10 @@ CHAR16 *get_sbl_boot_reason(){
 	ret = stra_to_str((CHAR8 *)reason);
 	return ret;
 }
+
+const char *get_cmd_for_kernel(){
+    return ewarg_getval(CMD_FOR_KERNEL);
+}
 #endif
 
 CHAR16 *get_reboot_reason()
-- 
2.25.1

