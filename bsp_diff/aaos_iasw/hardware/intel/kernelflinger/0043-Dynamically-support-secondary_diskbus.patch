From a7086bdb232e8ef2499b65e6e7972a8481637ca5 Mon Sep 17 00:00:00 2001
From: Jiaqing Zhao <jiaqing.zhao@intel.com>
Date: Sun, 18 Feb 2024 09:03:44 +0000
Subject: [PATCH 43/54] Dynamically support "secondary_diskbus"

Dyncmically checks "secondary_diskbus" parameter and pass it to android
according, which makes the "TARGET_HAS_2ND_BOOTDEV" compile flag no
longer needed and different platform can use a unified kernelflinger.

Tracked-On: OAM-115635
Signed-off-by: Jiaqing Zhao <jiaqing.zhao@intel.com>
---
 Android.mk                 |  4 ---
 libkernelflinger/android.c | 69 +++++++++++++++++++-------------------
 2 files changed, 34 insertions(+), 39 deletions(-)

diff --git a/Android.mk b/Android.mk
index 6ce435b..fab7fcc 100644
--- a/Android.mk
+++ b/Android.mk
@@ -30,10 +30,6 @@ ifeq ($(TARGET_USE_SBL),true)
     KERNELFLINGER_CFLAGS += -DUSE_SBL
 endif
 
-ifeq ($(TARGET_HAS_2ND_BOOTDEV),true)
-    KERNELFLINGER_CFLAGS += -DHAS_2ND_BOOTDEV
-endif
-
 ifeq ($(TARGET_USE_TRUSTY),true)
     KERNELFLINGER_CFLAGS += -DUSE_TRUSTY
 endif
diff --git a/libkernelflinger/android.c b/libkernelflinger/android.c
index 1ad87c3..63d2992 100644
--- a/libkernelflinger/android.c
+++ b/libkernelflinger/android.c
@@ -1396,9 +1396,12 @@ static EFI_STATUS setup_command_line(
         PCI_DEVICE_PATH *boot_device = get_boot_device();
         if (boot_device) {
                 CHAR16 *diskbus = NULL;
+                CHAR16* diskbus2 = NULL;
 #ifdef AUTO_DISKBUS
 #ifdef USE_SBL
                 INT32 bdf;
+                UINT32 secondary_diskbus;
+                const char *secondary_diskbus_arg;
 
                 bdf = diskbus_to_bdf(get_bootdev_diskbus());
                 if (bdf < 0) {
@@ -1409,30 +1412,24 @@ static EFI_STATUS setup_command_line(
 
                 diskbus = PoolPrint(L"%02x.%x", (bdf >> 3) & 0x1f, bdf & 0x7);
                 debug(L"pci boot device: device = %x func = %x", (bdf >> 3) & 0x1f, bdf & 0x7);
-#ifdef HAS_2ND_BOOTDEV
-                UINT32 secondary_diskbus;
-                const char *secondary_diskbus_arg;
-                INT32 bdf2;
-                CHAR16* diskbus2 = NULL;
 
                 secondary_diskbus_arg = ewarg_getval("secondary_diskbus");
-                if (!secondary_diskbus_arg) {
-                        error(L"No secondary diskbus provided");
-                        ret = EFI_INVALID_PARAMETER;
-                        goto out;
-                }
-
-                secondary_diskbus = (UINT32)strtoull(secondary_diskbus_arg, NULL, 16);
-                bdf2 = diskbus_to_bdf(secondary_diskbus);
-                if (bdf2 < 0) {
-                        error(L"No pci bridge found");
-                        ret = EFI_INVALID_PARAMETER;
-                        goto out;
+                if (secondary_diskbus_arg) {
+                        INT32 bdf2;
+
+                        secondary_diskbus = (UINT32)strtoull(secondary_diskbus_arg, NULL, 16);
+                        bdf2 = diskbus_to_bdf(secondary_diskbus);
+                        if (bdf2 < 0) {
+                                error(L"No pci bridge found");
+                                ret = EFI_INVALID_PARAMETER;
+                                goto out;
+                        }
+
+                        diskbus2 = PoolPrint(L"%02x.%x", (bdf2 >> 3) & 0x1f, bdf2 & 0x7);
+                        debug(L"pci secondary boot device: device = %x func = %x", (bdf2 >> 3) & 0x1f, bdf2 & 0x7);
+                } else {
+                        debug(L"no pci secondary boot device specified");
                 }
-
-                diskbus2 = PoolPrint(L"%02x.%x", (bdf2 >> 3) & 0x1f, bdf2 & 0x7);
-                debug(L"pci secondary boot device: device = %x func = %x", (bdf2 >> 3) & 0x1f, bdf2 & 0x7);
-#endif
 #else
                 diskbus = PoolPrint(L"%02x.%x", boot_device->Device, boot_device->Function);
                 debug(L"pci boot device: device = %x func = %x", boot_device->Device, boot_device->Function);
@@ -1440,23 +1437,25 @@ static EFI_STATUS setup_command_line(
 #else
                 diskbus = PoolPrint(L"%a", (CHAR8 *)PREDEF_DISK_BUS);
 #endif
-#ifdef HAS_2ND_BOOTDEV
+
                 StrToLower(diskbus);
-                StrToLower(diskbus2);
-                ret = prepend_command_line(&cmdline16,
-                                           L"androidboot.boot_devices=pci0000:00/0000:00:%s,pci0000:00/0000:00:%s pci=noaer",
-                                           diskbus, diskbus2);
+                StrToLower(diskbus2); 
+
+                if (diskbus2 && aosp_header->header_version < 2) {
+                        warning(L"androidboot.diskbus only support 1 device, secondary_diskbus ignored");
+                        ret = prepend_command_line(&cmdline16, L"androidboot.diskbus=%s", diskbus);
+                } else if (diskbus2) {
+                        ret = prepend_command_line(&cmdline16,
+                                                   L"androidboot.boot_devices=pci0000:00/0000:00:%s,pci0000:00/0000:00:%s pci=noaer",
+                                                   diskbus, diskbus2);
+                } else {
+                        ret = prepend_command_line(&cmdline16,
+                                                   L"androidboot.boot_devices=pci0000:00/0000:00:%s pci=noaer",
+                                                   diskbus);
+                }
+
                 FreePool(diskbus);
                 FreePool(diskbus2);
-#else
-                StrToLower(diskbus);
-                ret = prepend_command_line(&cmdline16,
-                                           (aosp_header->header_version < 2)
-                                           ? L"androidboot.diskbus=%s"
-                                           : L"androidboot.boot_devices=pci0000:00/0000:00:%s pci=noaer",
-                                           diskbus);
-                FreePool(diskbus);
-#endif
                 if (EFI_ERROR(ret))
                         goto out;
         } else
-- 
2.25.1

