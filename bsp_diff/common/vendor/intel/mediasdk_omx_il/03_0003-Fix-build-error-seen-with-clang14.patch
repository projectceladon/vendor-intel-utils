From 2cd54c0ea3c60c5c6e4e50cc5bd56099f3ead1c3 Mon Sep 17 00:00:00 2001
From: svenate <salini.venate@intel.com>
Date: Wed, 18 May 2022 23:03:47 +0530
Subject: [PATCH] WA- Fix build error seen with clang14

Use of clang-14 gives below build error:
error: bitwise or with non-zero value always evaluates
to true [-Werror,-Wtautological-bitwise-compare]

To fix the above error value of m_MfxVideoParams.IOPattern
was hard coded based on enum values in the expression:
m_MfxVideoParams.IOPattern &= !(MFX_IOPATTERN_IN_VIDEO_MEMORY |
MFX_IOPATTERN_IN_SYSTEM_MEMORY | MFX_IOPATTERN_IN_OPAQUE_MEMORY)

This patch should be reviewed by COE and fixed properly if this
hard-coding is not acceptable.

Signed-off-by: svenate <salini.venate@intel.com>
Signed-off-by: Tanuj Tekriwal <tanuj.tekriwal@intel.com>
---
 omx_components/src/mfx_omx_venc_component.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/omx_components/src/mfx_omx_venc_component.cpp b/omx_components/src/mfx_omx_venc_component.cpp
index 5b81eab..85dbf2e 100755
--- a/omx_components/src/mfx_omx_venc_component.cpp
+++ b/omx_components/src/mfx_omx_venc_component.cpp
@@ -1679,7 +1679,7 @@ OMX_ERRORTYPE MfxOmxVencComponent::SetParameter(
                     {
                         MFX_OMX_AUTO_TRACE_I32(pParam->bStoreMetaData);
                         {
-                            m_MfxVideoParams.IOPattern &= !(MFX_IOPATTERN_IN_VIDEO_MEMORY | MFX_IOPATTERN_IN_SYSTEM_MEMORY | MFX_IOPATTERN_IN_OPAQUE_MEMORY);
+                            m_MfxVideoParams.IOPattern = 0x00;
                             m_MfxVideoParams.IOPattern |= pParam->bStoreMetaData ? MFX_IOPATTERN_IN_VIDEO_MEMORY : MFX_IOPATTERN_IN_SYSTEM_MEMORY;
 
                             mfxU32 mode = pParam->bStoreMetaData ? MfxOmxInputSurfacesPool::MODE_LOAD_MDBUF
-- 
2.17.1

