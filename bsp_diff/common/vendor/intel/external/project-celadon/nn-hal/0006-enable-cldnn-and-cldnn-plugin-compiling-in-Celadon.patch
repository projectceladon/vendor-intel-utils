From a029ea6ab3317776161b028c237671bcac4192fb Mon Sep 17 00:00:00 2001
From: dengliqiang <liqiangx.deng@intel.com>
Date: Thu, 26 Sep 2019 19:53:16 +0800
Subject: [PATCH 6/7] enable cldnn and cldnn plugin compiling in Celadon

Added two mk files, one for cldnn and another for cldnn plugin, also needed
adding ENABLE_CLDNN support in ie.mk

Tracked-On: OAM-86770
Signed-off-by: dengliqiang <liqiangx.deng@intel.com>
---
 intel_nn_hal/dl/Android.mk      |   4 +
 intel_nn_hal/dl/cldnn.mk        | 558 ++++++++++++++++++++++++++++++++
 intel_nn_hal/dl/cldnn_plugin.mk |  74 +++++
 intel_nn_hal/dl/ie.mk           |   2 +-
 4 files changed, 637 insertions(+), 1 deletion(-)
 create mode 100755 intel_nn_hal/dl/cldnn.mk
 create mode 100755 intel_nn_hal/dl/cldnn_plugin.mk

diff --git a/intel_nn_hal/dl/Android.mk b/intel_nn_hal/dl/Android.mk
index 79df509..da1d835 100644
--- a/intel_nn_hal/dl/Android.mk
+++ b/intel_nn_hal/dl/Android.mk
@@ -13,3 +13,7 @@ include $(MY_LOCAL_PATH)/mkldnn.mk
 
 #include $(LOCAL_PATH)/format_reader.mk
 #include $(LOCAL_PATH)/prebuild.mk
+
+include $(MY_LOCAL_PATH)/cldnn_plugin.mk
+
+include $(MY_LOCAL_PATH)/cldnn.mk
\ No newline at end of file
diff --git a/intel_nn_hal/dl/cldnn.mk b/intel_nn_hal/dl/cldnn.mk
new file mode 100755
index 0000000..89bc135
--- /dev/null
+++ b/intel_nn_hal/dl/cldnn.mk
@@ -0,0 +1,558 @@
+LOCAL_PATH := $(call my-dir)/../../../dldt
+ROOT_PATH := $(call my-dir)/../../../../../../..
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE_OWNER := intel
+
+LOCAL_MODULE := libclDNN64
+
+LOCAL_PROPRIETARY_MODULE := true
+
+LOCAL_MULTILIB := 64
+
+LOCAL_SHARED_LIBRARIES := libOpenCL liblog
+
+LOCAL_STATIC_LIBRARIES := libcldnn_kernel_selector64 libomp
+
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/inference-engine/include \
+	$(LOCAL_PATH)/inference-engine/include/cldnn/device \
+	$(LOCAL_PATH)/inference-engine/src/inference_engine \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/common/intel_ocl_icd/6.3/linux/include \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/common/khronos_ocl_clhpp \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/common \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core/common \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/src \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/src/include \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/src/caps/public \
+	$(ROOT_PATH)/hardware/intel/external/opencl/igc/third_party/opencl_headers
+
+LOCAL_CFLAGS += \
+	-Wno-error \
+	-Wall \
+	-Wno-unknown-pragmas \
+	-Wno-strict-overflow \
+	-Wno-unused-variable \
+	-Wno-unused-parameter \
+	-Wno-non-virtual-dtor \
+	-Wno-missing-field-initializers \
+	-Wuninitialized \
+	-Winit-self \
+	-Wmaybe-uninitialized \
+	-fPIE \
+	-fPIC \
+	-Wformat \
+	-Wformat-security \
+	-fstack-protector-strong \
+	-fexceptions \
+	-fdata-sections \
+	-ffunction-sections \
+	-pedantic-errors \
+	-Wall \
+	-Wextra \
+	-pedantic \
+	-pipe \
+	-fmessage-length=0 \
+	-fno-strict-aliasing \
+	-W \
+	-Wno-unknown-pragmas \
+	-Wwrite-strings \
+	-Wswitch \
+	-Wno-error=missing-field-initializers \
+	-Wno-error=unused-parameter \
+	-Wno-error=unused-function \
+	-march=corei7 \
+	-mstackrealign \
+	-msse \
+	-msse2 \
+	-msse3 \
+	-mssse3 \
+	-msse4 \
+	-msse4.1 \
+	-msse4.2 \
+	-fvisibility=hidden \
+	-finline \
+	-finline-functions \
+	-finline-limit=300 \
+	-funswitch-loops \
+	-Wl,--no-undefined \
+	-std=c++11 \
+	-fno-operator-names \
+	-fpermissive \
+	-fvisibility-inlines-hidden \
+	-fopenmp \
+	-frtti \
+	-DNDEBUG \
+	-D_FORTIFY_SOURCE=2 \
+	-s \
+	-Os \
+	-DCLDNN_CMAKE \
+	-DCLDNN_EXPORTS \
+	-DCLDNN_VERSION_BUILD=14 \
+	-DCLDNN_VERSION_MAJOR=1 \
+	-DCLDNN_VERSION_MINOR=4 \
+	-DCLDNN_VERSION_REVISION=0 \
+	-DENABLE_CLDNN=1 \
+	-DENABLE_GNA \
+	-DENABLE_MKL_DNN=1 \
+	-DENABLE_OBJECT_DETECTION_TESTS=1 \
+	-DENABLE_PROFILING_ITT=0 \
+	-DENABLE_SEGMENTATION_TESTS=1 \
+	-DEXPORT_NEURAL_SYMBOLS \
+	-DIE_BUILD_POSTFIX=\"\" \
+	-DOPENMP_FOUND \
+	-D_FORTIFY_SOURCE=2 \
+	-D_GLIBCXX_USE_CXX11_ABI=0 \
+	-DclDNN_shlib_EXPORTS \
+	-D__ANDROID__ -DDEBUG -DNNLOG
+
+LOCAL_SRC_FILES += \
+	inference-engine/thirdparty/clDNN/src/activation.cpp \
+	inference-engine/thirdparty/clDNN/src/activation_grad.cpp \
+	inference-engine/thirdparty/clDNN/src/apply_adam.cpp \
+	inference-engine/thirdparty/clDNN/src/arg_max_min.cpp \
+	inference-engine/thirdparty/clDNN/src/average_unpooling.cpp \
+	inference-engine/thirdparty/clDNN/src/batch_norm.cpp \
+	inference-engine/thirdparty/clDNN/src/batch_norm_grad.cpp \
+	inference-engine/thirdparty/clDNN/src/border.cpp \
+	inference-engine/thirdparty/clDNN/src/broadcast.cpp \
+	inference-engine/thirdparty/clDNN/src/cldnn.cpp \
+	inference-engine/thirdparty/clDNN/src/concatenation.cpp \
+	inference-engine/thirdparty/clDNN/src/constants_propagator.cpp \
+	inference-engine/thirdparty/clDNN/src/convolution.cpp \
+	inference-engine/thirdparty/clDNN/src/convolution_grad_weights.cpp \
+	inference-engine/thirdparty/clDNN/src/crop.cpp \
+	inference-engine/thirdparty/clDNN/src/custom_gpu_primitive.cpp \
+	inference-engine/thirdparty/clDNN/src/data.cpp \
+	inference-engine/thirdparty/clDNN/src/deconvolution.cpp \
+	inference-engine/thirdparty/clDNN/src/detection_output.cpp \
+	inference-engine/thirdparty/clDNN/src/eltwise.cpp \
+	inference-engine/thirdparty/clDNN/src/embed.cpp \
+	inference-engine/thirdparty/clDNN/src/engine.cpp \
+	inference-engine/thirdparty/clDNN/src/error_handler.cpp \
+	inference-engine/thirdparty/clDNN/src/event.cpp \
+	inference-engine/thirdparty/clDNN/src/fully_connected.cpp \
+	inference-engine/thirdparty/clDNN/src/fully_connected_grad_input.cpp \
+	inference-engine/thirdparty/clDNN/src/fully_connected_grad_weights.cpp \
+	inference-engine/thirdparty/clDNN/src/gemm.cpp \
+	inference-engine/thirdparty/clDNN/src/generic_layer.cpp \
+	inference-engine/thirdparty/clDNN/src/half.cpp \
+	inference-engine/thirdparty/clDNN/src/index_select.cpp \
+	inference-engine/thirdparty/clDNN/src/input_layout.cpp \
+	inference-engine/thirdparty/clDNN/src/kernel_selector_helper.cpp \
+	inference-engine/thirdparty/clDNN/src/layout_optimizer.cpp \
+	inference-engine/thirdparty/clDNN/src/lookup_table.cpp \
+	inference-engine/thirdparty/clDNN/src/lrn.cpp \
+	inference-engine/thirdparty/clDNN/src/lstm.cpp \
+	inference-engine/thirdparty/clDNN/src/lstm_elt.cpp \
+	inference-engine/thirdparty/clDNN/src/lstm_gemm.cpp \
+	inference-engine/thirdparty/clDNN/src/max_unpooling.cpp \
+	inference-engine/thirdparty/clDNN/src/memory_pool.cpp \
+	inference-engine/thirdparty/clDNN/src/mutable_data.cpp \
+	inference-engine/thirdparty/clDNN/src/mvn.cpp \
+	inference-engine/thirdparty/clDNN/src/network.cpp \
+	inference-engine/thirdparty/clDNN/src/normalize.cpp \
+	inference-engine/thirdparty/clDNN/src/permute.cpp \
+	inference-engine/thirdparty/clDNN/src/pooling.cpp \
+	inference-engine/thirdparty/clDNN/src/primitive_inst.cpp \
+	inference-engine/thirdparty/clDNN/src/prior_box.cpp \
+	inference-engine/thirdparty/clDNN/src/program.cpp \
+	inference-engine/thirdparty/clDNN/src/program_dump_graph.cpp \
+	inference-engine/thirdparty/clDNN/src/program_node.cpp \
+	inference-engine/thirdparty/clDNN/src/proposal.cpp \
+	inference-engine/thirdparty/clDNN/src/region_yolo.cpp \
+	inference-engine/thirdparty/clDNN/src/reorder.cpp \
+	inference-engine/thirdparty/clDNN/src/reorg_yolo.cpp \
+	inference-engine/thirdparty/clDNN/src/reshape.cpp \
+	inference-engine/thirdparty/clDNN/src/roi_pooling.cpp \
+	inference-engine/thirdparty/clDNN/src/scale.cpp \
+	inference-engine/thirdparty/clDNN/src/scale_grad_input.cpp \
+	inference-engine/thirdparty/clDNN/src/scale_grad_weights.cpp \
+	inference-engine/thirdparty/clDNN/src/select.cpp \
+	inference-engine/thirdparty/clDNN/src/softmax.cpp \
+	inference-engine/thirdparty/clDNN/src/softmax_loss_grad.cpp \
+	inference-engine/thirdparty/clDNN/src/split.cpp \
+	inference-engine/thirdparty/clDNN/src/tile.cpp \
+	inference-engine/thirdparty/clDNN/src/upsampling.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/activation_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/activation_grad_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/apply_adam_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/arg_max_min_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/average_unpooling_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/batch_norm_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/batch_norm_grad_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/border_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/broadcast_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/concatenation_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/configuration.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/convolution_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/convolution_grad_weights_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/crop_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/custom_gpu_primitive_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/deconvolution_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/detection_output_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/eltwise_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/embed_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/engine_info.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/fully_connected_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/fully_connected_grad_input_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/fully_connected_grad_weights_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/gemm_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/generic_layer_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/index_select_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/kernel.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/kernel_runner.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/kernels_cache.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/lookup_table_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/lrn_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/lstm_elt_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/lstm_gemm_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/max_unpooling_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/memory_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/mutable_data_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/mvn_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/normalize_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/ocl_base_event.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/ocl_toolkit.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/ocl_user_event.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/permute_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/pooling_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/primitive_gpu_base.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/proposal_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/region_yolo_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/reorder_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/reorg_yolo_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/reshape_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/roi_pooling_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/scale_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/scale_grad_input_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/scale_grad_weights_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/select_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/softmax_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/softmax_loss_grad_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/tile_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/upsampling_gpu.cpp \
+	inference-engine/thirdparty/clDNN/src/gpu/wait_for_events_gpu.cpp
+
+include $(BUILD_SHARED_LIBRARY)
+
+##########################################################################
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE := libcldnn_kernel_selector64
+
+LOCAL_PROPRIETARY_MODULE := true
+
+LOCAL_MULTILIB := 64
+
+LOCAL_SHARED_LIBRARIES :=
+
+LOCAL_STATIC_LIBRARIES :=
+
+LOCAL_CFLAGS += \
+	-Wno-error \
+	-Wall \
+	-Wno-unknown-pragmas \
+	-Wno-strict-overflow \
+	-Wno-unused-variable \
+	-Wno-unused-parameter \
+	-Wno-non-virtual-dtor \
+	-Wno-missing-field-initializers \
+	-Wuninitialized \
+	-Winit-self \
+	-Wmaybe-uninitialized \
+	-fPIE \
+	-fPIC \
+	-Wformat \
+	-Wformat-security \
+	-fstack-protector-strong \
+	-fexceptions \
+	-fdata-sections \
+	-ffunction-sections \
+	-pedantic-errors \
+	-Wall \
+	-Wextra \
+	-pedantic \
+	-pipe \
+	-fmessage-length=0 \
+	-fno-strict-aliasing \
+	-W \
+	-Wno-unknown-pragmas \
+	-Wwrite-strings \
+	-Wswitch \
+	-Wno-error=missing-field-initializers \
+	-Wno-error=unused-parameter \
+	-Wno-error=unused-function \
+	-march=corei7 \
+	-mstackrealign \
+	-msse \
+	-msse2 \
+	-msse3 \
+	-mssse3 \
+	-msse4 \
+	-msse4.1 \
+	-msse4.2 \
+	-fvisibility=hidden \
+	-finline \
+	-finline-functions \
+	-finline-limit=300 \
+	-funswitch-loops \
+	-Wl,--no-undefined \
+	-std=c++11 \
+	-fno-operator-names \
+	-fpermissive \
+	-fvisibility-inlines-hidden \
+	-frtti \
+	-DNDEBUG \
+	-D_FORTIFY_SOURCE=2 \
+	-s \
+	-Os \
+	-DCLDNN_CMAKE \
+	-DENABLE_CLDNN=1 \
+	-DENABLE_GNA \
+	-DENABLE_MKL_DNN=1 \
+	-DENABLE_OBJECT_DETECTION_TESTS=1 \
+	-DENABLE_PROFILING_ITT=0 \
+	-DENABLE_SEGMENTATION_TESTS=1 \
+	-DIE_BUILD_POSTFIX=\"\" \
+	-D_FORTIFY_SOURCE=2 \
+	-D_GLIBCXX_USE_CXX11_ABI=0 \
+	-D__ANDROID__ -DNNLOG -DDEBUG
+
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/inference-engine/include \
+	$(LOCAL_PATH)/inference-engine/include/cldnn/device \
+	$(LOCAL_PATH)/inference-engine/src/inference_engine \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/common/intel_ocl_icd/6.3/linux/include \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/common/khronos_ocl_clhpp \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core/common \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core/cache \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/kernel_selector/common
+
+LOCAL_SRC_FILES := \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/auto_tuner.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/auto_tuner_offline.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector_common.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector_params.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/common/tensor_type.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/common_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/jitter.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/kernel_selector_utils.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/primitive_db.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/training_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/training_params.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/weight_bias_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/common/weight_bias_params.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_APL.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_GT3.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_GT3_B1.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_ICL.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_ICL_B1_B16.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2_B1_B16.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2_B32_B64.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2_B8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e_B1_B16.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e_B32_B64.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e_B8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_tutorial.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_axis.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_gpu_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_gpu_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_depth_bfyx_no_pitch.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_1x1_gemm_MMAD.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_MMAD.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_MMAD_blocks.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_1x1.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_1x1_gemm_buf.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_3x3_dw_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_depthwise_weights_lwg.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_direct_10_12_16.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_gemm_like.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_os_iyx_osv16.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_byxf_af32_depthwise.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_mmad_batched.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_tutorial.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_2x3_s1.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_2x3_s1_fused.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_6x3_s1_fused.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b16.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b1_block.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b1_block_multiple_x.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_params.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_1x1.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_3x3.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_7x7.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_yxfb.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_bfyx_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_fs_bs_yx_bsv4_fsv32.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_vload8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_block_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_MMAD.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_gemm.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_input_spatial.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bfyx_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv16_af8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv16_b1.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv8_af8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_b8_f8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_block.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_oi_b8_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_oi_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_image_tutorial.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_mmad_batched.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_yxfb_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_params.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_axis.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_multiple_features.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_opt_b8.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_byxf_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_ref_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_gpu_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_bfyx_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_across_spatial_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_within_spatial_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/permute/permute_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/permute/permute_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_average_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_bfyx_block_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_af32.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_padding_opt.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_fs_bs_yx_bsv4_fsv32.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_int8_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/region_yolo/region_yolo_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/region_yolo/region_yolo_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_from_winograd_2x3_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_fast_b1.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_to_yxfb_batched.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_to_winograd_2x3_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_image_fyx_b_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_image_winograd_6x3_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_winograd_2x3_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_winograd_6x3_kernel.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorg_yolo/reorg_yolo_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorg_yolo/reorg_yolo_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reshape/reshape_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reshape/reshape_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/roi_pooling/roi_pooling_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/roi_pooling/roi_pooling_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_items_class_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_bf.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_fb.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_items_class_optimized.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/tile/tile_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/tile/tile_kernel_selector.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_base.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_ref.cpp \
+	inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_selector.cpp
+
+include $(BUILD_STATIC_LIBRARY)
\ No newline at end of file
diff --git a/intel_nn_hal/dl/cldnn_plugin.mk b/intel_nn_hal/dl/cldnn_plugin.mk
new file mode 100755
index 0000000..316bcfc
--- /dev/null
+++ b/intel_nn_hal/dl/cldnn_plugin.mk
@@ -0,0 +1,74 @@
+LOCAL_PATH := $(call my-dir)/../../../dldt
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE_OWNER := intel
+
+LOCAL_MODULE := libclDNNPlugin
+
+LOCAL_PROPRIETARY_MODULE := true
+
+LOCAL_MULTILIB := 64
+
+LOCAL_STATIC_LIBRARIES := libpugixml libomp
+
+LOCAL_SHARED_LIBRARIES := liblog libinference_engine libclDNN64
+
+LOCAL_CFLAGS += \
+	-Wno-error \
+	-Wall \
+	-Wno-unknown-pragmas \
+	-Wno-strict-overflow \
+	-Wno-unused-variable \
+	-Wno-unused-parameter \
+	-Wno-non-virtual-dtor \
+	-Wno-missing-field-initializers \
+	-fstack-protector-all \
+	-fexceptions \
+	-frtti \
+	-Wuninitialized \
+	-Winit-self \
+	-Wmaybe-uninitialized \
+	-fPIE \
+	-fPIC \
+	-Wformat \
+	-Wformat-security \
+	-fstack-protector-strong \
+	-O3 \
+	-DNDEBUG \
+	-D_FORTIFY_SOURCE=2 \
+	-s \
+	-fvisibility=hidden \
+	-fvisibility=default \
+	-fopenmp \
+	-std=gnu++11 \
+	-DENABLE_CLDNN=1 \
+	-DENABLE_GNA \
+	-DENABLE_MKL_DNN=1 \
+	-DENABLE_OBJECT_DETECTION_TESTS=1 \
+	-DENABLE_PROFILING_ITT=0 \
+	-DENABLE_SEGMENTATION_TESTS=1 \
+	-DIE_BUILD_POSTFIX=\"\" \
+	-DIE_THREAD=IE_THREAD_OMP \
+	-DIMPLEMENT_INFERENCE_ENGINE_PLUGIN \
+	-DclDNNPlugin_EXPORTS \
+	-D__ANDROID__ -DNNLOG -DDEBUG
+
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/inference-engine/include \
+	$(LOCAL_PATH)/inference-engine/src/cldnn_engine \
+	$(LOCAL_PATH)/inference-engine/src/inference_engine \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/api \
+	$(LOCAL_PATH)/inference-engine/thirdparty/clDNN/include \
+	$(LOCAL_PATH)/inference-engine/thirdparty/pugixml/src
+
+LOCAL_SRC_FILES += \
+	inference-engine/src/cldnn_engine/dllmain.cpp \
+	inference-engine/src/cldnn_engine/cldnn_custom_layer.cpp \
+	inference-engine/src/cldnn_engine/cldnn_engine.cpp \
+	inference-engine/src/cldnn_engine/cldnn_graph.cpp \
+	inference-engine/src/cldnn_engine/cldnn_infer_request.cpp \
+	inference-engine/src/cldnn_engine/debug_options.cpp \
+	inference-engine/src/cldnn_engine/simple_math.cpp
+
+include $(BUILD_SHARED_LIBRARY)
\ No newline at end of file
diff --git a/intel_nn_hal/dl/ie.mk b/intel_nn_hal/dl/ie.mk
index edd84d6..e15db35 100644
--- a/intel_nn_hal/dl/ie.mk
+++ b/intel_nn_hal/dl/ie.mk
@@ -133,7 +133,7 @@ LOCAL_C_INCLUDES += \
 
 LOCAL_CFLAGS += -DIE_THREAD=IE_THREAD_OMP -DIMPLEMENT_INFERENCE_ENGINE_API -DGAPI_STANDALONE -std=c++11  -Wall -Wno-unknown-pragmas -Wno-strict-overflow -fPIC -Wformat -Wformat-security -fstack-protector-all -msse4.2
 LOCAL_CFLAGS += -Wno-unused-variable -Wno-unused-parameter -Wno-non-virtual-dtor -Wno-missing-field-initializers  -fexceptions -frtti -Wno-error
-LOCAL_CFLAGS += -DENABLE_MKL_DNN -D__ANDROID__ -DNDEBUG -DIMPLEMENT_INFERENCE_ENGINE_API -fvisibility=default -std=gnu++11 -D_FORTIFY_SOURCE=2 -fPIE -DUSE_STATIC_IE
+LOCAL_CFLAGS += -DENABLE_MKL_DNN -DENABLE_CLDNN -D__ANDROID__ -DNDEBUG -DIMPLEMENT_INFERENCE_ENGINE_API -fvisibility=default -std=gnu++11 -D_FORTIFY_SOURCE=2 -fPIE -DUSE_STATIC_IE
 #LOCAL_CFLAGS += -DNNLOG
 
 
-- 
2.23.0

