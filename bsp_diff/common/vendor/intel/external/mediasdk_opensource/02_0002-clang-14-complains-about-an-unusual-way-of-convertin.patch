From dd09c67e3c578f719649000a1e10c88da4102ed9 Mon Sep 17 00:00:00 2001
From: svenate <salini.venate@intel.com>
Date: Wed, 16 Mar 2022 01:00:05 +0530
Subject: [PATCH] Fix build error introduced by clang-14

Clang-14 complains about an unusual way of converting 
a pointer to an integer:

error: invalid operands to binary expression 
('uintptr_t *' (aka 'unsigned long *') and 'unsigned long')
   return (T) ((((uintptr_t *) pv) + (lAlignValue - 1)) &

Replace this with a normal cast to uintptr_t.

Signed-off-by: svenate <salini.venate@intel.com>
---
 _studio/shared/umc/core/umc/include/umc_structures.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/_studio/shared/umc/core/umc/include/umc_structures.h b/_studio/shared/umc/core/umc/include/umc_structures.h
index c5fb04e4..18d4ea8b 100644
--- a/_studio/shared/umc/core/umc/include/umc_structures.h
+++ b/_studio/shared/umc/core/umc/include/umc_structures.h
@@ -691,7 +691,7 @@ namespace UMC
     {
         // some compilers complain to conversion to/from
         // pointer types from/to integral types.
-        return (T) ((((uint8_t *) pv - (uint8_t *) 0) + (lAlignValue - 1)) &
+        return (T) ((((uintptr_t ) pv) + (lAlignValue - 1)) &
                     ~(lAlignValue - 1));
     }
 
-- 
2.17.1

