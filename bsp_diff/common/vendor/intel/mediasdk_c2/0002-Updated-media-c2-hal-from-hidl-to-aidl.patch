From e89e975fa4e38f92a316f752cfd915d08ddc8af7 Mon Sep 17 00:00:00 2001
From: Ankit Agarwal <ankit.agarwal@intel.com>
Date: Fri, 2 Aug 2024 22:38:24 +0530
Subject: [PATCH] Updated media c2 hal from hidl to aidl.

Updated android.hardware.media.c2 hal from hidl V1.0 to aidl V1.
The contents of this file was copied from AOSP
frameworks/av/media/codec2/hal/services/vendor.cpp and modified then.

Tests: Prepared EB and its booted successfully.

Tracked-On: OAM-122196
Signed-off-by: Ankit Agarwal <ankit.agarwal@intel.com>
---
 c2_store/Android.bp                           |  65 ++++----
 ...android.hardware.media.c2-service.intel.rc |   7 +
 .../hardware.intel.media.c2@1.0-service.rc    |   6 -
 c2_store/manifest_media_c2_V1_0_default.xml   |  11 --
 c2_store/manifest_media_c2_V1_1_default.xml   |  11 --
 c2_store/manifest_media_c2_V1_2_default.xml   |  11 --
 c2_store/manifest_media_c2_default.xml        |   7 +
 ...roid.hardware.media.c2-default-arm.policy} |   0
 ...id.hardware.media.c2-default-arm64.policy} |   0
 ...d.hardware.media.c2-default-riscv64.policy |  75 ++++++++++
 ...roid.hardware.media.c2-default-x86.policy} |   0
 ...d.hardware.media.c2-default-x86_64.policy} |   0
 c2_store/src/mfx_c2_service.cpp               | 141 +++++++++++++-----
 c2_store/src/mfx_c2_store.cpp                 |   2 +-
 14 files changed, 231 insertions(+), 105 deletions(-)
 create mode 100644 c2_store/android.hardware.media.c2-service.intel.rc
 delete mode 100644 c2_store/hardware.intel.media.c2@1.0-service.rc
 delete mode 100644 c2_store/manifest_media_c2_V1_0_default.xml
 delete mode 100644 c2_store/manifest_media_c2_V1_1_default.xml
 delete mode 100644 c2_store/manifest_media_c2_V1_2_default.xml
 create mode 100644 c2_store/manifest_media_c2_default.xml
 rename c2_store/seccomp_policy/{android.hardware.media.c2@1.0-arm.policy => android.hardware.media.c2-default-arm.policy} (100%)
 rename c2_store/seccomp_policy/{android.hardware.media.c2@1.0-arm64.policy => android.hardware.media.c2-default-arm64.policy} (100%)
 create mode 100644 c2_store/seccomp_policy/android.hardware.media.c2-default-riscv64.policy
 rename c2_store/seccomp_policy/{android.hardware.media.c2@1.0-x86.policy => android.hardware.media.c2-default-x86.policy} (100%)
 rename c2_store/seccomp_policy/{android.hardware.media.c2@1.0-x86_64.policy => android.hardware.media.c2-default-x86_64.policy} (100%)
 mode change 100755 => 100644 c2_store/src/mfx_c2_service.cpp
 mode change 100755 => 100644 c2_store/src/mfx_c2_store.cpp

diff --git a/c2_store/Android.bp b/c2_store/Android.bp
index 64c044e..aca3302 100644
--- a/c2_store/Android.bp
+++ b/c2_store/Android.bp
@@ -1,12 +1,12 @@
 cc_library_static {
 
-    name: "libmfx_c2_store",
+   name: "libmfx_c2_store",
 
-    defaults: ["mfx_c2_defaults"],
+   defaults: ["mfx_c2_defaults"],
 
-    cflags: [
-        "-fexceptions"
-    ],
+   cflags: [
+       "-fexceptions"
+   ],
 
     header_libs: [
         "mfx_c2_components_headers",
@@ -21,12 +21,18 @@ cc_library_static {
 }
 
 cc_binary {
-
-    name: "hardware.intel.media.c2@1.0-service",
-    defaults: ["libcodec2-hidl-defaults", "mfx_c2_exe_defaults"],
+    name: "android.hardware.media.c2-service.intel",
     vendor: true,
     relative_install_path: "hw",
 
+    init_rc: ["android.hardware.media.c2-service.intel.rc"],
+
+    defaults: [
+        "libcodec2-hidl-defaults",
+        "libcodec2-aidl-defaults",
+        "mfx_c2_exe_defaults",
+    ],
+
     local_include_dirs: [
         "include",
     ],
@@ -35,8 +41,6 @@ cc_binary {
         "src/mfx_c2_service.cpp",
     ],
 
-    init_rc: ["hardware.intel.media.c2@1.0-service.rc"],
-
     header_libs: [
         "mfx_c2_components_headers",
         "libmedia_headers",
@@ -46,43 +50,54 @@ cc_binary {
     static_libs: [
         "libmfx_c2_store",
         "libmfx_c2_utils_va",
-        "libexpat"
+        "libexpat",
     ],
 
+    // minijail is used to protect against unexpected system calls.
     shared_libs: [
-        "android.hardware.media.omx@1.0",
         "libavservices_minijail",
         "libbinder",
-        "libhidltransport",
-        "libhwbinder",
-        "libstagefright_omx",
-        "libstagefright_xmlparser",
+        "libbinder_ndk",
     ],
-
-    vintf_fragments: ["manifest_media_c2_V1_0_default.xml"],
-
-    required: ["android.hardware.media.c2@1.0-vendor.policy"],
+    required: ["android.hardware.media.c2-vendor-seccomp_policy"],
 
     compile_multilib: "32",
+    // The content in manifest_media_c2_default.xml can be included
+    // directly in the main device manifest.xml file or via vintf_fragments.
+    // (Remove the line below if the entry is already in the main manifest.)
+    vintf_fragments: ["manifest_media_c2_default.xml"],
 }
 
+// seccomp policy file.
+//
+// This should be modified to suit the target device and architecture.
+//
+// Files in the "seccomp_policy" subdirectory are only provided as examples.
+// They may not work on some devices and/or architectures without modification.
 prebuilt_etc {
-    name: "android.hardware.media.c2@1.0-vendor.policy",
+    name: "android.hardware.media.c2-vendor-seccomp_policy",
     vendor: true,
     sub_dir: "seccomp_policy",
 
+    // If a specific architecture is targeted, multiple choices are not needed.
     arch: {
         arm: {
-            src: "seccomp_policy/android.hardware.media.c2@1.0-arm.policy",
+            src: "seccomp_policy/android.hardware.media.c2-default-arm.policy",
         },
         arm64: {
-            src: "seccomp_policy/android.hardware.media.c2@1.0-arm64.policy",
+            src: "seccomp_policy/android.hardware.media.c2-default-arm64.policy",
+        },
+        riscv64: {
+            src: "seccomp_policy/android.hardware.media.c2-default-riscv64.policy",
         },
         x86: {
-            src: "seccomp_policy/android.hardware.media.c2@1.0-x86.policy",
+            src: "seccomp_policy/android.hardware.media.c2-default-x86.policy",
         },
         x86_64: {
-            src: "seccomp_policy/android.hardware.media.c2@1.0-x86_64.policy",
+            src: "seccomp_policy/android.hardware.media.c2-default-x86_64.policy",
         },
     },
+
+    //This may be removed.
+    required: ["crash_dump.policy"],
 }
diff --git a/c2_store/android.hardware.media.c2-service.intel.rc b/c2_store/android.hardware.media.c2-service.intel.rc
new file mode 100644
index 0000000..a67a932
--- /dev/null
+++ b/c2_store/android.hardware.media.c2-service.intel.rc
@@ -0,0 +1,7 @@
+service hardware-intel-media-c2-hal /vendor/bin/hw/android.hardware.media.c2-service.intel
+    class hal
+    user mediacodec
+    group camera mediadrm drmrpc
+    ioprio rt 4
+    task_profiles ProcessCapacityHigh
+
diff --git a/c2_store/hardware.intel.media.c2@1.0-service.rc b/c2_store/hardware.intel.media.c2@1.0-service.rc
deleted file mode 100644
index 5ec4a5a..0000000
--- a/c2_store/hardware.intel.media.c2@1.0-service.rc
+++ /dev/null
@@ -1,6 +0,0 @@
-service hardware-intel-media-c2-hal-1-0 /vendor/bin/hw/hardware.intel.media.c2@1.0-service
-    class hal
-    user mediacodec
-    group camera mediadrm drmrpc
-    ioprio rt 4
-    writepid /dev/cpuset/foreground/tasks
diff --git a/c2_store/manifest_media_c2_V1_0_default.xml b/c2_store/manifest_media_c2_V1_0_default.xml
deleted file mode 100644
index e97c3ce..0000000
--- a/c2_store/manifest_media_c2_V1_0_default.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<manifest version="1.0" type="device">
-    <hal>
-        <name>android.hardware.media.c2</name>
-        <transport>hwbinder</transport>
-        <version>1.0</version>
-        <interface>
-            <name>IComponentStore</name>
-            <instance>default</instance>
-        </interface>
-    </hal>
-</manifest>
diff --git a/c2_store/manifest_media_c2_V1_1_default.xml b/c2_store/manifest_media_c2_V1_1_default.xml
deleted file mode 100644
index bf0d72f..0000000
--- a/c2_store/manifest_media_c2_V1_1_default.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<manifest version="1.0" type="device">
-    <hal>
-        <name>android.hardware.media.c2</name>
-        <transport>hwbinder</transport>
-        <version>1.1</version>
-        <interface>
-            <name>IComponentStore</name>
-            <instance>default</instance>
-        </interface>
-    </hal>
-</manifest>
diff --git a/c2_store/manifest_media_c2_V1_2_default.xml b/c2_store/manifest_media_c2_V1_2_default.xml
deleted file mode 100644
index a5e8d87..0000000
--- a/c2_store/manifest_media_c2_V1_2_default.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<manifest version="1.0" type="device">
-    <hal>
-        <name>android.hardware.media.c2</name>
-        <transport>hwbinder</transport>
-        <version>1.2</version>
-        <interface>
-            <name>IComponentStore</name>
-            <instance>default</instance>
-        </interface>
-    </hal>
-</manifest>
diff --git a/c2_store/manifest_media_c2_default.xml b/c2_store/manifest_media_c2_default.xml
new file mode 100644
index 0000000..7558d87
--- /dev/null
+++ b/c2_store/manifest_media_c2_default.xml
@@ -0,0 +1,7 @@
+<manifest version="1.0" type="device">
+    <hal format="aidl">
+        <name>android.hardware.media.c2</name>
+        <version>1</version>
+        <fqname>IComponentStore/default</fqname>
+    </hal>
+</manifest>
diff --git a/c2_store/seccomp_policy/android.hardware.media.c2@1.0-arm.policy b/c2_store/seccomp_policy/android.hardware.media.c2-default-arm.policy
similarity index 100%
rename from c2_store/seccomp_policy/android.hardware.media.c2@1.0-arm.policy
rename to c2_store/seccomp_policy/android.hardware.media.c2-default-arm.policy
diff --git a/c2_store/seccomp_policy/android.hardware.media.c2@1.0-arm64.policy b/c2_store/seccomp_policy/android.hardware.media.c2-default-arm64.policy
similarity index 100%
rename from c2_store/seccomp_policy/android.hardware.media.c2@1.0-arm64.policy
rename to c2_store/seccomp_policy/android.hardware.media.c2-default-arm64.policy
diff --git a/c2_store/seccomp_policy/android.hardware.media.c2-default-riscv64.policy b/c2_store/seccomp_policy/android.hardware.media.c2-default-riscv64.policy
new file mode 100644
index 0000000..27f0b95
--- /dev/null
+++ b/c2_store/seccomp_policy/android.hardware.media.c2-default-riscv64.policy
@@ -0,0 +1,75 @@
+# Copyright (C) 2019 The Android Open Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+futex: 1
+# ioctl calls are filtered via the selinux policy.
+ioctl: 1
+sched_yield: 1
+close: 1
+dup: 1
+ppoll: 1
+mprotect: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
+mmap: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
+getuid: 1
+getrlimit: 1
+fstat: 1
+newfstatat: 1
+fstatfs: 1
+memfd_create: 1
+ftruncate: 1
+
+mremap: arg3 == 3 || arg3 == MREMAP_MAYMOVE
+munmap: 1
+prctl: 1
+writev: 1
+sigaltstack: 1
+clone: 1
+exit: 1
+lseek: 1
+rt_sigprocmask: 1
+openat: 1
+write: 1
+nanosleep: 1
+setpriority: 1
+set_tid_address: 1
+getdents64: 1
+readlinkat: 1
+read: 1
+pread64: 1
+gettimeofday: 1
+faccessat: 1
+exit_group: 1
+restart_syscall: 1
+rt_sigreturn: 1
+getrandom: 1
+madvise: 1
+
+# crash dump policy additions
+clock_gettime: 1
+getpid: 1
+gettid: 1
+pipe2: 1
+recvmsg: 1
+process_vm_readv: 1
+tgkill: 1
+rt_sigaction: 1
+rt_tgsigqueueinfo: 1
+#mprotect: arg2 in 0x1|0x2
+munmap: 1
+#mmap: arg2 in 0x1|0x2
+geteuid: 1
+getgid: 1
+getegid: 1
+getgroups: 1
+
diff --git a/c2_store/seccomp_policy/android.hardware.media.c2@1.0-x86.policy b/c2_store/seccomp_policy/android.hardware.media.c2-default-x86.policy
similarity index 100%
rename from c2_store/seccomp_policy/android.hardware.media.c2@1.0-x86.policy
rename to c2_store/seccomp_policy/android.hardware.media.c2-default-x86.policy
diff --git a/c2_store/seccomp_policy/android.hardware.media.c2@1.0-x86_64.policy b/c2_store/seccomp_policy/android.hardware.media.c2-default-x86_64.policy
similarity index 100%
rename from c2_store/seccomp_policy/android.hardware.media.c2@1.0-x86_64.policy
rename to c2_store/seccomp_policy/android.hardware.media.c2-default-x86_64.policy
diff --git a/c2_store/src/mfx_c2_service.cpp b/c2_store/src/mfx_c2_service.cpp
old mode 100755
new mode 100644
index c81d5fa..34362cf
--- a/c2_store/src/mfx_c2_service.cpp
+++ b/c2_store/src/mfx_c2_service.cpp
@@ -1,4 +1,4 @@
-// Copyright (c) 2017-2022 Intel Corporation
+// Copyright (c) 2017-2024 Intel Corporation
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -36,81 +36,142 @@
  */
 
 // The contents of this file was copied
-// from AOSP hardware/google/av/codec2/hidl/services/vendor.cpp
+// from AOSP frameworks/av/media/codec2/hal/services/vendor.cpp
 // and modified then.
 
 //#define LOG_NDEBUG 0
-#define LOG_TAG "hardware.intel.media.c2@1.0-service"
+#define LOG_TAG "android.hardware.media.c2-service.intel"
 
 #include "mfx_c2_store.h"
 
-#include <codec2/hidl/1.0/ComponentStore.h>
-#include <hidl/HidlTransportSupport.h>
-#include <binder/ProcessState.h>
+#include <android-base/logging.h>
 #include <minijail.h>
-#include <dlfcn.h>
 
+#include <util/C2InterfaceHelper.h>
 #include <C2Component.h>
+#include <C2Config.h>
+
+// HIDL
+#include <binder/ProcessState.h>
+#include <codec2/hidl/1.0/ComponentStore.h>
+#include <hidl/HidlTransportSupport.h>
+
+// AIDL
+#include <android/binder_manager.h>
+#include <android/binder_process.h>
+#include <codec2/aidl/ComponentStore.h>
+#include <codec2/aidl/ParamTypes.h>
 
-// This is created by module "codec2.vendor.base.policy". This can be modified.
+// This is the absolute on-device path of the prebuild_etc module
+// "android.hardware.media.c2-default-seccomp_policy" in Android.bp.
 static constexpr char kBaseSeccompPolicyPath[] =
-        "/vendor/etc/seccomp_policy/android.hardware.media.c2@1.0-vendor.policy";
+        "/vendor/etc/seccomp_policy/"
+        "android.hardware.media.c2-vendor-seccomp_policy";
 
-// Additional device-specific seccomp permissions can be added in this file.
+// Additional seccomp permissions can be added in this file.
+// This file does not exist by default.
 static constexpr char kExtSeccompPolicyPath[] =
-        "/vendor/etc/seccomp_policy/android.hardware.media.c2@1.0-vendor.ext.policy";
+        "/vendor/etc/seccomp_policy/"
+        "android.hardware.media.c2-extended-seccomp_policy";
+
+// We want multiple threads to be running so that a blocking operation
+// on one codec does not block the other codecs.
+// For HIDL: Extra threads may be needed to handle a stacked IPC sequence that
+// contains alternating binder and hwbinder calls. (See b/35283480.)
+static constexpr int kThreadCount = 8;
 
-// Create and register IComponentStore service.
-void RegisterC2Service()
-{
-    using namespace ::android::hardware::media::c2::V1_0;
-    android::sp<IComponentStore> store;
+void runAidlService() {
+    ABinderProcess_setThreadPoolMaxThreadCount(kThreadCount);
+    ABinderProcess_startThreadPool();
 
-    ALOGD("Instantiating MFX IComponentStore service...");
+    // Create IComponentStore service.
+    using namespace ::aidl::android::hardware::media::c2;
+    std::shared_ptr<IComponentStore> store;
+
+    LOG(DEBUG) << "Instantiating MFX IComponentStore service...";
 
     c2_status_t status = C2_OK;
     std::shared_ptr<C2ComponentStore> c2_store(MfxC2ComponentStore::Create(&status));
     if (c2_store) {
-        store = new utils::ComponentStore(c2_store);
+        store = ::ndk::SharedRefBase::make<utils::ComponentStore>(c2_store);
     } else {
         ALOGD("Creation MFX IComponentStore failed with status: %d", (int)status);
     }
 
-    if (!store) {
-        ALOGE("Cannot create Codec2's IComponentStore service.");
+    if (store == nullptr) {
+        LOG(ERROR) << "Cannot create Codec2's IComponentStore service.";
     } else {
-        if (store->registerAsService("default") != android::OK) {
-            ALOGE("Cannot register Codec2's "
-                    "IComponentStore service.");
+        const std::string serviceName =
+            std::string(IComponentStore::descriptor) + "/default";
+        binder_exception_t ex = AServiceManager_addService(
+                store->asBinder().get(), serviceName.c_str());
+        if (ex != EX_NONE) {
+            LOG(ERROR) << "Cannot register Codec2's IComponentStore service"
+                          " with instance name << \""
+                       << serviceName << "\".";
         } else {
-            ALOGI("Codec2's IComponentStore service created.");
+            LOG(DEBUG) << "Codec2's IComponentStore service registered. "
+                          "Instance name: \"" << serviceName << "\".";
         }
     }
+
+    ABinderProcess_joinThreadPool();
 }
 
+void runHidlService() {
+    using namespace ::android;
 
-int main(int /* argc */, char** /* argv */) {
-    // ALOGD("hardware.intel.media.c2@1.0-service starting...");
+    // Enable vndbinder to allow vendor-to-vendor binder calls.
+    ProcessState::initWithDriver("/dev/vndbinder");
 
-    signal(SIGPIPE, SIG_IGN);
+    ProcessState::self()->startThreadPool();
+    hardware::configureRpcThreadpool(kThreadCount, true /* callerWillJoin */);
+
+    // Create IComponentStore service.
+    {
+        using namespace ::android::hardware::media::c2::V1_0;
+        sp<IComponentStore> store;
+
+        ALOGD("Instantiating MFX IComponentStore service...");
 
-    try {
-        android::SetUpMinijail(kBaseSeccompPolicyPath, kExtSeccompPolicyPath);
-    
-        // vndbinder is needed by BufferQueue.
-        android::ProcessState::initWithDriver("/dev/vndbinder");
-        android::ProcessState::self()->startThreadPool();
+        c2_status_t status = C2_OK;
+        std::shared_ptr<C2ComponentStore> c2_store(MfxC2ComponentStore::Create(&status));
+        if (c2_store) {
+            store = new utils::ComponentStore(c2_store);
+        } else {
+            ALOGD("Creation MFX IComponentStore failed with status: %d", (int)status);
+        }
 
-        // Extra threads may be needed to handle a stacked IPC sequence that
-        // contains alternating binder and hwbinder calls. (See b/35283480.)
-        android::hardware::configureRpcThreadpool(8, true /* callerWillJoin */);
+        if (store == nullptr) {
+            LOG(ERROR) << "Cannot create Codec2's IComponentStore service.";
+        } else {
+            constexpr char const* serviceName = "default";
+            if (store->registerAsService(serviceName) != OK) {
+                LOG(ERROR) << "Cannot register Codec2's IComponentStore service"
+                              " with instance name << \""
+                           << serviceName << "\".";
+            } else {
+                LOG(DEBUG) << "Codec2's IComponentStore service registered. "
+                              "Instance name: \"" << serviceName << "\".";
+            }
+        }
+    }
 
-        RegisterC2Service();
+    hardware::joinRpcThreadpool();
+}
 
-        android::hardware::joinRpcThreadpool();
+int main(int /* argc */, char** /* argv */) {
+    const bool aidlEnabled = ::aidl::android::hardware::media::c2::utils::IsSelected();
+    LOG(DEBUG) << "android.hardware.media.c2" << (aidlEnabled ? "-V1" : "@1.0")
+               << "-service starting...";
 
-    } catch(const std::exception& ex) {
-        // ALOGE("hardware.intel.media.c2@1.0-service exception: %s", ex.what());
+    // Set up minijail to limit system calls.
+    signal(SIGPIPE, SIG_IGN);
+    android::SetUpMinijail(kBaseSeccompPolicyPath, kExtSeccompPolicyPath);
+    if (aidlEnabled) {
+        runAidlService();
+    } else {
+        runHidlService();
     }
     return 0;
 }
diff --git a/c2_store/src/mfx_c2_store.cpp b/c2_store/src/mfx_c2_store.cpp
old mode 100755
new mode 100644
index 3f25dd9..285d018
--- a/c2_store/src/mfx_c2_store.cpp
+++ b/c2_store/src/mfx_c2_store.cpp
@@ -1,4 +1,4 @@
-// Copyright (c) 2017-2021 Intel Corporation
+// Copyright (c) 2017-2024 Intel Corporation
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
-- 
2.34.1

