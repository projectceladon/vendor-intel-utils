From 060bb4594c05561de97a1bc9191e5dd0800aecd9 Mon Sep 17 00:00:00 2001
From: "ji, zhenlong z" <zhenlong.z.ji@intel.com>
Date: Fri, 17 Sep 2021 16:06:36 +0800
Subject: [PATCH] Update bootctl from v1.1 to v1.2

Add the new module API required by bootctrl v1.2

Tracked-On: OAM-99215
Signed-off-by: ji, zhenlong z <zhenlong.z.ji@intel.com>
---
 boot_control_avb.c      |  5 +++++
 libavb_ab/avb_ab_flow.c | 18 ++++++++++++++++++
 libavb_ab/avb_ab_flow.h |  7 +++++++
 3 files changed, 30 insertions(+)

diff --git a/boot_control_avb.c b/boot_control_avb.c
index 6ceb2ee..2e025a0 100644
--- a/boot_control_avb.c
+++ b/boot_control_avb.c
@@ -89,6 +89,10 @@ static int module_setActiveBootSlot(boot_control_module_t* module,
   }
 }
 
+static unsigned int module_getActiveBootSlot(boot_control_module_t* module) {
+  return avb_ab_get_active_slot(ops->ab_ops);
+}
+
 static int module_setSlotAsUnbootable(struct boot_control_module* module,
                                       unsigned int slot) {
   if (avb_ab_mark_slot_unbootable(ops->ab_ops, slot) == AVB_IO_RESULT_OK) {
@@ -169,4 +173,5 @@ boot_control_module_t HAL_MODULE_INFO_SYM = {
     .isSlotBootable = module_isSlotBootable,
     .getSuffix = module_getSuffix,
     .isSlotMarkedSuccessful = module_isSlotMarkedSuccessful,
+    .getActiveBootSlot = module_getActiveBootSlot,
 };
diff --git a/libavb_ab/avb_ab_flow.c b/libavb_ab/avb_ab_flow.c
index f50fe77..734c168 100644
--- a/libavb_ab/avb_ab_flow.c
+++ b/libavb_ab/avb_ab_flow.c
@@ -443,6 +443,24 @@ out:
   return ret;
 }
 
+unsigned int avb_ab_get_active_slot(AvbABOps* ab_ops) {
+  AvbABData ab_data, ab_data_orig;
+  AvbIOResult ret;
+
+  ret = load_metadata(ab_ops, &ab_data, &ab_data_orig);
+  if (ret != AVB_IO_RESULT_OK) {
+    goto out;
+  }
+
+  for (unsigned int i = 0; i < 2; i++) {
+      if (ab_data_orig.slots[i].priority == AVB_AB_MAX_PRIORITY)
+          return i;
+  }
+
+out:
+  return 0;
+}
+
 AvbIOResult avb_ab_mark_slot_unbootable(AvbABOps* ab_ops,
                                         unsigned int slot_number) {
   AvbABData ab_data, ab_data_orig;
diff --git a/libavb_ab/avb_ab_flow.h b/libavb_ab/avb_ab_flow.h
index 588026d..ec27b2d 100644
--- a/libavb_ab/avb_ab_flow.h
+++ b/libavb_ab/avb_ab_flow.h
@@ -232,6 +232,13 @@ AvbABFlowResult avb_ab_flow(AvbABOps* ab_ops,
  */
 AvbIOResult avb_ab_mark_slot_active(AvbABOps* ab_ops, unsigned int slot_number);
 
+/* Support the user to get the current active slot, return
+ * the current active slot number.
+ *
+ * This function is typically used by user through the bootctl command.
+ */
+unsigned int avb_ab_get_active_slot(AvbABOps* ab_ops);
+
 /* Marks the slot with the given slot number as unbootable. Returns
  * AVB_IO_RESULT_OK on success, error code otherwise.
  *
-- 
2.25.1

