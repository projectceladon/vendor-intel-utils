From 18381a8a05a9cdae94e1fe3874935151ea61a7a3 Mon Sep 17 00:00:00 2001
From: Yerriswamy <yerriswamy.kt@intel.com>
Date: Fri, 14 Jul 2023 14:38:58 +0530
Subject: [PATCH] Fix crash seen during unloading of oneVPL GPU runtime

While VPL dispatch tries to unload all libaries, crash seen
in oneVPL GPU runtime release.

As the PerfUtility member variables are not initialized properly,
usage of macro PERF_UTILITY_PRINT tries to create folder which
results in crash.

Fix the issue by initializing member variables of PerfUtility to
0 that will make sure perf logging is disabled.

Change-Id: I146a4907bfa5658230ebb42846dc0651fba31aa4
Tracked-On: OAM-110789
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com
Signed-off-by: Yerriswamy <yerriswamy.kt@intel.com>
---
 _studio/shared/mfx_logging/src/mfx_utils_perf.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/_studio/shared/mfx_logging/src/mfx_utils_perf.cpp b/_studio/shared/mfx_logging/src/mfx_utils_perf.cpp
index 41b1f8c7..9abde6b7 100644
--- a/_studio/shared/mfx_logging/src/mfx_utils_perf.cpp
+++ b/_studio/shared/mfx_logging/src/mfx_utils_perf.cpp
@@ -133,8 +133,8 @@ PerfUtility* PerfUtility::getInstance()
 
 PerfUtility::PerfUtility()
 {
-    int32_t dwPerfUtilityIsEnabled = 0;
-    double timeStamp = 0;
+    dwPerfUtilityIsEnabled = 0;
+    timeStamp = 0;
 }
 
 PerfUtility::~PerfUtility()
@@ -253,4 +253,5 @@ void PerfUtility::printPerfTimeStamp(Tick *newTick, const std::vector<uint32_t>&
         }
     }
     it->second.append("\n");
-}
\ No newline at end of file
+    log_buffer[current_tid].append("\n");
+}
-- 
2.17.1

