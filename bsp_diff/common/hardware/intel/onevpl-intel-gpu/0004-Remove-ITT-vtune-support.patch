From 36dba165ad569e34676ed6b7c6ec8405b3855818 Mon Sep 17 00:00:00 2001
From: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Date: Thu, 10 Nov 2022 00:23:21 +0530
Subject: [PATCH] Remove ITT (vtune) support

Change-Id: I12eca3dbbb9e74a8b8997b0c0ac1937b3463c215
Tracked-On: OAM-105683
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Signed-off-by: yerriswamy <yerriswamy.kt@intel.com>
---
 CMakeLists.txt                                |   6 -
 README.md                                     |  21 ---
 _studio/mfx_lib/Android.mk                    |   7 +-
 _studio/mfx_lib/CMakeLists.txt                |   1 -
 _studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp     |   6 +-
 _studio/shared/include/mfx_config.h           |   7 +-
 _studio/shared/include/mfx_trace.h            |   1 -
 _studio/shared/mfx_trace/Android.mk           |   5 -
 _studio/shared/mfx_trace/CMakeLists.txt       |   4 +-
 .../shared/mfx_trace/include/mfx_trace_itt.h  |  79 ----------
 _studio/shared/mfx_trace/src/mfx_trace.cpp    |  17 ---
 .../shared/mfx_trace/src/mfx_trace_itt.cpp    | 143 ------------------
 android/mfx_defs.mk                           |  18 +--
 builder/BuildOptions.cmake                    |   2 -
 builder/FindGlobals.cmake                     |   1 -
 builder/FindITT.cmake                         |  76 ----------
 builder/FindTrace.cmake                       |   4 -
 builder/FindVTune.cmake                       |  63 --------
 18 files changed, 12 insertions(+), 449 deletions(-)
 delete mode 100644 _studio/shared/mfx_trace/include/mfx_trace_itt.h
 delete mode 100644 _studio/shared/mfx_trace/src/mfx_trace_itt.cpp
 delete mode 100644 builder/FindITT.cmake
 delete mode 100644 builder/FindVTune.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6b8905cd..e4394fa8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -74,7 +74,6 @@ include( ${BUILDER_ROOT}/FindOpenCL.cmake )
 include( ${BUILDER_ROOT}/FindFunctions.cmake )
 include( ${BUILDER_ROOT}/BuildOptions.cmake )
 include( ${BUILDER_ROOT}/FindGlobals.cmake )
-include( ${BUILDER_ROOT}/FindITT.cmake )
 include( ${BUILDER_ROOT}/FindIPP.cmake OPTIONAL)
 include( ${BUILDER_ROOT}/FindPackages.cmake )
 
@@ -88,10 +87,6 @@ if (BUILD_RUNTIME)
 endif()
 
 
-if (ENABLE_ITT)
-  target_link_libraries(mfx_common_properties INTERFACE itt)
-endif()
-
 message("")
 message("********************** oneVPL GPU Runtime Configuration Summary **********************")
 message("oneVPL:")
@@ -137,7 +132,6 @@ message("  CMAKE_INSTALL_FULL_INCLUDEDIR           : ${CMAKE_INSTALL_FULL_INCLUD
 message("  CMAKE_INSTALL_FULL_LIBDIR               : ${CMAKE_INSTALL_FULL_LIBDIR}")
 message("  CMAKE_INSTALL_FULL_DATADIR              : ${CMAKE_INSTALL_FULL_DATADIR}")
 message("Enable:")
-message("  ENABLE_ITT                              : ${ENABLE_ITT}")
 message("  ENABLE_TEXTLOG                          : ${ENABLE_TEXTLOG}")
 message("  ENABLE_STAT                             : ${ENABLE_STAT}")
 message("  ENABLE_PXP                              : ${MFX_ENABLE_PXP}")
diff --git a/README.md b/README.md
index ab15fbdf..c84d3785 100644
--- a/README.md
+++ b/README.md
@@ -53,7 +53,6 @@ Dispatcher and Samples code hosted in [oneVPL](https://github.com/oneapi-src/one
   * [System requirements](#system-requirements)
   * [How to build](#how-to-build)
     * [Build steps](#build-steps)
-    * [Enabling Instrumentation and Tracing Technology (ITT)](#enabling-instrumentation-and-tracing-technology-itt)
   * [Recommendations](#recommendations)
   * [See also](#see-also)
 
@@ -98,7 +97,6 @@ oneVPL GPU Runtime depends on a number of packages which are identified and chec
 
 | Option | Values | Description |
 | ------ | ------ | ----------- |
-| ENABLE_ITT | ON\|OFF | Enable ITT (VTune) instrumentation support (default: OFF) |
 | ENABLE_TEXTLOG | ON\|OFF | Enable textlog trace support (default: OFF) |
 | ENABLE_STAT | ON\|OFF | Enable stat trace support (default: OFF) |
 | BUILD_ALL | ON\|OFF | Build all the BUILD_* targets below (default: OFF) |
@@ -109,25 +107,6 @@ oneVPL GPU Runtime depends on a number of packages which are identified and chec
 | MFX_ENABLE_KERNELS | ON\|OFF | Build oneVPL with [media shaders](https://github.com/Intel-Media-SDK/MediaSDK/wiki/Media-SDK-Shaders-(EU-Kernels)) support (default: ON) |
 
 
-The following cmake settings can be used to adjust search path locations for some components oneVPL GPU Runtime build may depend on:
-
-| Setting | Values | Description |
-| ------- | ------ | ----------- |
-| CMAKE_ITT_HOME | Valid system path | Location of ITT installation, takes precendence over CMAKE_VTUNE_HOME (by default not defined) |
-| CMAKE_VTUNE_HOME | Valid system path | Location of VTune installation (default: /opt/intel/vtune_amplifier) |
-
-## Enabling Instrumentation and Tracing Technology (ITT)
-
-To enable the Instrumentation and Tracing Technology (ITT) API you need to:
-* Either install [Intel® VTune™ Amplifier](https://software.intel.com/en-us/intel-vtune-amplifier-xe)
-* Or manually build an open source version (see [ITT API](https://github.com/intel/ittapi) for details)
-
-and configure oneVPL GPU Runtime with the -DENABLE_ITT=ON. In case of VTune it will be searched in the default location (/opt/intel/vtune_amplifier). You can adjust ITT search path with either CMAKE_ITT_HOME or CMAKE_VTUNE_HOME.
-
-Once oneVPL GPU Runtime was built with ITT support, enable it in a runtime creating per-user configuration file ($HOME/.mfx_trace) or a system wide configuration file (/etc/mfx_trace) with the following content:
-```sh
-Output=0x10
-```
 # Recommendations
 
 * In case of GCC compiler it is strongly recommended to use GCC version 6 or later since that's the first GCC version which has non-experimental support of C++14 being used in oneVPL GPU Runtime.
diff --git a/_studio/mfx_lib/Android.mk b/_studio/mfx_lib/Android.mk
index 8592de3b..913687d6 100644
--- a/_studio/mfx_lib/Android.mk
+++ b/_studio/mfx_lib/Android.mk
@@ -174,7 +174,7 @@ MFX_SHARED_FILES_IMPL := $(addprefix mfx_lib/shared/src/, \
     mfx_vc1_dec_common.cpp \
     mfx_vpx_dec_common.cpp \
     mfx_mpeg2_dec_common.cpp \
-    mfx_log.cpp \ 
+    mfx_log.cpp \
     mfx_common_decode_int.cpp)
 
 MFX_SHARED_FILES_HW := \
@@ -253,6 +253,7 @@ LOCAL_C_INCLUDES := \
     $(MFX_INCLUDES_INTERNAL_HW)
 
 LOCAL_CPPFLAGS += -std=c++14
+
 LOCAL_CFLAGS := \
     $(MFX_CFLAGS_INTERNAL_HW) \
     -Wno-error -Wno-unused-parameter -Wno-implicit-fallthrough
@@ -292,10 +293,6 @@ LOCAL_HEADER_LIBRARIES := libmfx_gen_headers
 LOCAL_WHOLE_STATIC_LIBRARIES := $(MFX_LOCAL_STATIC_LIBRARIES_HW)
 LOCAL_SHARED_LIBRARIES := libva liblog libcutils libdrm
 
-ifeq ($(MFX_ENABLE_ITT_TRACES),true)
-    LOCAL_WHOLE_STATIC_LIBRARIES += libittnotify
-endif
-
 LOCAL_MODULE_TAGS := optional
 LOCAL_MODULE := libmfx-gen
 
diff --git a/_studio/mfx_lib/CMakeLists.txt b/_studio/mfx_lib/CMakeLists.txt
index b8bf349f..fc34ad3e 100644
--- a/_studio/mfx_lib/CMakeLists.txt
+++ b/_studio/mfx_lib/CMakeLists.txt
@@ -98,7 +98,6 @@ set(LIBS
   mfx_logging
   $<$<BOOL:${MFX_ENABLE_ENCTOOLS}>:enctools_base>
   ${HW_ONLY_LIBS}
-  $<$<BOOL:${ITT_FOUND}>:itt>
   Threads::Threads
   ${CMAKE_DL_LIBS}
   $<$<PLATFORM_ID:Windows>:cfgmgr32>
diff --git a/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp b/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp
index d6b520bb..de9e0af3 100644
--- a/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp
+++ b/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp
@@ -111,6 +111,7 @@ const mfxU32 g_TABLE_CONFIG [] =
     MFX_EXTBUFF_CONTENT_LIGHT_LEVEL_INFO,
     MFX_EXTBUFF_MASTERING_DISPLAY_COLOUR_VOLUME_IN,
     MFX_EXTBUFF_MASTERING_DISPLAY_COLOUR_VOLUME_OUT,
+#ifdef ONEVPL_EXPERIMENTAL
     MFX_EXTBUF_CAM_PIPECONTROL,
     MFX_EXTBUF_CAM_3DLUT,
     MFX_EXTBUF_CAM_FORWARD_GAMMA_CORRECTION,
@@ -124,7 +125,6 @@ const mfxU32 g_TABLE_CONFIG [] =
     MFX_EXTBUF_CAM_LENS_GEOM_DIST_CORRECTION,
     MFX_EXTBUF_CAM_TOTAL_COLOR_CONTROL,
     MFX_EXTBUF_CAM_CSC_YUV_RGB
-#if defined (ONEVPL_EXPERIMENTAL)
     , MFX_EXTBUFF_VPP_PERC_ENC_PREFILTER
 #endif
 };
@@ -167,7 +167,6 @@ const mfxU32 g_TABLE_EXT_PARAM [] =
     MFX_EXTBUF_CAM_PIPECONTROL,
     MFX_EXTBUF_CAM_3DLUT,
     MFX_EXTBUF_CAM_FORWARD_GAMMA_CORRECTION,
-#endif
     MFX_EXTBUF_CAM_WHITE_BALANCE,
     MFX_EXTBUF_CAM_BLACK_LEVEL_CORRECTION,
     MFX_EXTBUF_CAM_BAYER_DENOISE,
@@ -178,7 +177,6 @@ const mfxU32 g_TABLE_EXT_PARAM [] =
     MFX_EXTBUF_CAM_LENS_GEOM_DIST_CORRECTION,
     MFX_EXTBUF_CAM_TOTAL_COLOR_CONTROL,
     MFX_EXTBUF_CAM_CSC_YUV_RGB
-#if defined (ONEVPL_EXPERIMENTAL)
     , MFX_EXTBUFF_VPP_PERC_ENC_PREFILTER
 #endif
 };
@@ -2382,7 +2380,6 @@ void ConvertCaps2ListDoUse(MfxHwVideoProcessing::mfxVppCaps& caps, std::vector<m
     {
         list.push_back(MFX_EXTBUF_CAM_3DLUT);
     }
-#endif
 
     if (caps.cameraCaps.uWhiteBalance)
     {
@@ -2433,6 +2430,7 @@ void ConvertCaps2ListDoUse(MfxHwVideoProcessing::mfxVppCaps& caps, std::vector<m
     {
         list.push_back(MFX_EXTBUF_CAM_CSC_YUV_RGB);
     }
+#endif
 
     /*ColorFill is always present*/
     list.push_back(MFX_EXTBUFF_VPP_COLORFILL);
diff --git a/_studio/shared/include/mfx_config.h b/_studio/shared/include/mfx_config.h
index dfa860ae..7f5aa468 100644
--- a/_studio/shared/include/mfx_config.h
+++ b/_studio/shared/include/mfx_config.h
@@ -77,17 +77,12 @@
 */
 #ifndef MFX_TRACE_DISABLE
 // Uncomment one or several lines below to enable tracing
-//#define MFX_TRACE_ENABLE_ITT
 #if !defined (MFX_TRACE_ENABLE_TEXTLOG)
 #define MFX_TRACE_ENABLE_TEXTLOG
 #endif
 //#define MFX_TRACE_ENABLE_STAT
-#if defined(MFX_TRACE_ENABLE_ITT) && !defined(MFX_TRACE_ENABLE_FTRACE)
-    // Accompany ITT trace with ftrace. This combination is used by VTune.
-    #define MFX_TRACE_ENABLE_FTRACE
-#endif
 
-#if defined(MFX_TRACE_ENABLE_TEXTLOG) || defined(MFX_TRACE_ENABLE_STAT) || defined(MFX_TRACE_ENABLE_ITT) || defined(MFX_TRACE_ENABLE_FTRACE)
+#if defined(MFX_TRACE_ENABLE_TEXTLOG) || defined(MFX_TRACE_ENABLE_STAT) || defined(MFX_TRACE_ENABLE_FTRACE)
 #define MFX_TRACE_ENABLE
 #endif
 #endif // #ifndef MFX_TRACE_DISABLE
diff --git a/_studio/shared/include/mfx_trace.h b/_studio/shared/include/mfx_trace.h
index 33722c6d..8864ef1f 100644
--- a/_studio/shared/include/mfx_trace.h
+++ b/_studio/shared/include/mfx_trace.h
@@ -154,7 +154,6 @@ enum
     MFX_TRACE_OUTPUT_ETW    = 0x04,
     MFX_TRACE_OUTPUT_TAL    = 0x08,
 
-    MFX_TRACE_OUTPUT_ITT    = 0x10,
     MFX_TRACE_OUTPUT_FTRACE = 0x20,
     // special keys
     MFX_TRACE_OUTPUT_ALL     = 0xFFFFFFFF,
diff --git a/_studio/shared/mfx_trace/Android.mk b/_studio/shared/mfx_trace/Android.mk
index e22c3eb9..f1411169 100644
--- a/_studio/shared/mfx_trace/Android.mk
+++ b/_studio/shared/mfx_trace/Android.mk
@@ -19,11 +19,6 @@ LOCAL_CFLAGS_64 := $(MFX_CFLAGS_INTERNAL_64)
 
 LOCAL_HEADER_LIBRARIES := libmfx_gen_headers
 
-ifeq ($(MFX_ENABLE_ITT_TRACES),true)
-  LOCAL_STATIC_LIBRARIES += libittnotify
-  LOCAL_HEADER_LIBRARIES += llibittnotify_headers
-endif
-
 LOCAL_MODULE_TAGS := optional
 LOCAL_MODULE := libmfx_gen_trace
 
diff --git a/_studio/shared/mfx_trace/CMakeLists.txt b/_studio/shared/mfx_trace/CMakeLists.txt
index d7075682..aa47d672 100644
--- a/_studio/shared/mfx_trace/CMakeLists.txt
+++ b/_studio/shared/mfx_trace/CMakeLists.txt
@@ -4,14 +4,12 @@ add_library(mfx_trace STATIC)
 target_sources(mfx_trace
   PRIVATE
     include/mfx_trace_ftrace.h
-    include/mfx_trace_itt.h
     include/mfx_trace_stat.h
     include/mfx_trace_textlog.h
     include/mfx_trace_utils.h
     include/sys/mfx_trace_utils_linux.h
     src/mfx_trace.cpp
     src/mfx_trace_ftrace.cpp
-    src/mfx_trace_itt.cpp
     src/mfx_trace_ir.cpp
     src/mfx_trace_stat.cpp
     src/mfx_trace_textlog.cpp
@@ -38,4 +36,4 @@ target_link_libraries(mfx_trace
     mfx_sdl_properties
   )
 
-include(sources_ext.cmake OPTIONAL)
\ No newline at end of file
+include(sources_ext.cmake OPTIONAL)
diff --git a/_studio/shared/mfx_trace/include/mfx_trace_itt.h b/_studio/shared/mfx_trace/include/mfx_trace_itt.h
deleted file mode 100644
index cc59b617..00000000
--- a/_studio/shared/mfx_trace/include/mfx_trace_itt.h
+++ /dev/null
@@ -1,79 +0,0 @@
-// Copyright (c) 2012-2020 Intel Corporation
-//
-// Permission is hereby granted, free of charge, to any person obtaining a copy
-// of this software and associated documentation files (the "Software"), to deal
-// in the Software without restriction, including without limitation the rights
-// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-// copies of the Software, and to permit persons to whom the Software is
-// furnished to do so, subject to the following conditions:
-//
-// The above copyright notice and this permission notice shall be included in all
-// copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-// SOFTWARE.
-
-#ifndef __MFX_TRACE_ITT_LOG_H__
-#define __MFX_TRACE_ITT_LOG_H__
-
-#include "mfx_trace.h"
-
-#ifdef MFX_TRACE_ENABLE_ITT
-
-/*------------------------------------------------------------------------------*/
-/*
-// trace registry options and parameters
-#define MFX_TRACE_TEXTLOG_REG_FILE_NAME MFX_TRACE_STRING("TextLog")
-#define MFX_TRACE_TEXTLOG_REG_SUPPRESS  MFX_TRACE_STRING("TextLogSuppress")
-#define MFX_TRACE_TEXTLOG_REG_PERMIT    MFX_TRACE_STRING("TextLogPermit")
-
-// defines suppresses of the output (where applicable)
-enum
-{
-    MFX_TRACE_TEXTLOG_SUPPRESS_FILE_NAME     = 0x01,
-    MFX_TRACE_TEXTLOG_SUPPRESS_LINE_NUM      = 0x02,
-    MFX_TRACE_TEXTLOG_SUPPRESS_CATEGORY      = 0x04,
-    MFX_TRACE_TEXTLOG_SUPPRESS_LEVEL         = 0x08,
-    MFX_TRACE_TEXTLOG_SUPPRESS_FUNCTION_NAME = 0x10
-};
-*/
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_Init();
-
-mfxTraceU32 MFXTraceITT_SetLevel(mfxTraceChar* category,
-                               mfxTraceLevel level);
-
-mfxTraceU32 MFXTraceITT_DebugMessage(mfxTraceStaticHandle *static_handle,
-                                   const char *file_name, mfxTraceU32 line_num,
-                                   const char *function_name,
-                                   mfxTraceChar* category, mfxTraceLevel level,
-                                   const char *message,
-                                   const char *format, ...);
-
-mfxTraceU32 MFXTraceITT_vDebugMessage(mfxTraceStaticHandle *static_handle,
-                                    const char *file_name, mfxTraceU32 line_num,
-                                    const char *function_name,
-                                    mfxTraceChar* category, mfxTraceLevel level,
-                                    const char *message,
-                                    const char *format, va_list args);
-
-mfxTraceU32 MFXTraceITT_BeginTask(mfxTraceStaticHandle *static_handle,
-                                const char *file_name, mfxTraceU32 line_num,
-                                const char *function_name,
-                                mfxTraceChar* category, mfxTraceLevel level,
-                                const char *task_name, const mfxTraceTaskType task_type,
-                                mfxTraceTaskHandle *task_handle, const void *task_params);
-
-mfxTraceU32 MFXTraceITT_EndTask(mfxTraceStaticHandle *static_handle,
-                              mfxTraceTaskHandle *task_handle);
-
-mfxTraceU32 MFXTraceITT_Close(void);
-
-#endif // #ifdef MFX_TRACE_ENABLE_TEXTLOG
-#endif // #ifndef __MFX_TRACE_ITT_LOG_H__
diff --git a/_studio/shared/mfx_trace/src/mfx_trace.cpp b/_studio/shared/mfx_trace/src/mfx_trace.cpp
index 7eacb329..55e171c6 100644
--- a/_studio/shared/mfx_trace/src/mfx_trace.cpp
+++ b/_studio/shared/mfx_trace/src/mfx_trace.cpp
@@ -39,7 +39,6 @@ extern "C"
 #include "mfx_trace_utils.h"
 #include "mfx_trace_textlog.h"
 #include "mfx_trace_stat.h"
-#include "mfx_trace_itt.h"
 #include "mfx_trace_ftrace.h"
 }
 #include <stdlib.h>
@@ -146,19 +145,6 @@ mfxTraceAlgorithm g_TraceAlgorithms[] =
         MFXTraceTAL_Close
     },
 #endif
-#ifdef MFX_TRACE_ENABLE_ITT
-    {
-        0,
-        MFX_TRACE_OUTPUT_ITT,
-        MFXTraceITT_Init,
-        MFXTraceITT_SetLevel,
-        MFXTraceITT_DebugMessage,
-        MFXTraceITT_vDebugMessage,
-        MFXTraceITT_BeginTask,
-        MFXTraceITT_EndTask,
-        MFXTraceITT_Close
-    },
-#endif
 #ifdef MFX_TRACE_ENABLE_FTRACE
     {
         0,
@@ -312,9 +298,6 @@ mfxTraceU32 MFXTrace_Init()
 #if defined(MFX_TRACE_ENABLE_TAL)
     g_OutputMode |= MFX_TRACE_OUTPUT_TAL;
 #endif
-#if defined(MFX_TRACE_ENABLE_ITT)
-    g_OutputMode |= MFX_TRACE_OUTPUT_ITT;
-#endif
 #if defined(MFX_TRACE_ENABLE_FTRACE)
     g_OutputMode |= MFX_TRACE_OUTPUT_FTRACE;
 #endif
diff --git a/_studio/shared/mfx_trace/src/mfx_trace_itt.cpp b/_studio/shared/mfx_trace/src/mfx_trace_itt.cpp
deleted file mode 100644
index 8c750d47..00000000
--- a/_studio/shared/mfx_trace/src/mfx_trace_itt.cpp
+++ /dev/null
@@ -1,143 +0,0 @@
-// Copyright (c) 2012-2020 Intel Corporation
-//
-// Permission is hereby granted, free of charge, to any person obtaining a copy
-// of this software and associated documentation files (the "Software"), to deal
-// in the Software without restriction, including without limitation the rights
-// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-// copies of the Software, and to permit persons to whom the Software is
-// furnished to do so, subject to the following conditions:
-//
-// The above copyright notice and this permission notice shall be included in all
-// copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-// SOFTWARE.
-
-#include "mfx_trace.h"
-
-#ifdef MFX_TRACE_ENABLE_ITT
-extern "C"
-{
-
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wattributes"
-
-#include <ittnotify.h>
-
-#pragma GCC diagnostic pop
-
-#include <stdio.h>
-#include "mfx_trace_utils.h"
-#include "mfx_trace_textlog.h"
-
-
-
-static __itt_domain* GetDomain(){
-    static __itt_domain* pTheDomain  = __itt_domain_create("MediaSDK");
-    return pTheDomain;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_Init()
-{
-    return 0;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_Close(void)
-{
-    return 0;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_SetLevel(mfxTraceChar* /*category*/, mfxTraceLevel /*level*/)
-{
-    return 1;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_DebugMessage(mfxTraceStaticHandle* /*static_handle*/,
-                                   const char * /*file_name*/, mfxTraceU32 /*line_num*/,
-                                   const char * /*function_name*/,
-                                   mfxTraceChar* /*category*/, mfxTraceLevel /*level*/,
-                                   const char * /*message*/, const char * /*format*/, ...)
-{
-    mfxTraceU32 res = 0;
-    return res;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_vDebugMessage(mfxTraceStaticHandle* //static_handle
-                                      ,const char * //file_name
-                                      ,mfxTraceU32 //line_num
-                                      ,const char * //function_name
-                                      ,mfxTraceChar* //category
-                                      ,mfxTraceLevel //level
-                                      ,const char * //message
-                                      ,const char * //format
-                                      ,va_list //args
-                                      )
-{
-    return 0;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_BeginTask(mfxTraceStaticHandle *static_handle
-                                ,const char * //file_name
-                                ,mfxTraceU32 //line_num
-                                ,const char * //function_name
-                                ,mfxTraceChar* //category
-                                ,mfxTraceLevel level
-                                ,const char * task_name
-                                ,const mfxTraceTaskType //task_type
-                                ,mfxTraceTaskHandle *handle
-                                ,const void * /*task_params*/)
-{
-    if (!static_handle || !handle) return 1;
-
-    if (MFX_TRACE_LEVEL_API == level ||
-        MFX_TRACE_LEVEL_HOTSPOTS == level ||
-        MFX_TRACE_LEVEL_EXTCALL == level)
-    {
-        // cache string handle across task instances
-        if (NULL == static_handle->itt1.ptr)
-        {
-            static_handle->itt1.ptr = __itt_string_handle_create(task_name);
-        }
-
-        // task is traced
-        handle->itt1.uint32 = 1;
-
-        __itt_task_begin(GetDomain(), __itt_null, __itt_null,
-            (__itt_string_handle*)static_handle->itt1.ptr);
-    }
-
-    return 0;
-}
-
-/*------------------------------------------------------------------------------*/
-
-mfxTraceU32 MFXTraceITT_EndTask(mfxTraceStaticHandle * //static_handle
-                                ,mfxTraceTaskHandle *handle
-                                )
-{
-    if (!handle) return 1;
-
-    if (1 == handle->itt1.uint32) __itt_task_end(GetDomain());
-
-    return 0;
-}
-
-} // extern "C"
-#endif // #ifdef MFX_TRACE_ENABLE_ITT
diff --git a/android/mfx_defs.mk b/android/mfx_defs.mk
index 1674cefe..389dbfd1 100644
--- a/android/mfx_defs.mk
+++ b/android/mfx_defs.mk
@@ -62,17 +62,6 @@ MFX_CFLAGS += \
   -Wformat -Wformat-security \
   -fexceptions -frtti -msse4.1
 
-ifeq ($(filter MFX_O MFX_O_MR1, $(MFX_ANDROID_VERSION)),)
-  ifeq ($(MFX_ENABLE_ITT_TRACES),)
-    # Enabled ITT traces by default
-    MFX_ENABLE_ITT_TRACES := true
-  endif
-endif
-
-ifeq ($(MFX_ENABLE_ITT_TRACES),true)
-  MFX_CFLAGS += -DMFX_TRACE_ENABLE_ITT
-endif
-
 # Enable feature with output decoded frames without latency regarding
 # SPS.VUI.max_num_reorder_frames
 ifeq ($(ENABLE_MAX_NUM_REORDER_FRAMES_OUTPUT),)
@@ -106,7 +95,12 @@ LOCAL_MODULE_OWNER := intel
 # Moving executables to proprietary location
 LOCAL_PROPRIETARY_MODULE := true
 
+LOCAL_CPPFLAGS := -Wno-deprecated-declarations \
+	          -Wno-missing-field-initializers \
+		  -Wno-implicit-fallthrough
+
+
 # =============================================================================
 
 # Definitions specific to Media SDK internal things (do not apply for samples)
-include $(MFX_HOME)/android/mfx_defs_internal.mk
\ No newline at end of file
+include $(MFX_HOME)/android/mfx_defs_internal.mk
diff --git a/builder/BuildOptions.cmake b/builder/BuildOptions.cmake
index 770fe7f2..8d626af4 100644
--- a/builder/BuildOptions.cmake
+++ b/builder/BuildOptions.cmake
@@ -42,8 +42,6 @@ option( ENABLE_OPENCL "Build targets dependent on OpenCL?" ON )
 #
 option( ENABLE_ALL "Enable all dependencies and features?" OFF )
 
-  option( ENABLE_ITT "Build targets with ITT instrumentation support (requires VTune)?" ${ENABLE_ALL} )
-
 option( ENABLE_TEXTLOG "Enable textlog tracing?" ${ENABLE_ALL})
 option( ENABLE_STAT "Enable stat tracing?" ${ENABLE_ALL})
 
diff --git a/builder/FindGlobals.cmake b/builder/FindGlobals.cmake
index 174b3e06..c589eda1 100644
--- a/builder/FindGlobals.cmake
+++ b/builder/FindGlobals.cmake
@@ -275,7 +275,6 @@ target_compile_definitions(mfx_common_properties
   INTERFACE
     $<$<BOOL:${ENABLE_TEXTLOG}>:MFX_TRACE_ENABLE_TEXTLOG>
     $<$<BOOL:${ENABLE_STAT}>:MFX_TRACE_ENABLE_STAT>
-    $<$<BOOL:${ENABLE_ITT}>:MFX_TRACE_ENABLE_ITT>
   )
 
 target_compile_definitions(mfx_common_properties
diff --git a/builder/FindITT.cmake b/builder/FindITT.cmake
deleted file mode 100644
index ed4d3d00..00000000
--- a/builder/FindITT.cmake
+++ /dev/null
@@ -1,76 +0,0 @@
-# Copyright (c) 2017-2019 Intel Corporation
-#
-# Permission is hereby granted, free of charge, to any person obtaining a copy
-# of this software and associated documentation files (the "Software"), to deal
-# in the Software without restriction, including without limitation the rights
-# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-# copies of the Software, and to permit persons to whom the Software is
-# furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included in all
-# copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-# SOFTWARE.
-
-if( ENABLE_ITT )
-
-  if(CMAKE_SIZEOF_VOID_P EQUAL 8)
-    set( arch "64" )
-  else()
-    set( arch "32" )
-  endif()
-
-    # VTune is a source of ITT library
-    if( NOT CMAKE_VTUNE_HOME )
-      set( CMAKE_VTUNE_HOME /opt/intel/vtune_amplifier )
-    endif()
-
-    find_path( ITT_INCLUDE_DIRS ittnotify.h
-      PATHS ${CMAKE_ITT_HOME} ${CMAKE_VTUNE_HOME}
-      PATH_SUFFIXES include )
-
-    # Unfortunately SEAPI and VTune uses different names for itt library:
-    #  * SEAPI uses libittnotify${arch}.a
-    #  * VTune uses libittnotify.a
-    # We are trying to check both giving preference to SEAPI name.
-    find_path( ITT_LIBRARY_DIRS libittnotify${arch}.a
-      PATHS ${CMAKE_ITT_HOME} ${CMAKE_VTUNE_HOME}
-      PATH_SUFFIXES lib64 )
-    if( NOT ITT_LIBRARY_DIRS MATCHES NOTFOUND )
-      set( ITT_LIBRARIES "ittnotify${arch}" )
-    else()
-      find_path( ITT_LIBRARY_DIRS libittnotify.a
-        PATHS ${CMAKE_ITT_HOME} ${CMAKE_VTUNE_HOME}
-        PATH_SUFFIXES lib64 )
-      if( NOT ITT_LIBRARY_PATH MATCHES NOTFOUND )
-        set( ITT_LIBRARIES "ittnotify" )
-      endif()
-    endif()
-
-  if(NOT ITT_INCLUDE_DIRS MATCHES NOTFOUND AND
-    NOT ITT_LIBRARY_DIRS MATCHES NOTFOUND)
-
-    set( ITT_FOUND TRUE )
-  endif()
-  
-  if (ITT_FOUND)
-    message( STATUS "itt header is in ${ITT_INCLUDE_DIRS}" )
-    message( STATUS "itt lib is in ${ITT_LIBRARY_DIRS}" )
-    message( STATUS "itt lib name is ${ITT_LIBRARIES}" )
-
-    add_library(itt STATIC IMPORTED)
-
-    set_target_properties(itt PROPERTIES IMPORTED_LOCATION "${ITT_LIBRARY_DIRS}/${ITT_LIBRARIES}")
-    target_include_directories(itt INTERFACE ${ITT_INCLUDE_DIRS})
-    target_link_libraries(itt INTERFACE ${ITT_LIBRARY_DIRS}/${ITT_LIBRARIES})
-    target_compile_definitions(itt INTERFACE MFX_TRACE_ENABLE_ITT)
-  else()
-    message( FATAL_ERROR "Failed to find ITT library" )
-  endif()
-endif()
diff --git a/builder/FindTrace.cmake b/builder/FindTrace.cmake
index 3d0f072d..5c8bbc48 100644
--- a/builder/FindTrace.cmake
+++ b/builder/FindTrace.cmake
@@ -22,10 +22,6 @@ if(__TRACE)
   message( STATUS "Enabled tracing: ${__TRACE}" )
 endif()
 
-# ITT instrumentation is enabled by default to make VTune working out of the box
-set(__ITT TRUE)
-include (${BUILDER_ROOT}/FindVTune.cmake)
-
 if(__TRACE MATCHES all)
   set(ENABLE_TEXTLOG ON)
   set(ENABLE_STAT ON)
diff --git a/builder/FindVTune.cmake b/builder/FindVTune.cmake
deleted file mode 100644
index 4a9418be..00000000
--- a/builder/FindVTune.cmake
+++ /dev/null
@@ -1,63 +0,0 @@
-# Copyright (c) 2015-2021 Intel Corporation
-#
-# Permission is hereby granted, free of charge, to any person obtaining a copy
-# of this software and associated documentation files (the "Software"), to deal
-# in the Software without restriction, including without limitation the rights
-# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-# copies of the Software, and to permit persons to whom the Software is
-# furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included in all
-# copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-# SOFTWARE.
-
-if(__ITT OR ENABLE_ITT)
-  if( Linux )
-    if( CMAKE_VTUNE_HOME )
-      set( VTUNE_HOME ${CMAKE_VTUNE_HOME} )
-    elseif( DEFINED ENV{CMAKE_VTUNE_HOME} )
-      set( VTUNE_HOME $ENV{CMAKE_VTUNE_HOME} )
-    else()
-      set( VTUNE_HOME /opt/intel/vtune_amplifier_xe )
-    endif()
-
-    if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
-      set( arch "64" )
-    elseif()
-      set( arch "32" )
-    endif()
-
-    find_path( VTUNE_INCLUDE ittnotify.h PATHS ${VTUNE_HOME}/include )
-    find_library( VTUNE_LIBRARY libittnotify.a PATHS ${VTUNE_HOME}/lib${arch}/ )
-
-    if( NOT VTUNE_INCLUDE MATCHES NOTFOUND )
-      if( NOT VTUNE_LIBRARY MATCHES NOTFOUND )
-        set( VTUNE_FOUND TRUE )
-        message( STATUS "ITT was found here ${VTUNE_HOME}" )
-
-        get_filename_component( VTUNE_LIBRARY_PATH ${VTUNE_LIBRARY} PATH )
-
-        include_directories( ${VTUNE_INCLUDE} )
-        link_directories( ${VTUNE_LIBRARY_PATH} )
-
-        append( "-DMFX_TRACE_ENABLE_ITT" CMAKE_C_FLAGS )
-        append( "-DMFX_TRACE_ENABLE_ITT" CMAKE_CXX_FLAGS )
-
-        set( ITT_CFLAGS "-I${VTUNE_INCLUDE} -DITT_SUPPORT" )
-        set( ITT_LIBRARY_DIRS "${VTUNE_LIBRARY_PATH}" )
-
-        set( ITT_LIBRARIES "ittnotify" )
-      endif()
-    endif()
-  else()
-    message( STATUS "MFX tracing is supported only for linux!" )
-  endif()
-
-endif()
-- 
2.17.1

