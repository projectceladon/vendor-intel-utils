From 6b7a9354c7bd4c622d1b8a43b13fb34f37615039 Mon Sep 17 00:00:00 2001
From: yerriswamy <yerriswamy.kt@intel.com>
Date: Fri, 3 Feb 2023 11:50:32 +0530
Subject: [PATCH] Resolved runtime error for onevpl

This patch adds Android.mk for mfx_logging and enable
ITT Trace by default

Change-Id: I12eaa3dbbb9e74a8b8997b0c0ac1937b3463c215
Tracked-On: OAM-105683
Signed-off-by: Ratnesh Kumar Rai <ratnesh.kumar.rai@intel.com>
Signed-off-by: yerriswamy <yerriswamy.kt@intel.com>
---
 _studio/mfx_lib/Android.mk                 | 11 +++--
 _studio/mfx_lib/vpp/src/mfx_vpp_hw.cpp     |  6 ++-
 _studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp  |  4 ++
 _studio/shared/include/mfx_vpp_interface.h | 54 ++++++++++++----------
 _studio/shared/mfx_logging/Android.mk      | 26 +++++++++++
 _studio/shared/umc/core/Android.mk         |  3 +-
 android/mfx_defs_internal.mk               | 10 +++-
 7 files changed, 81 insertions(+), 33 deletions(-)
 create mode 100644 _studio/shared/mfx_logging/Android.mk

diff --git a/_studio/mfx_lib/Android.mk b/_studio/mfx_lib/Android.mk
index 34d7652a..8592de3b 100644
--- a/_studio/mfx_lib/Android.mk
+++ b/_studio/mfx_lib/Android.mk
@@ -78,6 +78,7 @@ MFX_LOCAL_SRC_FILES_HW += \
     mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_weighted_prediction_lin.cpp \
     mfx_lib/encode_hw/hevc/linux/g12/hevcehw_g12_lin.cpp \
     mfx_lib/encode_hw/hevc/linux/xe_hpm/hevcehw_xe_hpm_lin.cpp \
+    mfx_lib/encode_hw/hevc/linux/xe_lpm_plus/hevcehw_xe_lpm_plus_lin.cpp \
     mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_extddi.cpp \
     mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_caps.cpp \
     mfx_lib/encode_hw/shared/ehw_resources_pool.cpp \
@@ -87,7 +88,6 @@ MFX_LOCAL_SRC_FILES_HW += \
     mfx_lib/ext/cmrt_cross_platform/src/cm_mem_copy.cpp \
     mfx_lib/ext/cmrt_cross_platform/src/cmrt_cross_platform.cpp \
     mfx_lib/ext/cmrt_cross_platform/src/cmrt_utility.cpp \
-    shared/mfx_logging/src/mfx_utils_logging.cpp \
     mfx_lib/ext/asc/src/asc_cm.cpp
 
 #scheduler/linux/include
@@ -126,10 +126,10 @@ MFX_LOCAL_INCLUDES_HW := \
     $(MFX_HOME)/_studio/mfx_lib/encode_hw/hevc/linux/base \
     $(MFX_HOME)/_studio/mfx_lib/encode_hw/hevc/linux/g12 \
     $(MFX_HOME)/_studio/mfx_lib/encode_hw/hevc/linux/xe_hpm \
+    $(MFX_HOME)/_studio/mfx_lib/encode_hw/hevc/linux/xe_lpm_plus \
     $(MFX_HOME)/_studio/mfx_lib/encode_hw/shared \
     $(MFX_HOME)/_studio/mfx_lib/scheduler/linux/include \
-    $(MFX_HOME)/_studio/shared/asc/include \
-    $(MFX_HOME)/_studio/shared/mfx_logging/include
+    $(MFX_HOME)/_studio/shared/asc/include
 
 MFX_LOCAL_STATIC_LIBRARIES_HW := \
     libmfx_core_hw \
@@ -138,7 +138,8 @@ MFX_LOCAL_STATIC_LIBRARIES_HW := \
     libumc_va \
     libumc_core_hw \
     libmfx_gen_trace \
-    libmfx_asc
+    libmfx_asc \
+    libmfx_logging
 
 MFX_LOCAL_LDFLAGS_HW := \
     $(MFX_LDFLAGS) \
@@ -172,6 +173,8 @@ MFX_SHARED_FILES_IMPL := $(addprefix mfx_lib/shared/src/, \
     mfx_enc_common.cpp \
     mfx_vc1_dec_common.cpp \
     mfx_vpx_dec_common.cpp \
+    mfx_mpeg2_dec_common.cpp \
+    mfx_log.cpp \ 
     mfx_common_decode_int.cpp)
 
 MFX_SHARED_FILES_HW := \
diff --git a/_studio/mfx_lib/vpp/src/mfx_vpp_hw.cpp b/_studio/mfx_lib/vpp/src/mfx_vpp_hw.cpp
index a31dec10..4e4c354f 100644
--- a/_studio/mfx_lib/vpp/src/mfx_vpp_hw.cpp
+++ b/_studio/mfx_lib/vpp/src/mfx_vpp_hw.cpp
@@ -2328,6 +2328,7 @@ mfxStatus VideoVPPHW::CheckFormatLimitation(mfxU32 filter, mfxU32 format, mfxU32
                 formatSupport = MFX_FORMAT_SUPPORT_INPUT | MFX_FORMAT_SUPPORT_OUTPUT;
             }
             break;
+#ifdef ONEVPL_EXPERIMENTAL
         case MFX_EXTBUF_CAM_3DLUT:
             if (format == MFX_FOURCC_R16_BGGR ||
                 format == MFX_FOURCC_R16_RGGB ||
@@ -2375,7 +2376,6 @@ mfxStatus VideoVPPHW::CheckFormatLimitation(mfxU32 filter, mfxU32 format, mfxU32
                 formatSupport = MFX_FORMAT_SUPPORT_OUTPUT;
             }
             break;
-#if defined (ONEVPL_EXPERIMENTAL)
         case MFX_EXTBUFF_VPP_PERC_ENC_PREFILTER:
             if (format == MFX_FOURCC_NV12)
             {
@@ -2479,6 +2479,7 @@ mfxStatus  VideoVPPHW::Init(
     }
     MFX_CHECK_STS(sts);
 
+#ifdef ONEVPL_EXPERIMENTAL
     for (mfxU32 i = 0; i < m_params.NumExtParam; i++)
     {
         if (m_params.ExtParam[i]->BufferId == MFX_EXTBUF_CAM_3DLUT)
@@ -2670,6 +2671,7 @@ mfxStatus  VideoVPPHW::Init(
             }
         }
     }
+#endif
 
     m_config.m_IOPattern = 0;
     sts = ConfigureExecuteParams(
@@ -5803,6 +5805,7 @@ mfxStatus ConfigureExecuteParams(
 
     executeParams.iBackgroundColor = get_background_color(videoParam);
 
+#ifdef ONEVPL_EXPERIMENTAL
     for (mfxU32 i = 0; i < videoParam.NumExtParam; i++)
     {
         if (videoParam.ExtParam[i]->BufferId == MFX_EXTBUF_CAM_PIPECONTROL)
@@ -5810,6 +5813,7 @@ mfxStatus ConfigureExecuteParams(
             bitmodeflag = TRUE;
         }
     }
+#endif
 
     if (!bitmodeflag)
     {
diff --git a/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp b/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp
index 5ea9c994..d6b520bb 100644
--- a/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp
+++ b/_studio/mfx_lib/vpp/src/mfx_vpp_utils.cpp
@@ -163,9 +163,11 @@ const mfxU32 g_TABLE_EXT_PARAM [] =
     MFX_EXTBUFF_CONTENT_LIGHT_LEVEL_INFO,
     MFX_EXTBUFF_MASTERING_DISPLAY_COLOUR_VOLUME_IN,
     MFX_EXTBUFF_MASTERING_DISPLAY_COLOUR_VOLUME_OUT,
+#ifdef ONEVPL_EXPERIMENTAL
     MFX_EXTBUF_CAM_PIPECONTROL,
     MFX_EXTBUF_CAM_3DLUT,
     MFX_EXTBUF_CAM_FORWARD_GAMMA_CORRECTION,
+#endif
     MFX_EXTBUF_CAM_WHITE_BALANCE,
     MFX_EXTBUF_CAM_BLACK_LEVEL_CORRECTION,
     MFX_EXTBUF_CAM_BAYER_DENOISE,
@@ -2370,6 +2372,7 @@ void ConvertCaps2ListDoUse(MfxHwVideoProcessing::mfxVppCaps& caps, std::vector<m
         list.push_back(MFX_EXTBUFF_VPP_FIELD_PROCESSING);
     }
 
+#ifdef ONEVPL_EXPERIMENTAL
     if (caps.cameraCaps.uGammaCorrection)
     {
         list.push_back(MFX_EXTBUF_CAM_FORWARD_GAMMA_CORRECTION);
@@ -2379,6 +2382,7 @@ void ConvertCaps2ListDoUse(MfxHwVideoProcessing::mfxVppCaps& caps, std::vector<m
     {
         list.push_back(MFX_EXTBUF_CAM_3DLUT);
     }
+#endif
 
     if (caps.cameraCaps.uWhiteBalance)
     {
diff --git a/_studio/shared/include/mfx_vpp_interface.h b/_studio/shared/include/mfx_vpp_interface.h
index f7445054..58a36ac2 100644
--- a/_studio/shared/include/mfx_vpp_interface.h
+++ b/_studio/shared/include/mfx_vpp_interface.h
@@ -367,31 +367,33 @@ namespace MfxHwVideoProcessing
                ,iFieldProcessingMode(0)
                ,bCameraPipeEnabled(false)
                ,bCameraPipeControl(0)
+#ifdef ONEVPL_EXPERIMENTAL
                ,CameraPipeControl()
-               ,bCameraBlackLevelCorrection(false)
                ,CameraBlackLevel()
-               ,bCameraWhiteBalaceCorrection(false)
                ,CameraWhiteBalance()
-               ,bCameraHotPixelRemoval(false)
                ,CameraHotPixel()
-               ,bCCM(false)
                ,CCMParams()
-               ,bCameraTCC(false)
                ,CameraTCC()
-               ,bCameraRGBtoYUV(false)
                ,CameraRGBToYUV()               
-               ,bCameraGammaCorrection(false)
                ,CameraForwardGammaCorrection()
-               ,bCameraVignetteCorrection(false)
                ,CameraVignetteCorrection()
-               ,bCameraLensCorrection(false)
                ,CameraLensCorrection()
-               ,bCamera3DLUT(false)
                ,Camera3DLUT()
-               ,bCameraPadding(false)
                ,CameraPadding()
-               ,bCameraBayerDenoise(false)
                ,CameraBayerDenoise()
+#endif
+               ,bCameraBlackLevelCorrection(false)
+               ,bCameraWhiteBalaceCorrection(false)
+               ,bCameraHotPixelRemoval(false)
+               ,bCCM(false)
+               ,bCameraTCC(false)
+               ,bCameraRGBtoYUV(false)
+               ,bCameraGammaCorrection(false)
+               ,bCameraVignetteCorrection(false)
+               ,bCameraLensCorrection(false)
+               ,bCamera3DLUT(false)
+               ,bCameraPadding(false)
+               ,bCameraBayerDenoise(false)
                ,rotation(0)
                ,scalingMode(MFX_SCALING_MODE_DEFAULT)
                ,interpolationMethod(MFX_INTERPOLATION_DEFAULT)
@@ -546,33 +548,35 @@ namespace MfxHwVideoProcessing
         //  Camera Pipe specific params
         bool                            bCameraPipeEnabled;
         bool                            bCameraPipeControl;
+#ifdef ONEVPL_EXPERIMENTAL
         mfxExtCamPipeControl            CameraPipeControl;
-        bool                            bCameraBlackLevelCorrection;
         mfxExtCamBlackLevelCorrection   CameraBlackLevel;
-        bool                            bCameraWhiteBalaceCorrection;
         mfxExtCamWhiteBalance           CameraWhiteBalance;
-        bool                            bCameraHotPixelRemoval;
         mfxExtCamHotPixelRemoval        CameraHotPixel;
-        bool                            bCCM;
         mfxExtCamColorCorrection3x3     CCMParams;
-        bool                            bCameraTCC;
         mfxExtCamTotalColorControl      CameraTCC;
-        bool                            bCameraRGBtoYUV;
         mfxExtCamCscYuvRgb              CameraRGBToYUV;
-        bool                            bCameraGammaCorrection;
         mfxExtCamFwdGamma               CameraForwardGammaCorrection;
-        bool                            bCameraVignetteCorrection;
         mfxExtCamVignetteCorrection     CameraVignetteCorrection;
-        bool                            bCameraLensCorrection;
         mfxExtCamLensGeomDistCorrection CameraLensCorrection;
-        bool                            bCamera3DLUT;
         mfxExtCam3DLut                  Camera3DLUT;
-        bool                            bCameraPadding;
         mfxExtCamPadding                CameraPadding;
-        bool                            bCameraBayerDenoise;
         mfxExtCamBayerDenoise           CameraBayerDenoise;
+#endif
+        bool                            bCameraBlackLevelCorrection;
+        bool                            bCameraWhiteBalaceCorrection;
+        bool                            bCameraHotPixelRemoval;
+        bool                            bCCM;
+        bool                            bCameraTCC;
+        bool                            bCameraRGBtoYUV;
+        bool                            bCameraGammaCorrection;
+        bool                            bCameraVignetteCorrection;
+        bool                            bCameraLensCorrection;
+        bool                            bCamera3DLUT;
+        bool                            bCameraPadding;
+        bool                            bCameraBayerDenoise;
 
-        int         rotation;
+	int         rotation;
 
         mfxU16      scalingMode;
 
diff --git a/_studio/shared/mfx_logging/Android.mk b/_studio/shared/mfx_logging/Android.mk
new file mode 100644
index 00000000..4951c49c
--- /dev/null
+++ b/_studio/shared/mfx_logging/Android.mk
@@ -0,0 +1,26 @@
+LOCAL_PATH:= $(call my-dir)
+
+include $(CLEAR_VARS)
+include $(MFX_HOME)/android/mfx_defs.mk
+
+LOCAL_SRC_FILES := $(addprefix src/, $(notdir $(wildcard $(LOCAL_PATH)/src/*.cpp)))
+
+LOCAL_C_INCLUDES := \
+    $(MFX_INCLUDES_INTERNAL_HW) \
+    $(MFX_HOME)/api/mediasdk_structures
+
+LOCAL_CFLAGS := \
+    $(MFX_CFLAGS_INTERNAL_HW) \
+    -Wno-error \
+    -Wno-unused-parameter
+
+LOCAL_CFLAGS_32 := $(MFX_CFLAGS_INTERNAL_32)
+LOCAL_CFLAGS_64 := $(MFX_CFLAGS_INTERNAL_64)
+
+LOCAL_HEADER_LIBRARIES := libmfx_gen_headers
+
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE := libmfx_logging
+
+include $(BUILD_STATIC_LIBRARY)
+
diff --git a/_studio/shared/umc/core/Android.mk b/_studio/shared/umc/core/Android.mk
index edb036e5..75d1ce3f 100644
--- a/_studio/shared/umc/core/Android.mk
+++ b/_studio/shared/umc/core/Android.mk
@@ -33,8 +33,9 @@ LOCAL_CFLAGS_32 := $(MFX_CFLAGS_INTERNAL_32)
 LOCAL_CFLAGS_64 := $(MFX_CFLAGS_INTERNAL_64)
 
 LOCAL_HEADER_LIBRARIES := libmfx_gen_headers
+LOCAL_STATIC_LIBRARIES += libmfx_logging
 
 LOCAL_MODULE_TAGS := optional
 LOCAL_MODULE := libumc_core_hw
 
-include $(BUILD_STATIC_LIBRARY)
\ No newline at end of file
+include $(BUILD_STATIC_LIBRARY)
diff --git a/android/mfx_defs_internal.mk b/android/mfx_defs_internal.mk
index 573a2e74..f63a9fb6 100644
--- a/android/mfx_defs_internal.mk
+++ b/android/mfx_defs_internal.mk
@@ -16,11 +16,17 @@ MFX_CFLAGS_INTERNAL_64 := -DLINUX32 -DLINUX64
 MFX_INCLUDES_INTERNAL :=  \
     $(MFX_INCLUDES) \
     $(MFX_HOME)/_studio/shared/include \
-    $(MFX_HOME)/_studio/shared/mfx_logging/include \
+    $(MFX_HOME)/_studio/shared/umc/codec/av1_dec/include \
+    $(MFX_HOME)/_studio/shared/umc/codec/h265_dec/include \
+    $(MFX_HOME)/_studio/shared/umc/codec/h264_dec/include \
+    $(MFX_HOME)/_studio/shared/umc/codec/vp9_dec/include \
     $(MFX_HOME)/_studio/shared/umc/core/umc/include \
     $(MFX_HOME)/_studio/shared/umc/core/vm/include \
     $(MFX_HOME)/_studio/shared/umc/core/vm_plus/include \
     $(MFX_HOME)/_studio/shared/umc/io/umc_va/include \
+    $(MFX_HOME)/_studio/shared/mfx_logging/include \
+    $(MFX_HOME)/_studio/shared/mfx_trace/include \
+    $(MFX_HOME)/_studio/shared/mfx_trace/include/sys \
     $(MFX_HOME)/_studio/mfx_lib/shared/include \
     $(MFX_HOME)/_studio/shared/include \
     $(MFX_HOME)/_studio/enctools/aenc/include \
@@ -29,4 +35,4 @@ MFX_INCLUDES_INTERNAL :=  \
 
 MFX_INCLUDES_INTERNAL_HW := \
     $(MFX_INCLUDES_INTERNAL) \
-    $(MFX_INCLUDES_LIBVA)
\ No newline at end of file
+    $(MFX_INCLUDES_LIBVA)
-- 
2.17.1

