From 9f67deccd93c2f31cdc04e6aba99fc0bb9e6e841 Mon Sep 17 00:00:00 2001
From: yerriswamy <yerriswamy.kt@intel.com>
Date: Fri, 3 Feb 2023 10:42:18 +0530
Subject: [PATCH] Changes for OneVPL integration

- Added base Android.mk files
- Updated search path for core vpl
- Added dGPU device ids

Change-Id: I65ae4907bfa5658230ebb42846dc0651fba31aa4
Tracked-On: OAM-105683
Signed-off-by: neeraj solanki <neeraj.solanki@intel.com>
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Signed-off-by: yerriswamy <yerriswamy.kt@intel.com>
---
 Android.mk                                   |  3 +
 api/Android.bp                               | 11 +++
 dispatcher/Android.mk                        | 77 ++++++++++++++++
 dispatcher/linux/device_ids.h                | 48 +++++++++-
 dispatcher/linux/mfxloader.cpp               | 16 ++++
 dispatcher/vpl/mfx_dispatcher_vpl.h          |  9 ++
 dispatcher/vpl/mfx_dispatcher_vpl_loader.cpp |  8 +-
 examples/Android.mk                          | 96 ++++++++++++++++++++
 8 files changed, 265 insertions(+), 3 deletions(-)
 create mode 100644 Android.mk
 create mode 100644 api/Android.bp
 create mode 100644 dispatcher/Android.mk
 create mode 100644 examples/Android.mk

diff --git a/Android.mk b/Android.mk
new file mode 100644
index 0000000..467a296
--- /dev/null
+++ b/Android.mk
@@ -0,0 +1,3 @@
+# Recursively call sub-folder Android.mk
+
+include $(call all-subdir-makefiles)
diff --git a/api/Android.bp b/api/Android.bp
new file mode 100644
index 0000000..82aa3b1
--- /dev/null
+++ b/api/Android.bp
@@ -0,0 +1,11 @@
+
+cc_library_headers {
+
+    name: "libvpl_headers",
+    export_include_dirs: [
+        "vpl",
+    ],
+
+    vendor: true,
+}
+
diff --git a/dispatcher/Android.mk b/dispatcher/Android.mk
new file mode 100644
index 0000000..526d839
--- /dev/null
+++ b/dispatcher/Android.mk
@@ -0,0 +1,77 @@
+# Copyright(c) 2021 Intel Corporation
+
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and associated documentation files(the "Software"),
+# to deal in the Software without restriction, including without limitation
+# the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# and / or sell copies of the Software, and to permit persons to whom the
+# Software is furnished to do so, subject to the following conditions:
+
+# The above copyright notice and this permission notice shall be included
+# in all copies or substantial portions of the Software.
+
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+# OTHER DEALINGS IN THE SOFTWARE.
+
+LOCAL_PATH:= $(call my-dir)
+
+include $(CLEAR_VARS)
+
+ONEVPL_SEARCH_PATH_32 := /vendor/lib
+ONEVPL_SEARCH_PATH_64 := /vendor/lib64
+
+MFX_MODULES_DIR_32 := /vendor/lib
+MFX_MODULES_DIR_64 := /vendor/lib64
+
+LOCAL_SRC_FILES := \
+    linux/mfxloader.cpp \
+    vpl/mfx_dispatcher_vpl.cpp \
+    vpl/mfx_dispatcher_vpl_config.cpp \
+    vpl/mfx_dispatcher_vpl_loader.cpp \
+    vpl/mfx_dispatcher_vpl_lowlatency.cpp \
+    vpl/mfx_dispatcher_vpl_log.cpp \
+    vpl/mfx_dispatcher_vpl_msdk.cpp \
+
+LOCAL_SHARED_LIBRARIES := \
+    libcutils \
+    libutils \
+    liblog
+
+LOCAL_CPPFLAGS := \
+    -std=c++14 \
+    -fexceptions \
+    -DANDROID \
+    -DMFX_DEPRECATED_OFF \
+    -DVPL_EXPORTS \
+    -D_FORTIFY_SOURCE=2
+
+LOCAL_CPPFLAGS += \
+    -Wno-error \
+    -Wno-missing-braces \
+    -Wno-unused-parameter \
+    -Wno-missing-field-initializers
+
+LOCAL_CPPFLAGS += -Wl,--version-script=$(LOCAL_PATH)/linux/libvpl.map
+
+LOCAL_CFLAGS := $(LOCAL_CPPFLAGS)
+
+LOCAL_CFLAGS_32 += \
+      -DONEVPL_SEARCH_PATH="\"$(ONEVPL_SEARCH_PATH_32)\"" \
+      -DMFX_MODULES_DIR="\"$(MFX_MODULES_DIR_32)\""
+
+LOCAL_CFLAGS_64 += \
+      -DONEVPL_SEARCH_PATH="\"$(ONEVPL_SEARCH_PATH_64)\"" \
+      -DMFX_MODULES_DIR="\"$(MFX_MODULES_DIR_64)\""
+
+LOCAL_C_INCLUDES  := \
+    $(LOCAL_PATH)/../api
+
+LOCAL_MODULE := libvpl
+LOCAL_PROPRIETARY_MODULE := true
+
+include $(BUILD_SHARED_LIBRARY)
diff --git a/dispatcher/linux/device_ids.h b/dispatcher/linux/device_ids.h
index 00b81ef..aa31d3e 100644
--- a/dispatcher/linux/device_ids.h
+++ b/dispatcher/linux/device_ids.h
@@ -44,6 +44,12 @@ enum eMFXHWType {
 
     MFX_HW_JSL = 0x1500001,
     MFX_HW_EHL = 0x1500002,
+
+    MFX_HW_TGL_LP = 0x1600000,
+    MFX_HW_RKL    = MFX_HW_TGL_LP + 2,
+    MFX_HW_DG1    = MFX_HW_TGL_LP + 3,
+    MFX_HW_ADL_S  = MFX_HW_TGL_LP + 4,
+    MFX_HW_DG2    = MFX_HW_TGL_LP + 8,
 };
 
 enum eMFXGTConfig { MFX_GT_UNKNOWN = 0, MFX_GT1 = 1, MFX_GT2 = 2, MFX_GT3 = 3, MFX_GT4 = 4 };
@@ -360,6 +366,46 @@ static const mfx_device_item listLegalDevIDs[] = {
     { 0x4555, MFX_HW_EHL, MFX_GT2 },
     { 0x4569, MFX_HW_EHL, MFX_GT2 },
     { 0x4571, MFX_HW_EHL, MFX_GT2 },
+
+    /* DG1/SG1 */
+    { 0x4905, MFX_HW_DG1, MFX_GT2 },
+    { 0x4906, MFX_HW_DG1, MFX_GT2 },
+    { 0x4907, MFX_HW_DG1, MFX_GT2 }, // SG1
+    { 0x4908, MFX_HW_DG1, MFX_GT2 },
+
+    /* DG2 */
+    { 0x4F80, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F81, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F82, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F83, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F84, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F85, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F86, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F87, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x4F88, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5690, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5691, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5692, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5693, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5694, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5695, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5696, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5697, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x5698, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A0, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A1, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A2, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A3, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A4, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A5, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A6, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A7, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A8, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56A9, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56B0, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56B1, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56C0, MFX_HW_DG2, MFX_GT4 }, // DG2
+    { 0x56C1, MFX_HW_DG2, MFX_GT4 }, // DG2
 };
 
 typedef struct {
@@ -425,4 +471,4 @@ static mfxStatus get_devices(std::vector<Device> &allDevices) {
     return MFX_ERR_NONE;
 }
 
-#endif // DISPATCHER_LINUX_DEVICE_IDS_H_
\ No newline at end of file
+#endif // DISPATCHER_LINUX_DEVICE_IDS_H_
diff --git a/dispatcher/linux/mfxloader.cpp b/dispatcher/linux/mfxloader.cpp
index adeca49..59ec3cf 100644
--- a/dispatcher/linux/mfxloader.cpp
+++ b/dispatcher/linux/mfxloader.cpp
@@ -24,17 +24,33 @@
 namespace MFX {
 
 #if defined(__x86_64__) || (INTPTR_MAX == INT64_MAX)
+#ifdef ANDROID
+    #define LIBMFXSW "libmfxsw64.so"
+    #define LIBMFXHW "libmfxhw64.so"
+
+    #define ONEVPLSW "libvplswref64.so"
+    #define ONEVPLHW "libmfx-gen.so"
+#else
     #define LIBMFXSW "libmfxsw64.so.1"
     #define LIBMFXHW "libmfxhw64.so.1"
 
     #define ONEVPLSW "libvplswref64.so.1"
     #define ONEVPLHW "libmfx-gen.so.1.2"
+#endif
 #elif defined(__i386__) || (INTPTR_MAX == INT32_MAX)
+#ifdef ANDROID
+    #define LIBMFXSW "libmfxsw32.so"
+    #define LIBMFXHW "libmfxhw32.so"
+
+    #define ONEVPLSW "libvplswref32.so"
+    #define ONEVPLHW "libmfx-gen.so"
+#else
     #define LIBMFXSW "libmfxsw32.so.1"
     #define LIBMFXHW "libmfxhw32.so.1"
 
     #define ONEVPLSW "libvplswref32.so.1"
     #define ONEVPLHW "libmfx-gen.so.1.2"
+#endif
 #else
     #error Unsupported architecture
 #endif
diff --git a/dispatcher/vpl/mfx_dispatcher_vpl.h b/dispatcher/vpl/mfx_dispatcher_vpl.h
index 519afb9..5822d72 100644
--- a/dispatcher/vpl/mfx_dispatcher_vpl.h
+++ b/dispatcher/vpl/mfx_dispatcher_vpl.h
@@ -15,11 +15,20 @@
 #include <string>
 #include <vector>
 
+#if defined(ANDROID)
+#include <android/log.h>
+#endif
+
 #include "vpl/mfxdispatcher.h"
 #include "vpl/mfxvideo.h"
 
 #include "./mfx_dispatcher_vpl_log.h"
 
+#if defined(ANDROID)
+#define MFX_VPL_LOG_TAG "omx_vpl"
+#define MFX_VPL_LOG_LEVEL ANDROID_LOG_INFO
+#endif
+
 #if defined(_WIN32) || defined(_WIN64)
     #include <windows.h>
 
diff --git a/dispatcher/vpl/mfx_dispatcher_vpl_loader.cpp b/dispatcher/vpl/mfx_dispatcher_vpl_loader.cpp
index c9aff94..c73f9d4 100644
--- a/dispatcher/vpl/mfx_dispatcher_vpl_loader.cpp
+++ b/dispatcher/vpl/mfx_dispatcher_vpl_loader.cpp
@@ -242,8 +242,8 @@ mfxStatus LoaderCtxVPL::SearchDirForLibs(STRING_TYPE searchDir,
             if (strstr(currFile->d_name, ".so")) {
                 // library names must begin with "libvpl*" or "libmfx*"
                 if ((strstr(currFile->d_name, "libvpl") != currFile->d_name) &&
-                    (strcmp(currFile->d_name, "libmfx-gen.so.1.2") != 0) &&
-                    (strcmp(currFile->d_name, "libmfxhw64.so.1") != 0))
+                    (strcmp(currFile->d_name, "libmfx-gen.so") != 0) &&
+                    (strcmp(currFile->d_name, "libmfxhw64.so") != 0))
                     continue;
 
                 // special case: do not include dispatcher itself (libmfx.so*, libvpl.so*) or tracer library
@@ -565,6 +565,10 @@ mfxStatus LoaderCtxVPL::BuildListOfCandidateLibs() {
     // fourth priority: ONEVPL_SEARCH_PATH environment variable
     searchDirList.clear();
     ParseEnvSearchPaths("ONEVPL_SEARCH_PATH", searchDirList);
+#if defined(ANDROID)
+    searchDirList.push_back("/vendor/lib");
+    searchDirList.push_back("/vendor/lib64");
+#endif // ANDROID
     it = searchDirList.begin();
     while (it != searchDirList.end()) {
         STRING_TYPE nextDir = (*it);
diff --git a/examples/Android.mk b/examples/Android.mk
new file mode 100644
index 0000000..db9f289
--- /dev/null
+++ b/examples/Android.mk
@@ -0,0 +1,96 @@
+LOCAL_PATH:= $(call my-dir)
+
+##################################################################
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := \
+    coreAPI/legacy-decode/src/legacy-decode.cpp
+
+LOCAL_CPPFLAGS := \
+    -std=c++11 \
+    -DLIBVA_SUPPORT \
+    -D_FORTIFY_SOURCE=2
+
+LOCAL_CPPFLAGS += \
+    -Wno-error \
+    -Wno-missing-braces \
+    -Wno-missing-field-initializers
+
+LOCAL_C_INCLUDES := \
+    coreAPI/legacy-decode/src \
+    $(LOCAL_PATH)/../api \
+    $(TARGET_OUT_HEADERS)/libva
+
+LOCAL_MODULE := legacy-decode
+
+LOCAL_SHARED_LIBRARIES := \
+    libvpl \
+    liblog \
+    libva
+
+LOCAL_PROPRIETARY_MODULE := true
+
+include $(BUILD_EXECUTABLE)
+##################################################################
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := \
+    coreAPI/legacy-encode/src/legacy-encode.cpp
+
+LOCAL_CPPFLAGS := \
+    -std=c++11 \
+    -DLIBVA_SUPPORT \
+    -D_FORTIFY_SOURCE=2
+
+LOCAL_CPPFLAGS += \
+    -Wno-error \
+    -Wno-missing-braces \
+    -Wno-missing-field-initializers
+
+LOCAL_C_INCLUDES := \
+    coreAPI/legacy-encode/src \
+    $(LOCAL_PATH)/../api \
+    $(TARGET_OUT_HEADERS)/libva
+
+LOCAL_MODULE := legacy-encode
+
+LOCAL_SHARED_LIBRARIES := \
+    libvpl \
+    liblog \
+    libva
+
+LOCAL_PROPRIETARY_MODULE := true
+
+include $(BUILD_EXECUTABLE)
+##################################################################
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := \
+    coreAPI/legacy-vpp/src/legacy-vpp.cpp
+
+LOCAL_CPPFLAGS := \
+    -std=c++11 \
+    -DLIBVA_SUPPORT \
+    -D_FORTIFY_SOURCE=2
+
+LOCAL_CPPFLAGS += \
+    -Wno-error \
+    -Wno-missing-braces \
+    -Wno-missing-field-initializers
+
+LOCAL_C_INCLUDES := \
+    coreAPI/legacy-vpp/src \
+    $(LOCAL_PATH)/../api \
+    $(TARGET_OUT_HEADERS)/libva
+
+LOCAL_MODULE := legacy-vpp
+
+LOCAL_SHARED_LIBRARIES := \
+    libvpl \
+    liblog \
+    libva
+
+LOCAL_PROPRIETARY_MODULE := true
+
+include $(BUILD_EXECUTABLE)
+##################################################################
-- 
2.17.1

