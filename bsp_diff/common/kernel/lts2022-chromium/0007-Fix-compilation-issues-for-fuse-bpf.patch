From 893e587b0fa4d3c823ed5d03457f0aab2f12a698 Mon Sep 17 00:00:00 2001
From: sgnanase <sundar.gnanasekaran@intel.com>
Date: Thu, 4 Apr 2024 14:07:27 +0530
Subject: [PATCH] Fix compilation issues for fuse bpf

Pull back missing code from android

Tracked-On:
Signed-off-by: sgnanase <sundar.gnanasekaran@intel.com>
---
 fs/fuse/fuse_i.h | 38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/fs/fuse/fuse_i.h b/fs/fuse/fuse_i.h
index eaa2136e8aa4..1ed18f795246 100644
--- a/fs/fuse/fuse_i.h
+++ b/fs/fuse/fuse_i.h
@@ -69,6 +69,44 @@ struct fuse_forget_link {
 	struct fuse_forget_link *next;
 };
 
+/** FUSE specific dentry data */
+#if BITS_PER_LONG < 64 || defined(CONFIG_FUSE_BPF)
+struct fuse_dentry {
+	union {
+		u64 time;
+		struct rcu_head rcu;
+	};
+
+#ifdef CONFIG_FUSE_BPF
+	struct path backing_path;
+
+	/* bpf program *only* set for negative dentries */
+	struct bpf_prog *bpf;
+#endif
+};
+
+static inline struct fuse_dentry *get_fuse_dentry(const struct dentry *entry)
+{
+	return entry->d_fsdata;
+}
+#endif
+
+#ifdef CONFIG_FUSE_BPF
+static inline void get_fuse_backing_path(const struct dentry *d,
+						struct path *path)
+{
+	struct fuse_dentry *di = get_fuse_dentry(d);
+
+	if (!di) {
+		*path = (struct path) {};
+		return;
+	}
+
+	*path = di->backing_path;
+	path_get(path);
+}
+#endif
+
 /* Submount lookup tracking */
 struct fuse_submount_lookup {
 	/** Refcount */
-- 
2.17.1

