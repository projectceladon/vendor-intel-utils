From 16d71fece50bc64c381095463f1a31415be986cc Mon Sep 17 00:00:00 2001
From: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Date: Thu, 25 Jul 2019 14:30:27 +0530
Subject: [PATCH] usb: dbc : fix for adb root issue

freeing usb request into the callback function.

Change-Id: Ie3a7b93656e133ed900e75519a1d80b5215da5c9
Tracked-On: https://jira.devtools.intel.com/browse/OAM-84628
Signed-off-by: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Signed-off-by: Balaji <m.balaji@intel.com>
---
 drivers/usb/host/xhci-dbgraw.c | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/host/xhci-dbgraw.c b/drivers/usb/host/xhci-dbgraw.c
index f7ca4b0..4d08d80 100644
--- a/drivers/usb/host/xhci-dbgraw.c
+++ b/drivers/usb/host/xhci-dbgraw.c
@@ -36,6 +36,8 @@ struct dbc_dev {
 	bool in_use;
 	char name[16];
 	struct xhci_dbc *dbc;
+	struct dbc_request *read_fail_req;
+	struct dbc_request *write_fail_req;
 	struct miscdevice misc_dev;
 };
 
@@ -69,11 +71,15 @@ static void dbc_complete_in(struct xhci_hcd *xhci,
 {
 	struct xhci_dbc *dbc = (struct xhci_dbc *) xhci->dbc;
 	struct dbc_dev *dev = (struct dbc_dev *) dbc->func_priv;
+	struct dbc_port *port = &dbc->port;
 
 	if (req->status)
 		dev->error = req->status;
 
-	wake_up(&dev->write_wq);
+	if (dev->write_fail_req == req)
+		xhci_dbc_free_req(port->out, req);
+	else
+		wake_up(&dev->write_wq);
 }
 
 static void dbc_complete_out(struct xhci_hcd *xhci,
@@ -81,11 +87,15 @@ static void dbc_complete_out(struct xhci_hcd *xhci,
 {
 	struct xhci_dbc *dbc = (struct xhci_dbc *) xhci->dbc;
 	struct dbc_dev *dev = (struct dbc_dev *) dbc->func_priv;
+	struct dbc_port *port = &dbc->port;
 
 	if (req->status)
 		dev->error = req->status;
 
-	wake_up(&dev->read_wq);
+	if (dev->read_fail_req == req)
+		xhci_dbc_free_req(port->in, req);
+	else
+		wake_up(&dev->read_wq);
 }
 
 static ssize_t dbc_read(struct file *fp, char __user *buf,
@@ -129,7 +139,8 @@ static ssize_t dbc_read(struct file *fp, char __user *buf,
 
 	if (ret < 0) {
 		r = ret;
-		goto request_fail;
+		dev->read_fail_req = req;
+		goto alloc_fail;
 	}
 
 	if (dev->error) {
@@ -198,8 +209,11 @@ static ssize_t dbc_write(struct file *fp, const char __user *buf,
 
 	ret = wait_event_interruptible(dev->write_wq,
 			(req->status != -EINPROGRESS));
-	if (ret < 0)
+	if (ret < 0) {
 		r = ret;
+		dev->write_fail_req = req;
+		goto alloc_fail;
+	}
 
 request_fail:
 	xhci_dbc_free_req(port->out, req);
-- 
1.9.1

