From 20a3f39bd453709361136059f9341e5ff76276db Mon Sep 17 00:00:00 2001
From: Balaji <m.balaji@intel.com>
Date: Fri, 16 Aug 2019 20:20:30 +0530
Subject: [PATCH] drivers: usb: host: Fix for adb dbc offline issue

Adb daemon doesnt know about dbc disconnect and connect.hence offline
issue occurs when replug.Changes made usb dbc layer to send
usb dbc events from kernel to restart adb daemon.

Change-Id: If7ce5c0dc22ec9c624d502f2b0aa81ccf12841a0
Tracked-On: https://jira.devtools.intel.com/browse/OAM-84514
Signed-off-by: Balaji <m.balaji@intel.com>
---

diff --git a/drivers/usb/host/xhci-dbgcap.c b/drivers/usb/host/xhci-dbgcap.c
index 08c31b4..8fad833 100644
--- a/drivers/usb/host/xhci-dbgcap.c
+++ b/drivers/usb/host/xhci-dbgcap.c
@@ -10,6 +10,8 @@
 #include <linux/slab.h>
 #include <linux/nls.h>
 #include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/kdev_t.h>
 
 #include "xhci.h"
 #include "xhci-trace.h"
@@ -653,6 +655,33 @@
 	xhci_dbc_giveback(req, status);
 }
 
+
+static void xhci_dbc_uevent_work(struct work_struct *data)
+{
+	struct xhci_dbc *dbc  = container_of(data, struct xhci_dbc, notify_work);
+        char *disconnected[2] = { "USB_STATE=DISCONNECTED", NULL };
+        char *connected[2]    = { "USB_STATE=DBCCONNECTED", NULL };
+        char *configured[2]   = { "USB_STATE=CONFIGURED", NULL };
+	struct xhci_hcd         *xhci = dbc->xhci;
+	struct device           *dev = xhci_to_hcd(xhci)->self.controller;
+
+	switch (dbc->state) {
+
+	case DS_CONFIGURED:
+		kobject_uevent_env(&dev->kobj,
+                                KOBJ_CHANGE, connected);
+                kobject_uevent_env(&dev->kobj,
+                                KOBJ_CHANGE, configured);
+		break;
+        case DS_ENABLED:
+
+                kobject_uevent_env(&dev->kobj,
+				KOBJ_CHANGE, disconnected);
+		break;
+
+	}
+}
+
 static enum evtreturn xhci_dbc_do_handle_events(struct xhci_dbc *dbc)
 {
 	dma_addr_t		deq;
@@ -683,6 +712,7 @@
 			xhci_info(xhci, "DbC configured\n");
 			portsc = readl(&dbc->regs->portsc);
 			writel(portsc, &dbc->regs->portsc);
+			schedule_work(&dbc->notify_work);
 			return EVT_GSER;
 		}
 
@@ -695,7 +725,7 @@
 			xhci_info(xhci, "DbC cable unplugged\n");
 			dbc->state = DS_ENABLED;
 			xhci_dbc_flush_requests(dbc);
-
+                        schedule_work(&dbc->notify_work);
 			return EVT_DISC;
 		}
 
@@ -870,6 +900,7 @@
 
 	dbc->xhci = xhci;
 	INIT_DELAYED_WORK(&dbc->event_work, xhci_dbc_handle_events);
+	INIT_WORK(&dbc->notify_work, xhci_dbc_uevent_work);
 	spin_lock_init(&dbc->lock);
 
 	return 0;
diff --git a/drivers/usb/host/xhci-dbgcap.h b/drivers/usb/host/xhci-dbgcap.h
index 302e6ca..2c631df 100644
--- a/drivers/usb/host/xhci-dbgcap.h
+++ b/drivers/usb/host/xhci-dbgcap.h
@@ -174,6 +174,7 @@
 	struct dbc_port			port;
 	/* priv pointer for a function */
 	void                            *func_priv;
+        struct work_struct              notify_work;
 };
 
 #define dbc_bulkout_ctx(d)		\
