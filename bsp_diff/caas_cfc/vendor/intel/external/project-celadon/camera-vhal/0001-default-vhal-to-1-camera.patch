From 8ccbbf500a40f220383f5a2b00a0627749510db5 Mon Sep 17 00:00:00 2001
From: gkdeepa <g.k.deepa@intel.com>
Date: Sat, 23 Oct 2021 11:00:30 +0530
Subject: [PATCH] default vhal to 1 camera

Tracked-On:
---
 include/VirtualCameraFactory.h | 1 -
 src/VirtualCameraFactory.cpp   | 6 +++---
 src/VirtualFakeCamera3.cpp     | 6 +++---
 3 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/include/VirtualCameraFactory.h b/include/VirtualCameraFactory.h
index 183ce48..81d26d7 100644
--- a/include/VirtualCameraFactory.h
+++ b/include/VirtualCameraFactory.h
@@ -107,7 +107,6 @@ public:
      * callback.
      */
     void getVendorTagOps(vendor_tag_ops_t *ops);
-
 public:
     /****************************************************************************
      * Camera HAL API callbacks.
diff --git a/src/VirtualCameraFactory.cpp b/src/VirtualCameraFactory.cpp
index 8454fa2..1e30e93 100644
--- a/src/VirtualCameraFactory.cpp
+++ b/src/VirtualCameraFactory.cpp
@@ -206,7 +206,7 @@ int VirtualCameraFactory::cameraDeviceOpen(int cameraId, hw_device_t **device) {
               getVirtualCameraNum());
         return -ENODEV;
     }
-
+    ALOGE("Deepa cameraIdcheck is %d",cameraId); 
     return mVirtualCameras[cameraId]->connectCamera(device);
 }
 
@@ -311,10 +311,10 @@ void VirtualCameraFactory::createFakeCamera(std::shared_ptr<CameraSocketServerTh
         case 3: {
             mVirtualCameras[mVirtualCameraNum] =
 #ifdef ENABLE_FFMPEG
-                new VirtualFakeCamera3(mVirtualCameraNum, backCamera, &HAL_MODULE_INFO_SYM.common,
+                new VirtualFakeCamera3(mVirtualCameraNum, /*backCamera*/false, &HAL_MODULE_INFO_SYM.common,
                                        socket_server, decoder, std::ref(mCameraSessionState));
 #else
-                new VirtualFakeCamera3(mVirtualCameraNum, backCamera, &HAL_MODULE_INFO_SYM.common,
+                new VirtualFakeCamera3(mVirtualCameraNum, /*backCamera*/false, &HAL_MODULE_INFO_SYM.common,
                                        socket_server, std::ref(mCameraSessionState));
 #endif
         } break;
diff --git a/src/VirtualFakeCamera3.cpp b/src/VirtualFakeCamera3.cpp
index 3743cd1..92c0450 100644
--- a/src/VirtualFakeCamera3.cpp
+++ b/src/VirtualFakeCamera3.cpp
@@ -57,7 +57,6 @@ buffer_handle_t bufferHandle;
 buffer_handle_t bufferHandle1;
 buffer_handle_t bufferHandle2;
 buffer_handle_t bufferHandle_3;
-
 namespace android {
 
 using namespace socket;
@@ -122,7 +121,6 @@ VirtualFakeCamera3::VirtualFakeCamera3(int cameraId, bool facingBack, struct hw_
 #endif
     ALOGI("Constructing virtual fake camera 3: ID %d, facing %s", mCameraID,
           facingBack ? "back" : "front");
-
     mControlMode = ANDROID_CONTROL_MODE_AUTO;
     mFacePriority = false;
     mAeMode = ANDROID_CONTROL_AE_MODE_ON;
@@ -1344,8 +1342,10 @@ status_t VirtualFakeCamera3::constructStaticInfo() {
         orientation = 270;
     } else {
         ALOGV("persist.remote.camera.orientation: landscape");
-        orientation = 0;
+        //hardcode the orientation to 270 deg
+        orientation = 270;
     }
+
     ADD_STATIC_ENTRY(ANDROID_SENSOR_ORIENTATION, &orientation, 1);
 
     static const uint8_t timestampSource = ANDROID_SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME;
-- 
2.17.1

