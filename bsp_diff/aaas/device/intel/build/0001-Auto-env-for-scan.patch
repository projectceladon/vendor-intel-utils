From 0b82d083415221ec61ecf3080b5718f270dd3cb7 Mon Sep 17 00:00:00 2001
From: "Sun, Yi J" <yi.j.sun@intel.com>
Date: Fri, 6 Sep 2019 12:35:25 +0800
Subject: [PATCH] Auto env for scan

Change-Id: I1aaeffd98bde119a50be279d010b5e2961d7c4b2
Tracked-On:
Signed-off-by: Liu, Xinwu <xinwu.liu@intel.com>
Signed-off-by: Sun, Yi J <yi.j.sun@intel.com>
---
 auto_env/README                  | 39 +++++++++++++++++++++
 auto_env/setup.sh                | 21 ++++++++++++
 auto_env/setup_clearlinux_env.sh | 48 ++++++++++++++++++++++++++
 auto_env/setup_ubuntu_env.sh     | 73 ++++++++++++++++++++++++++++++++++++++++
 auto_env/start_android_usb.sh    | 34 +++++++++++++++++++
 5 files changed, 215 insertions(+)
 create mode 100644 auto_env/README
 create mode 100644 auto_env/setup.sh
 create mode 100644 auto_env/setup_clearlinux_env.sh
 create mode 100644 auto_env/setup_ubuntu_env.sh
 create mode 100644 auto_env/start_android_usb.sh

diff --git a/auto_env/README b/auto_env/README
new file mode 100644
index 0000000..c8decdf
--- /dev/null
+++ b/auto_env/README
@@ -0,0 +1,39 @@
+This folder contains files for booting up Android in Qemu.
+
+Hardware required
+-----------------
+Verified on NUC7i7BNH, you are welcome to try other x86 hardware which supports GVT-g (5th,
+6th, 7th or 8th SoC Generation Intel Core Processor, E3_v4, E3_v5 or E3_v6 Xeon Processor ).
+
+Software required
+-----------------
+Verified on ClearLinux OS 30870 and Ubuntu 18.04.2. Any later version should also work.
+NOTE: Earlier Host OS version probably doesnâ€™t work with the helper scripts to setup
+	the environment, you may need to follow the GVT-g wiki page to setup
+	the KVM/QEMU environment. (https://github.com/intel/gvt-linux/wiki/GVTg_Setup_Guide)
+
+How to start
+------------
+It will setup enviornment automatically on Ubuntu and clearlinux.
+
+	$cp -r $pwd ~/aaas && cd ~/aaas && chmod +x *.sh
+	$sudo ./setup.sh
+	$reboot
+
+The android image in USB could boot by:
+
+	$cd ~/aaas
+	$sudo ./start_android_usb.sh
+
+Android will boot up to UI in a qemu window, and now you could enjoy it.
+
+Files
+-----
+edk2-stable201808.tar.gz 				- source code of OVMF.fd
+igvtg-qemu-stable-2.12.0.tar.gz 		- source code of Qemu
+OVMF.fd 								- bios for android start
+qemu-2.12-gvtg_2.12-gvtg-1_amd64.deb 	- install package of Qemu
+setup.sh 								- shell script for setting enviornment
+setup_clearlinux_env.sh 				- shell script to setup enviornment	on clearlinux
+setup_ubuntu_env.sh 					- shell script to setup enviornment	on Ubuntu
+start_android_usb.sh 					- shell script for booting android VM
diff --git a/auto_env/setup.sh b/auto_env/setup.sh
new file mode 100644
index 0000000..bbd0ef2
--- /dev/null
+++ b/auto_env/setup.sh
@@ -0,0 +1,21 @@
+#!/bin/bash
+
+version=`cat /proc/version`
+
+if [[ $version =~ "Ubuntu" ]]; then
+	case $version in
+		*"18.04"*)
+			source ./setup_ubuntu_env.sh
+			;;
+		*"19.04"*)
+			source ./setup_ubuntu_env.sh
+			;;
+		*)
+			echo "Ubuntu 18.04 or higher version is supported"
+			;;
+	esac
+elif [[ $version =~ "Clear Linux OS" ]]; then
+	source setup_clearlinux_env.sh
+else
+	echo "only clearlinux or Ubuntu 18.04 or higher version is supported"
+fi
diff --git a/auto_env/setup_clearlinux_env.sh b/auto_env/setup_clearlinux_env.sh
new file mode 100644
index 0000000..e606df9
--- /dev/null
+++ b/auto_env/setup_clearlinux_env.sh
@@ -0,0 +1,48 @@
+#!/bin/bash
+
+reboot_required=0
+
+function changes_require(){
+	echo "If you run the installation first time, reboot is required"
+	read -p "QEMU version may be updated, do you want to continue? [Y/n]" res
+	if [ x$res = xn ]; then
+		exit 0
+	fi
+}
+
+function set_bundle_env_sh(){
+	export http_proxy=http://child-prc.intel.com:913/
+	export https_proxy=http://child-prc.intel.com:913/
+	export ftp_proxy=ftp://child-prc.intel.com:913/
+	[[ ! -d /var/cache/ca-certs ]] && clrtrust generate
+}
+
+function install_qemu(){
+	swupd clean
+	swupd bundle-add kvm-host
+}
+
+function enable_host_gvtg(){
+	[[ ! -f /etc/kernel/cmdline.d/gvtg.conf ]] \
+	&& mkdir -p /etc/kernel/cmdline.d/ \
+	&& echo "i915.enable_gvt=1 kvm.ignore_msrs=1 intel_iommu=on" > /etc/kernel/cmdline.d/gvtg.conf \
+	&& clr-boot-manager update \
+	&& reboot_required=1
+}
+
+function ask_reboot(){
+	if [ $reboot_required -eq 1 ];then
+		read -p "Reboot is required, do you want to reboot it NOW? [y/N]" res
+		if [ x$res = xy ]; then
+			reboot
+		else
+			echo "Please reboot system later to take effect"
+		fi
+	fi
+}
+
+changes_require
+set_bundle_env_sh
+install_qemu
+enable_host_gvtg
+ask_reboot
diff --git a/auto_env/setup_ubuntu_env.sh b/auto_env/setup_ubuntu_env.sh
new file mode 100644
index 0000000..a9ef1f7
--- /dev/null
+++ b/auto_env/setup_ubuntu_env.sh
@@ -0,0 +1,73 @@
+#!/bin/bash
+
+reboot_required=0
+
+function changes_require(){
+	echo "If you run the installation first time, reboot is required"
+	read -p "QEMU version will be replaced, do you want to continue? [Y/n]" res
+	if [ x$res = xn ]; then
+		exit 0
+	fi
+}
+
+function set_apt_env_sh(){
+	export http_proxy=http://child-prc.intel.com:913/
+	export https_proxy=https://child-prc.intel.com:913/
+	export ftp_proxy=ftp://child-prc.intel.com:913/
+
+	[[ ! `cat /etc/apt/apt.conf` =~ "http://child-prc.intel.com:913/" ]] \
+	&& echo 'Acquire::http::proxy "http://child-prc.intel.com:913/";' > /etc/apt/apt.conf \
+	&& echo 'Acquire::https::proxy "https://child-prc.intel.com:913/";' >> /etc/apt/apt.conf \
+	&& echo 'Acquire::ftp::proxy "ftp://child-prc.intel.com:913/";' >> /etc/apt/apt.conf
+
+	[[ ! `cat /etc/apt/sources.list` =~ "http://mirrors.aliyun.com/ubuntu/" ]] \
+	&& sed -i "1i\deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse" /etc/apt/sources.list \
+	&& sed -i "1i\deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse" /etc/apt/sources.list \
+	&& apt update \
+	&& apt install -y openssh-server
+}
+
+function install_qemu(){
+	apt purge -y "qemu*"
+	apt autoremove -y
+
+	dpkg -i qemu-2.12-gvtg_2.12-gvtg-1_amd64.deb
+	if [ $? = 1 ]; then
+		echo "Try to fix the dependence..."
+		apt -f -y install
+		dpkg -i qemu-2.12-gvtg_2.12-gvtg-1_amd64.deb
+	fi
+
+}
+
+function enable_host_gvtg(){
+	[[ ! `cat /etc/default/grub` =~ "i915.enable_gvt=1 intel_iommu=on" ]] \
+	&& sed -i "s/GRUB_CMDLINE_LINUX=\"/GRUB_CMDLINE_LINUX=\"i915.enable_gvt=1 intel_iommu=on /g" /etc/default/grub \
+	&& update-grub \
+	&& reboot_required=1
+}
+
+function ask_reboot(){
+	if [ $reboot_required -eq 1 ];then
+		read -p "Reboot is required, do you want to reboot it NOW? [y/N]" res
+		if [ x$res = xy ]; then
+			reboot
+		else
+			echo "Please reboot system later to take effect"
+		fi
+	fi
+}
+
+changes_require
+set_apt_env_sh
+install_qemu
+enable_host_gvtg
+ask_reboot
diff --git a/auto_env/start_android_usb.sh b/auto_env/start_android_usb.sh
new file mode 100644
index 0000000..67242a7
--- /dev/null
+++ b/auto_env/start_android_usb.sh
@@ -0,0 +1,34 @@
+#!/bin/bash
+g_file="/sys/bus/pci/devices/0000:00:02.0/4ec1ff92-81d7-11e9-aed4-5bf6a9a2bb0a"
+
+if [ ! -d $g_file ]; then
+	echo "Create VGPU at first!"
+	sudo sh -c "echo 4ec1ff92-81d7-11e9-aed4-5bf6a9a2bb0a > /sys/bus/pci/devices/0000:00:02.0/mdev_supported_types/i915-GVTg_V5_8/create"
+fi
+
+echo "VGPU has been created already. Launch QEMU!"
+
+/usr/bin/qemu-system-x86_64 \
+  -m 2048 -smp 2 -M q35 \
+  -name aaas-vm \
+  -enable-kvm \
+  -vga none \
+  -display gtk,gl=on \
+  -device vfio-pci,sysfsdev=/sys/bus/pci/devices/0000:00:02.0/4ec1ff92-81d7-11e9-aed4-5bf6a9a2bb0a,display=on,x-igd-opregion=on \
+  -k en-us \
+  -machine kernel_irqchip=on \
+  -global PIIX4_PM.disable_s3=1 -global PIIX4_PM.disable_s4=1 \
+  -cpu host \
+  -usb \
+  -device usb-mouse \
+  -device usb-kbd \
+  -bios ./OVMF.fd \
+  -chardev socket,id=charserial0,path=./kernel-console,server,nowait \
+  -device isa-serial,chardev=charserial0,id=serial0 \
+  -device qemu-xhci,id=xhci,addr=0x8 \
+  -device usb-host,bus=xhci.0,vendorid=0x0781,productid=0x5591 \
+  -device usb-host,bus=xhci.0,vendorid=0x8087,productid=0x0a2b \
+  -device e1000,netdev=net0 \
+  -netdev user,id=net0,hostfwd=tcp::5555-:5555 \
+  -device intel-hda -device hda-duplex \
+
-- 
1.9.1

