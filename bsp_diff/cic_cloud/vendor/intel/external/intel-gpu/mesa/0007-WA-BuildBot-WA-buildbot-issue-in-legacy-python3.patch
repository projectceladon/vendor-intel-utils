From bfb251d0a6913d91bbf571a953d1f61857af76c8 Mon Sep 17 00:00:00 2001
From: Marc Mao <marc.mao@intel.com>
Date: Tue, 6 Dec 2022 10:43:19 +0800
Subject: [WA] WA buildbot issue in legacy python3

Remove annotations which only existing python3 3.7 and later.

Change-Id: I19a3ba3d9cf05e795717bdafaa54485f3f1af7ee
Signed-off-by: Marc Mao <marc.mao@intel.com>
---
 src/util/glsl2spirv.py | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/util/glsl2spirv.py b/src/util/glsl2spirv.py
index dbe53e5a3e9..dd282ae7042 100644
--- a/src/util/glsl2spirv.py
+++ b/src/util/glsl2spirv.py
@@ -21,7 +21,7 @@
 
 # Converts GLSL shader to SPIR-V library 
 
-from __future__ import annotations
+#from __future__ import annotations
 import argparse
 import subprocess
 import sys
@@ -42,7 +42,7 @@ if T.TYPE_CHECKING:
         stage: str
 
 
-def get_args() -> Arguments:
+def get_args():
     parser = argparse.ArgumentParser()
     parser.add_argument('input', help="Name of input file.")
     parser.add_argument('output', help="Name of output file.")
@@ -78,7 +78,7 @@ def get_args() -> Arguments:
     return args
 
 
-def create_include_guard(lines: T.List[str], filename: str) -> T.List[str]:
+def create_include_guard(lines, filename):
     filename = filename.replace('.', '_')
     upper_name = filename.upper()
 
@@ -95,7 +95,7 @@ def create_include_guard(lines: T.List[str], filename: str) -> T.List[str]:
     return guard_head + lines + guard_tail
 
 
-def convert_to_static_variable(lines: T.List[str], varname: str) -> T.List[str]:
+def convert_to_static_variable(lines, varname):
     for idx, l in enumerate(lines):
         if varname in l:
             lines[idx] = f"static {l}"
@@ -103,7 +103,7 @@ def convert_to_static_variable(lines: T.List[str], varname: str) -> T.List[str]:
     raise RuntimeError(f'Did not find {varname}, this is unexpected')
 
 
-def override_version(lines: T.List[str], glsl_version: str) -> T.List[str]:
+def override_version(lines, glsl_version):
     for idx, l in enumerate(lines):
         if '#version ' in l:
             lines[idx] = f"#version {glsl_version}\n"
@@ -111,7 +111,7 @@ def override_version(lines: T.List[str], glsl_version: str) -> T.List[str]:
     raise RuntimeError('Did not find #version directive, this is unexpected')
 
 
-def postprocess_file(args: Arguments) -> None:
+def postprocess_file(args):
     with open(args.output, "r") as r:
         lines = r.readlines()
 
@@ -125,7 +125,7 @@ def postprocess_file(args: Arguments) -> None:
         w.writelines(lines)
 
 
-def preprocess_file(args: Arguments, origin_file: T.TextIO, directory: os.PathLike) -> str:
+def preprocess_file(args, origin_file, directory):
     with open(os.path.join(directory, os.path.basename(origin_file.name)), "w") as copy_file:
         lines = origin_file.readlines()
 
@@ -140,7 +140,7 @@ def preprocess_file(args: Arguments, origin_file: T.TextIO, directory: os.PathLi
     return copy_file.name
 
 
-def process_file(args: Arguments) -> None:
+def process_file(args):
     with open(args.input, "r") as infile:
         copy_file = preprocess_file(args, infile,
                                     os.path.dirname(args.output))
@@ -179,7 +179,7 @@ def process_file(args: Arguments) -> None:
         os.remove(copy_file)
 
 
-def main() -> None:
+def main():
     args = get_args()
     process_file(args)
 
-- 
2.33.1

