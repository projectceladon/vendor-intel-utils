From 931a7bf5465f55c512ab927bb2c2b5f925d86074 Mon Sep 17 00:00:00 2001
From: "Chen, Yu" <yu.y.chen@intel.com>
Date: Fri, 29 Apr 2022 10:44:16 +0800
Subject: [ENABLE] Fix Android Swapchain alignment issue

Use gralloc stride for Android buffer images but not calculate it by
Vulkan itself.

Tracked-On: OAM-102011
Signed-off-by: Chen, Yu <yu.y.chen@intel.com>
Change-Id: Ida8cb28b18fbb902c43bca0f24b6bfc2044c29bc
Signed-off-by: Marc Mao <marc.mao@intel.com>
---
 src/intel/vulkan/anv_android.c | 31 +++++++++++++++++++++++++++++++
 src/intel/vulkan/anv_image.c   |  2 +-
 src/intel/vulkan/anv_private.h |  3 +++
 3 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/src/intel/vulkan/anv_android.c b/src/intel/vulkan/anv_android.c
index 8a17f0a2454..4897840b2bb 100644
--- a/src/intel/vulkan/anv_android.c
+++ b/src/intel/vulkan/anv_android.c
@@ -142,6 +142,34 @@ vk_format_from_android(unsigned android_format, unsigned android_usage)
    }
 }
 
+static inline uint32_t
+get_pixel_size(unsigned android_format, unsigned android_usage)
+{
+   switch (android_format) {
+   case AHARDWAREBUFFER_FORMAT_R8G8B8A8_UNORM:
+   case AHARDWAREBUFFER_FORMAT_R8G8B8X8_UNORM:
+   case AHARDWAREBUFFER_FORMAT_R8G8B8_UNORM:
+      return 4;
+   case AHARDWAREBUFFER_FORMAT_R5G6B5_UNORM:
+      return 2;
+   case AHARDWAREBUFFER_FORMAT_R16G16B16A16_FLOAT:
+      return 8;
+   case AHARDWAREBUFFER_FORMAT_R10G10B10A2_UNORM:
+      return 4;
+   case AHARDWAREBUFFER_FORMAT_Y8Cb8Cr8_420:
+   case HAL_PIXEL_FORMAT_NV12_Y_TILED_INTEL:
+      return 1;
+   case AHARDWAREBUFFER_FORMAT_IMPLEMENTATION_DEFINED:
+      if (android_usage & BUFFER_USAGE_CAMERA_MASK)
+         return 1;
+      else
+         return 4;
+   case AHARDWAREBUFFER_FORMAT_BLOB:
+   default:
+      return 0;
+   }
+}
+
 static inline unsigned
 android_format_from_vk(unsigned vk_format)
 {
@@ -536,6 +564,9 @@ anv_image_init_from_gralloc(struct anv_device *device,
                                                base_info->tiling);
    assert(format != ISL_FORMAT_UNSUPPORTED);
 
+   anv_info.row_pitch_B = gralloc_info->stride *
+      get_pixel_size(gralloc_info->format, gralloc_info->usage);
+
    result = anv_image_init(device, image, &anv_info);
    if (result != VK_SUCCESS)
       goto fail_init;
diff --git a/src/intel/vulkan/anv_image.c b/src/intel/vulkan/anv_image.c
index 86d276b1cf7..0a1c47a21c2 100644
--- a/src/intel/vulkan/anv_image.c
+++ b/src/intel/vulkan/anv_image.c
@@ -1385,7 +1385,7 @@ anv_image_init(struct anv_device *device, struct anv_image *image,
                                            mod_explicit_info, isl_tiling_flags,
                                            create_info->isl_extra_usage_flags);
    } else {
-      r = add_all_surfaces_implicit_layout(device, image, fmt_list, 0,
+      r = add_all_surfaces_implicit_layout(device, image, fmt_list, create_info->row_pitch_B,
                                            isl_tiling_flags,
                                            create_info->isl_extra_usage_flags);
    }
diff --git a/src/intel/vulkan/anv_private.h b/src/intel/vulkan/anv_private.h
index 568b7cb85e3..cf81c82eb1c 100644
--- a/src/intel/vulkan/anv_private.h
+++ b/src/intel/vulkan/anv_private.h
@@ -3882,6 +3882,9 @@ struct anv_image_create_info {
 
    /** These flags will be added to any derived from VkImageCreateInfo. */
    isl_surf_usage_flags_t isl_extra_usage_flags;
+
+   /** Row pitch for external buffer **/
+   uint32_t row_pitch_B;
 };
 
 VkResult anv_image_init(struct anv_device *device, struct anv_image *image,
-- 
2.33.1

