From 6c9944715e059c2c6f690e1484a8acbb5e275f7b Mon Sep 17 00:00:00 2001
From: Chen Yu Y <yu.y.chen@intel.com>
Date: Fri, 1 Jul 2022 13:39:55 +0800
Subject: [FEATURE] Add astc_fallback option

astc_fallback is used to config if an app enable astc software
fallback. It is enabled in default.
Also change transcode_astc default to true.
So in default,
 1. if h/w support astc, app always support astc and not impacted by
    config
 2. if no h/w astc, use fallback and try to use transcode_astc

Signed-off-by: Mao, Marc <marc.mao@intel.com>
Signed-off-by: Chen Yu Y <yu.y.chen@intel.com>
Change-Id: Iedd8dc72bb59b5b2bce6925846232de464ae8d15
Signed-off-by: Marc Mao <marc.mao@intel.com>
---
 .../auxiliary/pipe-loader/driinfo_gallium.h   |  3 +-
 src/gallium/auxiliary/util/u_driconf.c        |  1 +
 src/gallium/include/frontend/api.h            |  1 +
 src/mesa/state_tracker/st_extensions.c        | 30 +++++++++++++++----
 src/util/driconf.h                            |  3 ++
 5 files changed, 31 insertions(+), 7 deletions(-)

diff --git a/src/gallium/auxiliary/pipe-loader/driinfo_gallium.h b/src/gallium/auxiliary/pipe-loader/driinfo_gallium.h
index 218911959b0..3281d88d833 100644
--- a/src/gallium/auxiliary/pipe-loader/driinfo_gallium.h
+++ b/src/gallium/auxiliary/pipe-loader/driinfo_gallium.h
@@ -39,7 +39,8 @@ DRI_CONF_SECTION_DEBUG
    DRI_CONF_FORCE_GL_NAMES_REUSE(false)
    DRI_CONF_FORCE_GL_MAP_BUFFER_SYNCHRONIZED(false)
    DRI_CONF_TRANSCODE_ETC(false)
-   DRI_CONF_TRANSCODE_ASTC(false)
+   DRI_CONF_TRANSCODE_ASTC(true)
+   DRI_CONF_ASTC_FALLBACK(true)
    DRI_CONF_FORCE_GL_VENDOR()
    DRI_CONF_FORCE_GL_RENDERER()
    DRI_CONF_OVERRIDE_VRAM_SIZE()
diff --git a/src/gallium/auxiliary/util/u_driconf.c b/src/gallium/auxiliary/util/u_driconf.c
index 8b9d8a72987..2bbd9c56d44 100644
--- a/src/gallium/auxiliary/util/u_driconf.c
+++ b/src/gallium/auxiliary/util/u_driconf.c
@@ -67,6 +67,7 @@ u_driconf_fill_st_options(struct st_config_options *options,
    query_bool_option(force_gl_map_buffer_synchronized);
    query_bool_option(transcode_etc);
    query_bool_option(transcode_astc);
+   query_bool_option(astc_fallback);
    query_string_option(force_gl_vendor);
    query_string_option(force_gl_renderer);
    query_string_option(mesa_extension_override);
diff --git a/src/gallium/include/frontend/api.h b/src/gallium/include/frontend/api.h
index 7684e11a3ce..73a60e821fb 100644
--- a/src/gallium/include/frontend/api.h
+++ b/src/gallium/include/frontend/api.h
@@ -237,6 +237,7 @@ struct st_config_options
    bool force_gl_map_buffer_synchronized;
    bool transcode_etc;
    bool transcode_astc;
+   bool astc_fallback;
    char *force_gl_vendor;
    char *force_gl_renderer;
    char *mesa_extension_override;
diff --git a/src/mesa/state_tracker/st_extensions.c b/src/mesa/state_tracker/st_extensions.c
index 7e22cec7895..7b18d3c5bc5 100644
--- a/src/mesa/state_tracker/st_extensions.c
+++ b/src/mesa/state_tracker/st_extensions.c
@@ -47,6 +47,9 @@
 #include "st_extensions.h"
 #include "st_format.h"
 
+#if defined(ANDROID)
+#include <cutils/log.h>
+#endif
 
 /*
  * Note: we use these function rather than the MIN2, MAX2, CLAMP macros to
@@ -1036,12 +1039,6 @@ void st_init_extensions(struct pipe_screen *screen,
           PIPE_FORMAT_ASTC_12x10_SRGB,
           PIPE_FORMAT_ASTC_12x12_SRGB } },
 
-      /* ASTC software fallback support. */
-      { { o(KHR_texture_compression_astc_ldr),
-          o(KHR_texture_compression_astc_sliced_3d) },
-        { PIPE_FORMAT_R8G8B8A8_UNORM,
-          PIPE_FORMAT_R8G8B8A8_SRGB } },
-
       { { o(EXT_texture_shared_exponent) },
         { PIPE_FORMAT_R9G9B9E5_FLOAT } },
 
@@ -1095,6 +1092,15 @@ void st_init_extensions(struct pipe_screen *screen,
           PIPE_FORMAT_ATC_RGBA_INTERPOLATED } },
    };
 
+   /* ASTC software fallback */
+   static const struct st_extension_format_mapping astc_fallback_mapping[] = {
+      /* ASTC software fallback support. */
+      { { o(KHR_texture_compression_astc_ldr),
+          o(KHR_texture_compression_astc_sliced_3d) },
+        { PIPE_FORMAT_R8G8B8A8_UNORM,
+          PIPE_FORMAT_R8G8B8A8_SRGB } },
+   };
+
    /* Required: vertex fetch support. */
    static const struct st_extension_format_mapping vertex_mapping[] = {
       { { o(EXT_vertex_array_bgra) },
@@ -1145,6 +1151,18 @@ void st_init_extensions(struct pipe_screen *screen,
    init_format_extensions(screen, extensions, texture_mapping,
                           ARRAY_SIZE(texture_mapping), PIPE_TEXTURE_2D,
                           PIPE_BIND_SAMPLER_VIEW);
+
+   if (options->astc_fallback) {
+      init_format_extensions(screen, extensions, astc_fallback_mapping,
+                          ARRAY_SIZE(astc_fallback_mapping), PIPE_TEXTURE_2D,
+                          PIPE_BIND_SAMPLER_VIEW);
+   }
+#if defined(ANDROID)
+   if (!extensions->KHR_texture_compression_astc_ldr) {
+       ALOGD("ASTC is not enabled");
+   }
+#endif
+
    init_format_extensions(screen, extensions, vertex_mapping,
                           ARRAY_SIZE(vertex_mapping), PIPE_BUFFER,
                           PIPE_BIND_VERTEX_BUFFER);
diff --git a/src/util/driconf.h b/src/util/driconf.h
index 8fb89cacdb7..bc5c6f91287 100644
--- a/src/util/driconf.h
+++ b/src/util/driconf.h
@@ -270,6 +270,9 @@
 #define DRI_CONF_TRANSCODE_ASTC(def) \
    DRI_CONF_OPT_B(transcode_astc, def, "Transcode ASTC formats to DXTC if unsupported")
 
+#define DRI_CONF_ASTC_FALLBACK(def) \
+   DRI_CONF_OPT_B(astc_fallback, def, "Enable ASTC software fallback")
+
 #define DRI_CONF_MESA_EXTENSION_OVERRIDE() \
    DRI_CONF_OPT_S_NODEF(mesa_extension_override, \
                   "Allow enabling/disabling a list of extensions")
-- 
2.33.1

