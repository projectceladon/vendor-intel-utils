From 90d71257e8647acde1c0c2a0dbcde63267d67549 Mon Sep 17 00:00:00 2001
From: "Mao, Marc" <marc.mao@intel.com>
Date: Thu, 2 Sep 2021 10:16:59 +0800
Subject: [FEATURE] Support specified GPU node for Android

Signed-off-by: Mao, Marc <marc.mao@intel.com>
Change-Id: I11f3a0ffd9e37df2afbdc046b62cad14fe86d945
Signed-off-by: Marc Mao <marc.mao@intel.com>
---
 src/egl/drivers/dri2/platform_android.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/src/egl/drivers/dri2/platform_android.c b/src/egl/drivers/dri2/platform_android.c
index 831b65b62d0..245850a5b86 100644
--- a/src/egl/drivers/dri2/platform_android.c
+++ b/src/egl/drivers/dri2/platform_android.c
@@ -1635,12 +1635,16 @@ static EGLBoolean
 droid_open_device(_EGLDisplay *disp, bool swrast)
 {
 #define MAX_DRM_DEVICES 64
+#define TARGET_DEVICE_IDX_PROP_NAME "ro.acg.rnode"
+#define DEFAULT_TARGET_DEVICE_IDX   "0"
    struct dri2_egl_display *dri2_dpy = dri2_egl_display(disp);
    drmDevicePtr device, devices[MAX_DRM_DEVICES] = { NULL };
    int num_devices;
 
    char *vendor_name = NULL;
    char vendor_buf[PROPERTY_VALUE_MAX];
+   char target_device_idx[PROPERTY_VALUE_MAX];
+   char target_device_path[128];
 
 #ifdef EGL_FORCE_RENDERNODE
    const unsigned node_type = DRM_NODE_RENDER;
@@ -1651,6 +1655,11 @@ droid_open_device(_EGLDisplay *disp, bool swrast)
    if (property_get("drm.gpu.vendor_name", vendor_buf, NULL) > 0)
       vendor_name = vendor_buf;
 
+   property_get(TARGET_DEVICE_IDX_PROP_NAME, target_device_idx, DEFAULT_TARGET_DEVICE_IDX);
+
+   snprintf(target_device_path, sizeof(target_device_path),"/dev/dri/renderD%d", atoi(target_device_idx)+128);
+   target_device_path[sizeof(target_device_path)-1] = '\0';
+
    num_devices = drmGetDevices2(0, devices, ARRAY_SIZE(devices));
    if (num_devices < 0)
       return EGL_FALSE;
@@ -1661,6 +1670,11 @@ droid_open_device(_EGLDisplay *disp, bool swrast)
       if (!(device->available_nodes & (1 << node_type)))
          continue;
 
+      if(strncmp(device->nodes[node_type], target_device_path, strlen(target_device_path))) {
+         //printf("target device (%s) != (%s)\n", target_device_path, device->nodes[node_type]);
+         continue;
+      }
+
       dri2_dpy->fd = loader_open_device(device->nodes[node_type]);
       if (dri2_dpy->fd < 0) {
          _eglLog(_EGL_WARNING, "%s() Failed to open DRM device %s",
-- 
2.33.1

