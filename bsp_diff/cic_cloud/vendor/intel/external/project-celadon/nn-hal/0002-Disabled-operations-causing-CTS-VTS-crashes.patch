From 32ebc9497a6550a3153a512c7f50dfd51bb19de2 Mon Sep 17 00:00:00 2001
From: Ratnesh Kumar Rai <ratnesh.kumar.rai@intel.com>
Date: Mon, 24 Jul 2023 22:24:02 +0530
Subject: [PATCH] Disabled operations causing CTS/VTS crashes

Tracked-On: OAM-111360
Change-Id: Ic9a82acb071cd4cf8e3ba04218edc69e6261a77
Signed-off-by: Ratnesh Kumar Rai <ratnesh.kumar.rai@intel.com>
---
 ngraph_creator/src/OperationsFactory.cpp | 56 ++++++++++++------------
 1 file changed, 28 insertions(+), 28 deletions(-)

diff --git a/ngraph_creator/src/OperationsFactory.cpp b/ngraph_creator/src/OperationsFactory.cpp
index 2fc1011..d1a58b9 100644
--- a/ngraph_creator/src/OperationsFactory.cpp
+++ b/ngraph_creator/src/OperationsFactory.cpp
@@ -29,8 +29,8 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<AveragePool2D>(operationIndex, mGraphMetadata);
         case OperationType::BATCH_TO_SPACE_ND:
             return std::make_shared<BatchToSpace>(operationIndex, mGraphMetadata);
-        case OperationType::BIDIRECTIONAL_SEQUENCE_RNN:
-            return std::make_shared<BidirectionalSequenceRNN>(operationIndex, mGraphMetadata);
+        // case OperationType::BIDIRECTIONAL_SEQUENCE_RNN:
+        //     return std::make_shared<BidirectionalSequenceRNN>(operationIndex, mGraphMetadata);
         case OperationType::CAST:
             return std::make_shared<Cast>(operationIndex, mGraphMetadata);
         case OperationType::CHANNEL_SHUFFLE:
@@ -43,8 +43,8 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<DepthToSpace>(operationIndex, mGraphMetadata);
         case OperationType::DEPTHWISE_CONV_2D:
             return std::make_shared<DepthwiseConv2d>(operationIndex, mGraphMetadata);
-        case OperationType::DEQUANTIZE:
-            return std::make_shared<Dequantize>(operationIndex, mGraphMetadata);
+        // case OperationType::DEQUANTIZE:
+        //     return std::make_shared<Dequantize>(operationIndex, mGraphMetadata);
         case OperationType::DIV:
             return std::make_shared<Div>(operationIndex, mGraphMetadata);
         case OperationType::EMBEDDING_LOOKUP:
@@ -73,8 +73,8 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<InstanceNormalization>(operationIndex, mGraphMetadata);
         case OperationType::L2_POOL_2D:
             return std::make_shared<L2Pooling2D>(operationIndex, mGraphMetadata);
-        case OperationType::L2_NORMALIZATION:
-            return std::make_shared<L2Normalization>(operationIndex, mGraphMetadata);
+        // case OperationType::L2_NORMALIZATION:
+        //     return std::make_shared<L2Normalization>(operationIndex, mGraphMetadata);
         case OperationType::LSTM:
             return std::make_shared<LSTM>(operationIndex, mGraphMetadata);
         case OperationType::LESS:
@@ -115,20 +115,20 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<Pow>(operationIndex, mGraphMetadata);
         case OperationType::PRELU:
             return std::make_shared<PRelu>(operationIndex, mGraphMetadata);
-        case OperationType::QUANTIZE:
-            return std::make_shared<Quantize>(operationIndex, mGraphMetadata);
+        // case OperationType::QUANTIZE:
+        //     return std::make_shared<Quantize>(operationIndex, mGraphMetadata);
         case OperationType::REDUCE_ALL:
             return std::make_shared<ReduceAll>(operationIndex, mGraphMetadata);
         case OperationType::REDUCE_ANY:
             return std::make_shared<ReduceAny>(operationIndex, mGraphMetadata);
-        case OperationType::REDUCE_MAX:
-            return std::make_shared<ReduceMax>(operationIndex, mGraphMetadata);
-        case OperationType::REDUCE_MIN:
-            return std::make_shared<ReduceMin>(operationIndex, mGraphMetadata);
-        case OperationType::REDUCE_PROD:
-            return std::make_shared<ReduceProd>(operationIndex, mGraphMetadata);
-        case OperationType::REDUCE_SUM:
-            return std::make_shared<ReduceSum>(operationIndex, mGraphMetadata);
+        // case OperationType::REDUCE_MAX:
+        //     return std::make_shared<ReduceMax>(operationIndex, mGraphMetadata);
+        // case OperationType::REDUCE_MIN:
+        //     return std::make_shared<ReduceMin>(operationIndex, mGraphMetadata);
+        // case OperationType::REDUCE_PROD:
+        //     return std::make_shared<ReduceProd>(operationIndex, mGraphMetadata);
+        // case OperationType::REDUCE_SUM:
+        //     return std::make_shared<ReduceSum>(operationIndex, mGraphMetadata);
         case OperationType::RELU:
             return std::make_shared<Relu>(operationIndex, mGraphMetadata);
         case OperationType::RELU1:
@@ -145,10 +145,10 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<ROIPooling>(operationIndex, mGraphMetadata);
         case OperationType::RSQRT:
             return std::make_shared<RSQRT>(operationIndex, mGraphMetadata);
-        case OperationType::RESIZE_BILINEAR:
-            return std::make_shared<ResizeBilinear>(operationIndex, mGraphMetadata);
-        case OperationType::RESIZE_NEAREST_NEIGHBOR:
-            return std::make_shared<ResizeNearestNeighbor>(operationIndex, mGraphMetadata);
+        // case OperationType::RESIZE_BILINEAR:
+        //     return std::make_shared<ResizeBilinear>(operationIndex, mGraphMetadata);
+        // case OperationType::RESIZE_NEAREST_NEIGHBOR:
+        //     return std::make_shared<ResizeNearestNeighbor>(operationIndex, mGraphMetadata);
         case OperationType::SELECT:
             return std::make_shared<Select>(operationIndex, mGraphMetadata);
         case OperationType::SOFTMAX:
@@ -161,8 +161,8 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<SQRT>(operationIndex, mGraphMetadata);
         case OperationType::SIN:
             return std::make_shared<Sin>(operationIndex, mGraphMetadata);
-        case OperationType::SPLIT:
-            return std::make_shared<Split>(operationIndex, mGraphMetadata);
+        // case OperationType::SPLIT:
+        //     return std::make_shared<Split>(operationIndex, mGraphMetadata);
         case OperationType::STRIDED_SLICE:
             return std::make_shared<StridedSlice>(operationIndex, mGraphMetadata);
         case OperationType::SQUEEZE:
@@ -173,12 +173,12 @@ std::shared_ptr<OperationsBase> OperationsFactory::getOperation(
             return std::make_shared<Tanh>(operationIndex, mGraphMetadata);
         case OperationType::TOPK_V2:
             return std::make_shared<TopkV2>(operationIndex, mGraphMetadata);
-        case OperationType::TRANSPOSE_CONV_2D:
-            return std::make_shared<TransposeConv2D>(operationIndex, mGraphMetadata);
-        case OperationType::TRANSPOSE:
-            return std::make_shared<Transpose>(operationIndex, mGraphMetadata);
-        case OperationType::UNIDIRECTIONAL_SEQUENCE_RNN:
-            return std::make_shared<UnidirectionalSequenceRNN>(operationIndex, mGraphMetadata);
+        // case OperationType::TRANSPOSE_CONV_2D:
+        //    return std::make_shared<TransposeConv2D>(operationIndex, mGraphMetadata);
+        // case OperationType::TRANSPOSE:
+        //    return std::make_shared<Transpose>(operationIndex, mGraphMetadata);
+        // case OperationType::UNIDIRECTIONAL_SEQUENCE_RNN:
+        //     return std::make_shared<UnidirectionalSequenceRNN>(operationIndex, mGraphMetadata);
         default:
             ALOGE("%s Cannot identify OperationType %d", __func__, operationType);
             break;
-- 
2.17.1

