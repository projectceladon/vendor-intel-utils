From 45dee7d1d749ac5a755b82bd31109b57da1bb216 Mon Sep 17 00:00:00 2001
From: "M, Kumar K" <kumar.k.m@intel.com>
Date: Fri, 14 Dec 2018 15:38:44 +0530
Subject: [PATCH] Test HAL

Tracked-On:
Signed-off-by: M, Kumar K <kumar.k.m@intel.com>
---
 audio_hw.c | 51 ++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 48 insertions(+), 3 deletions(-)

diff --git a/audio_hw.c b/audio_hw.c
index 04846fa..143fd6c 100644
--- a/audio_hw.c
+++ b/audio_hw.c
@@ -44,6 +44,8 @@
 #define PCM_CARD 0
 #define PCM_DEVICE 0
 
+#define DEFAULT_PCM_CARD 0
+
 #define OUT_PERIOD_SIZE 512
 #define OUT_PERIOD_COUNT 2
 #define OUT_SAMPLING_RATE 48000
@@ -51,6 +53,7 @@
 #define IN_PERIOD_SIZE 512
 #define IN_PERIOD_COUNT 2
 #define IN_SAMPLING_RATE 48000
+int global_PCM_CARD = 0;
 
 struct pcm_config pcm_config_out = {
     .channels = 2,
@@ -175,19 +178,57 @@ static void do_in_standby(struct stream_in *in)
     }
 }
 
+static int find_dummy_card_id(const char* name)
+{
+    char id_filepath[PATH_MAX] = {0};
+    char number_filepath[PATH_MAX] = {0};
+    ssize_t written;
+ 
+    ALOGE("## KKM get_card_number_by_name \n");
+    snprintf(id_filepath, sizeof(id_filepath), "/proc/asound/%s", name);
+
+    written = readlink(id_filepath, number_filepath, sizeof(number_filepath));
+    if (written < 0) {
+        ALOGE("Sound card %s does not exist - setting default", name);
+        return DEFAULT_PCM_CARD;
+    } else if (written >= (ssize_t)sizeof(id_filepath)) {
+        ALOGE("Sound card %s name is too long - setting default", name);
+        return DEFAULT_PCM_CARD;
+    }
+
+    // We are assured, because of the check in the previous elseif, that this
+    // buffer is null-terminated.  So this call is safe.
+    // 4 == strlen("card")
+    return atoi(number_filepath + 4);
+}
+
+
 /* must be called with hw device and output stream mutexes locked */
 static int start_output_stream(struct stream_out *out)
 {
     struct audio_device *adev = out->dev;
     int ret;
     
+    ALOGE("### KKM : start_output_stream global_PCM_CARD = %d\n", global_PCM_CARD); 
     ALOGV("start_output_stream");
     if (out->unavailable) {
 	ALOGV("start_output_stream: output not available");
         return -ENODEV;
     }
 
-    out->pcm = pcm_open(PCM_CARD, PCM_DEVICE, PCM_OUT | PCM_NORESTART | PCM_MONOTONIC, out->pcm_config);
+    ret = system("ls  /proc/asound/card0/pcm0p");
+	if(!ret) {
+	     ALOGE("### KKM : Default sound card is present!\n");
+	    global_PCM_CARD = DEFAULT_PCM_CARD;
+	}
+	else {
+            global_PCM_CARD = find_dummy_card_id("Dummy");
+	     ALOGE("### KKM : Default sound card NOT present, using dummy card!\n");
+	}
+
+    ALOGD("### KKM :%s: PCM card number for device = %d, \n",__func__, global_PCM_CARD);
+
+    out->pcm = pcm_open(global_PCM_CARD, PCM_DEVICE, PCM_OUT | PCM_NORESTART | PCM_MONOTONIC, out->pcm_config);
     if (!out->pcm) {
 	ALOGE("pcm_open(out) failed: device not found");
         return -ENODEV;
@@ -212,7 +253,9 @@ static int start_input_stream(struct stream_in *in)
     struct audio_device *adev = in->dev;
     int ret;
 
-    in->pcm = pcm_open(PCM_CARD, PCM_DEVICE, PCM_IN, in->pcm_config);
+   ALOGE("### KKM : start_input_stream \n"); 
+    //in->pcm = pcm_open(PCM_CARD, PCM_DEVICE, PCM_IN, in->pcm_config);
+    in->pcm = pcm_open(global_PCM_CARD, PCM_DEVICE, PCM_IN, in->pcm_config);
     if (!in->pcm) {
         return -ENODEV;
     } else if (!pcm_is_ready(in->pcm)) {
@@ -624,7 +667,9 @@ static int adev_open_output_stream(struct audio_hw_device *dev,
     struct stream_out *out;
     struct pcm_params *params;
 
-    params = pcm_params_get(PCM_CARD, PCM_DEVICE, PCM_OUT);
+   ALOGE("### KKM : adev_open_output_stream \n"); 
+    //params = pcm_params_get(PCM_CARD, PCM_DEVICE, PCM_OUT);
+    params = pcm_params_get(global_PCM_CARD, PCM_DEVICE, PCM_OUT);
     if (!params)
         return -ENOSYS;
 
-- 
1.9.1

