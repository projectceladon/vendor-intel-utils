From f262a5e188c66c35ff7883c39564847565db90b7 Mon Sep 17 00:00:00 2001
From: Bjoern Johansson <bjoernj@google.com>
Date: Thu, 19 Jul 2018 12:30:55 -0700
Subject: [PATCH] Set optlen for UDP-encap check in XfrmController

When setting the socket owner for an encap socket XfrmController will
first attempt to verify that the socket has the UDP-encap socket option
set. When doing so it would pass in an uninitialized optlen parameter
which could cause the call to not modify the option value if the optlen
happened to be too short. So for example if the stack happened to
contain a zero where optlen was located the check would fail and the
socket owner would not be changed.

Fix this by setting optlen to the size of the option value parameter.

Test: run cts -m CtsNetTestCases
BUG: 111650288
(cherry picked from commit fc42a105147310bd680952d4b71fe32974bd8506)

Change-Id: I6868a0e7fefcc6be5a4ba2c80cfba30021a820ae
Tracked-On: OAM-71338
Signed-off-by: johnzhax <johnx.zhang@intel.com>
Signed-off-by: Yan, WalterX <walterx.yan@intel.com>
---
 server/XfrmController.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/server/XfrmController.cpp b/server/XfrmController.cpp
index b9a5a41..6f7bf2f 100644
--- a/server/XfrmController.cpp
+++ b/server/XfrmController.cpp
@@ -436,7 +436,7 @@ netdutils::Status XfrmController::ipSecSetEncapSocketOwner(const android::base::
     }
 
     int optval;
-    socklen_t optlen;
+    socklen_t optlen = sizeof(optval);
     netdutils::Status status =
         getSyscallInstance().getsockopt(Fd(socket), IPPROTO_UDP, UDP_ENCAP, &optval, &optlen);
     if (status != netdutils::status::ok) {
-- 
1.9.1

