From 840e844f67e65c562b226e4cd6991ba7eba6a18b Mon Sep 17 00:00:00 2001
From: duminx <minx.du@intel.com>
Date: Mon, 11 Jun 2018 02:04:17 -0400
Subject: [PATCH 2/3] [storage] Remove fsync for physical RPMB TD port

For physical RPMB, fsync is already called by original codes.
It could reduce time cost. But it's kept for simulated RPMB.

Change-Id: I0b676961bb99cd9605f8b2857937f517a761d112
Signed-off-by: duminx <minx.du@intel.com>
---
 trusty/storage/proxy/rpmb-sim.c | 28 +++++++++++++++++++++++-----
 trusty/storage/proxy/storage.c  |  6 +-----
 2 files changed, 24 insertions(+), 10 deletions(-)

diff --git a/trusty/storage/proxy/rpmb-sim.c b/trusty/storage/proxy/rpmb-sim.c
index d161501..eb2ce9f 100644
--- a/trusty/storage/proxy/rpmb-sim.c
+++ b/trusty/storage/proxy/rpmb-sim.c
@@ -220,6 +220,24 @@ void rpmb_sim_close(void)
     rpmb_fd = -1;
 }
 
+static int fwrite_with_retry(int fd, const void *buf, size_t size, off_t offset)
+{
+    int rc;
+
+    rc = write_with_retry(fd, buf, size, offset);
+    if (rc < 0) {
+       ALOGE("%s write with retry failed.\n", __func__);
+       return rc;
+    }
+
+    rc = fsync(fd);
+    if (rc < 0) {
+        ALOGE("fsync for fd=%d failed: %s\n", fd, strerror(errno));
+        return rc;
+    }
+    return 0;
+}
+
 static int get_counter(uint32_t *counter)
 {
     int rc = 0;
@@ -242,7 +260,7 @@ static int set_counter(const uint32_t *counter)
     uint32_t cnt = *counter;
 
     swap32(cnt);
-    rc = write_with_retry(rpmb_fd, &cnt, sizeof(cnt), WRITER_COUNTER_ADDR);
+    rc = fwrite_with_retry(rpmb_fd, &cnt, sizeof(cnt), WRITER_COUNTER_ADDR);
     if (rc < 0)
     {
         ALOGE("%s failed.\n", __func__);
@@ -293,14 +311,14 @@ static int program_key(const uint8_t *key)
 {
     int rc = 0;
 
-    rc = write_with_retry(rpmb_fd, key, 32, KEY_ADDR);
+    rc = fwrite_with_retry(rpmb_fd, key, 32, KEY_ADDR);
     if (rc < 0)
     {
         ALOGE("%s failed at set key.\n", __func__);
         return -1;
     }
 
-    rc = write_with_retry(rpmb_fd, KEY_MAGIC, KEY_MAGIC_LENGTH, KEY_MAGIC_ADDR);
+    rc = fwrite_with_retry(rpmb_fd, KEY_MAGIC, KEY_MAGIC_LENGTH, KEY_MAGIC_ADDR);
     if (rc < 0)
     {
         ALOGE("%s failed at set magic.\n", __func__);
@@ -462,8 +480,8 @@ static int rpmb_write(const struct rpmb_packet* in_frame, uint32_t in_cnt,
     for (i = 0; i < in_cnt; i++)
         memcpy(data + i * 256, in_frame[i].data, 256);
 
-    if (write_with_retry(rpmb_fd, data, sizeof(data), 256 * addr) < 0) {
-        ALOGE("%s write_with_retry failed.\n", __func__);
+    if (fwrite_with_retry(rpmb_fd, data, sizeof(data), 256 * addr) < 0) {
+        ALOGE("%s fwrite_with_retry failed.\n", __func__);
         goto out;
     }
 
diff --git a/trusty/storage/proxy/storage.c b/trusty/storage/proxy/storage.c
index 753d35d..4ba2ef7 100644
--- a/trusty/storage/proxy/storage.c
+++ b/trusty/storage/proxy/storage.c
@@ -136,11 +136,7 @@ ssize_t write_with_retry(int fd, const void *buf_, size_t size, off_t offset)
         buf += rc;
         offset += rc;
     }
-    rc = fsync(fd);
-    if (rc < 0) {
-        ALOGE("fsync for fd=%d failed: %s\n", fd, strerror(errno));
-        return rc;
-    }
+
     return 0;
 }
 
-- 
2.7.4

