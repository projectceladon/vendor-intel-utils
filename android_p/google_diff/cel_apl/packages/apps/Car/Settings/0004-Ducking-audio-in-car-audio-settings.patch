From 5cc09c9088eebfe08f8f8a319ce25109fbf7fa19 Mon Sep 17 00:00:00 2001
From: "M, Kumar K" <kumar.k.m@intel.com>
Date: Wed, 28 Nov 2018 17:20:29 +0530
Subject: [PATCH] Ducking audio in car audio settings

Change-Id: I9d7b3797d6761692f3cd08c6661bf330028ef6f1
Tracked-On:
Signed-off-by: M, Kumar K <kumar.k.m@intel.com>
---
 AndroidManifest.xml                                |  2 +-
 .../android/car/settings/sound/VolumeLineItem.java | 31 ++++++++++++++++++----
 2 files changed, 27 insertions(+), 6 deletions(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index a92c87b..380f44c 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -24,7 +24,7 @@
 
     <uses-sdk
         android:minSdkVersion="24"
-        android:targetSdkVersion="24"/>
+        android:targetSdkVersion="26"/>
 
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
diff --git a/src/com/android/car/settings/sound/VolumeLineItem.java b/src/com/android/car/settings/sound/VolumeLineItem.java
index 27a0089..2932be3 100644
--- a/src/com/android/car/settings/sound/VolumeLineItem.java
+++ b/src/com/android/car/settings/sound/VolumeLineItem.java
@@ -29,6 +29,8 @@ import android.os.Handler;
 import android.os.Looper;
 import android.provider.Settings;
 import android.widget.SeekBar;
+import android.media.AudioManager;
+import android.media.AudioAttributes;
 
 import androidx.car.widget.SeekbarListItem;
 
@@ -47,6 +49,7 @@ public class VolumeLineItem extends SeekbarListItem implements SeekBar.OnSeekBar
     private final int mVolumeGroupId;
     private final CarAudioManager mCarAudioManager;
     private boolean mIsDragging = false;
+    private final AudioManager mAudioManager;
 
     public VolumeLineItem(
             Context context,
@@ -67,6 +70,7 @@ public class VolumeLineItem extends SeekbarListItem implements SeekBar.OnSeekBar
         setOnSeekBarChangeListener(this);
         setText(context.getString(titleId));
         setPrimaryActionIcon(iconResId);
+        mAudioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
     }
 
     @Override
@@ -92,10 +96,26 @@ public class VolumeLineItem extends SeekbarListItem implements SeekBar.OnSeekBar
                 LOG.w("Ignoring volume change event because the car isn't connected");
                 return;
             }
-            // AudioManager.FLAG_PLAY_SOUND does not guarantee play sound, use our own
-            // playback here instead.
-            mCarAudioManager.setGroupVolume(mVolumeGroupId, progress + mMinVolume, 0);
-            playAudioFeedback();
+
+            AudioAttributes attr = mRingtone.getAudioAttributes();
+            AudioManager.OnAudioFocusChangeListener listener = new AudioManager.OnAudioFocusChangeListener(){
+                public void onAudioFocusChange(int focusChange) {
+                    //No need to resume our feedback tone playing
+                    mAudioManager.abandonAudioFocus(this, attr);
+                }
+            };
+            int state = mAudioManager.requestAudioFocus(
+                    listener,
+                    attr,
+                    mAudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK,
+                    0 // flags, legacy behavior
+                    );
+            if (state == mAudioManager.AUDIOFOCUS_REQUEST_GRANTED){
+		// AudioManager.FLAG_PLAY_SOUND does not guarantee play sound, use our own
+		// playback here instead.
+		mCarAudioManager.setGroupVolume(mVolumeGroupId, progress + mMinVolume, 0);
+		playAudioFeedback(listener, attr);
+            }
         } catch (CarNotConnectedException e) {
             LOG.e("Car is not connected!", e);
         }
@@ -124,13 +144,14 @@ public class VolumeLineItem extends SeekbarListItem implements SeekBar.OnSeekBar
         setProgress(getSeekbarValue());
     }
 
-    private void playAudioFeedback() {
+    private void playAudioFeedback(AudioManager.OnAudioFocusChangeListener listener, AudioAttributes attr) {
         mUiHandler.removeCallbacksAndMessages(null);
         mRingtone.play();
         mUiHandler.postDelayed(() -> {
             if (mRingtone.isPlaying()) {
                 mRingtone.stop();
             }
+           mAudioManager.abandonAudioFocus(listener, attr);
         }, AUDIO_FEEDBACK_DURATION_MS);
     }
 
-- 
1.9.1

