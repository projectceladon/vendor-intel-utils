From faad17c832928d91c7a005299b5028ce4e9067f3 Mon Sep 17 00:00:00 2001
From: karanx <karanx.bhagoji@intel.com>
Date: Tue, 20 Feb 2018 20:27:05 +0530
Subject: [PATCH 06/11] usb: dwc3: W/A for dwc3 revision < 2.2a

WORKAROUND: For DWC3 revision < 2.20a have an issue
which would cause metastability state on Run/Stop
bit if we try to force the IP to USB2-only mode.

Because of that, we cannot configure the IP to any
speed other than the SuperSpeed

Refers to: STAR#9000525659: Clock Domain Crossing
on DCTL in USB 2.0 Mode.

Jira: None.
Test: Depends on patch "usb limit to high speed"
      Boot the board. Check adb with USB3.0 cable.

Change-Id: I5a40ac95990777626d3185b46ddef83bd4e66730
Signed-off-by: Abhilash K V <abhilash.k.v@intel.com>
Signed-off-by: karan889 <karanx.bhagoji@intel.com>

Conflicts:
	drivers/gpu/drm/i915/i915_params.h
---
 drivers/usb/dwc3/gadget.c | 43 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

diff --git a/drivers/usb/dwc3/gadget.c b/drivers/usb/dwc3/gadget.c
index 7120678..3e24733 100644
--- a/drivers/usb/dwc3/gadget.c
+++ b/drivers/usb/dwc3/gadget.c
@@ -1878,6 +1878,49 @@ static int __dwc3_gadget_start(struct dwc3 *dwc)
 	int			ret = 0;
 	u32			reg;
 
+        reg = dwc3_readl(dwc->regs, DWC3_DCFG);
+        reg &= ~(DWC3_DCFG_SPEED_MASK);
+
+        /**
+         * WORKAROUND: DWC3 revision < 2.20a have an issue
+         * which would cause metastability state on Run/Stop
+         * bit if we try to force the IP to USB2-only mode.
+         *
+         * Because of that, we cannot configure the IP to any
+         * speed other than the SuperSpeed
+         *
+         * Refers to:
+         *
+         * STAR#9000525659: Clock Domain Crossing on DCTL in
+         * USB 2.0 Mode
+         */
+        if (dwc->revision < DWC3_REVISION_220A) {
+                reg |= DWC3_DCFG_SUPERSPEED;
+        } else {
+                switch (dwc->maximum_speed) {
+                case USB_SPEED_LOW:
+                        reg |= DWC3_DCFG_LOWSPEED;
+                        break;
+                case USB_SPEED_FULL:
+                        reg |= DWC3_DCFG_FULLSPEED;
+                        break;
+                case USB_SPEED_HIGH:
+                        reg |= DWC3_DCFG_HIGHSPEED;
+                        break;
+                case USB_SPEED_SUPER_PLUS:
+                        reg |= DWC3_DCFG_SUPERSPEED_PLUS;
+                        break;
+                default:
+                        dev_err(dwc->dev, "invalid dwc->maximum_speed (%d)\n",
+                                dwc->maximum_speed);
+                        /* fall through */
+                case USB_SPEED_SUPER:
+                        reg |= DWC3_DCFG_SUPERSPEED;
+                        break;
+                }
+        }
+        dwc3_writel(dwc->regs, DWC3_DCFG, reg);
+
 	/*
 	 * Use IMOD if enabled via dwc->imod_interval. Otherwise, if
 	 * the core supports IMOD, disable it.
-- 
1.9.1

