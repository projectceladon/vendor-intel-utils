From e8656f933c6f34b8bfb8523ec84e8fde2949cd47 Mon Sep 17 00:00:00 2001
From: Mathias Nyman <mathias.nyman@linux.intel.com>
Date: Wed, 20 Mar 2019 18:06:21 +0200
Subject: [PATCH 6/6] usb: xhci-dbgraw: clean up compiler warnings

remove unused code, remove extra warnings at failed memory allocations,
and use min_t() instead of min().

Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
---
 drivers/usb/host/xhci-dbgraw.c | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)

diff --git a/drivers/usb/host/xhci-dbgraw.c b/drivers/usb/host/xhci-dbgraw.c
index 58dac05e3b77..a55c4d7a2040 100644
--- a/drivers/usb/host/xhci-dbgraw.c
+++ b/drivers/usb/host/xhci-dbgraw.c
@@ -18,7 +18,6 @@
 #define DBC_XHCI_MINORS     8
 #define DBC_STR_FUNC_RAW    "RAW"
 #define DBC_RAW_BULK_BUFFER_SIZE    (64 * 1024)
-#define DBC_RAW_NAME_LEN    32

 static DEFINE_IDR(dbc_minors);

@@ -32,6 +31,7 @@ struct dbc_dev {

	int error;
	bool in_use;
+	char name[16];
	struct xhci_dbc *dbc;
	struct miscdevice misc_dev;
 };
@@ -113,7 +113,7 @@ static ssize_t dbc_read(struct file *fp, char __user *buf,

	req->actual = 0;

-	xfer = min(count, DBC_RAW_BULK_BUFFER_SIZE);
+	xfer = min_t(size_t, count, DBC_RAW_BULK_BUFFER_SIZE);
	req->length = xfer;

	status = dbc_ep_queue(port->in, req, GFP_ATOMIC);
@@ -181,7 +181,7 @@ static ssize_t dbc_write(struct file *fp, const char __user *buf,
	}

	req->actual = 0;
-	xfer = min(count, DBC_RAW_BULK_BUFFER_SIZE);
+	xfer = min_t(size_t, count, DBC_RAW_BULK_BUFFER_SIZE);

	ret = copy_from_user(req->buf, buf, xfer);
	if (ret) {
@@ -263,7 +263,6 @@ static int dbc_raw_register_device(struct xhci_hcd *xhci)
 {
	struct device *devm = xhci->main_hcd->self.controller;
	struct xhci_dbc *dbc = xhci->dbc;
-	struct dbc_port *port = &dbc->port;
	struct dbc_dev *dev;
	int ret = 0;
	int id;
@@ -285,10 +284,10 @@ static int dbc_raw_register_device(struct xhci_hcd *xhci)
	if (id < 0)
		return id;

+	snprintf(dev->name, sizeof(dev->name), "dbc_raw%d", id);
+
+	dev->misc_dev.name = dev->name;
	dev->misc_dev.minor = MISC_DYNAMIC_MINOR;
-	dev->misc_dev.name = kmalloc_array(DBC_RAW_NAME_LEN, sizeof(char),
-			GFP_KERNEL);
-	sprintf(dev->misc_dev.name, "dbc_raw%d", id);
	dev->misc_dev.fops = &dbc_fops;

	ret = misc_register(&dev->misc_dev);
@@ -311,12 +310,10 @@ static int dbc_raw_register_device(struct xhci_hcd *xhci)
 static void dbc_raw_unregister_device(struct xhci_hcd *xhci)
 {
	struct xhci_dbc *dbc = xhci->dbc;
-	struct dbc_port *port = &dbc->port;
	struct dbc_dev *dbc_dev = (struct dbc_dev *) dbc->func_priv;

	if (dbc_dev) {
		idr_remove(&dbc_minors, dbc_dev->misc_dev.minor);
-		kfree(dbc_dev->misc_dev.name);
		misc_deregister(&dbc_dev->misc_dev);
	}
	idr_destroy(&dbc_minors);
@@ -333,7 +330,7 @@ static int dbc_raw_stop(struct xhci_dbc *dbc)
	return 0;
 }

-static const struct dbc_function raw_func = {
+static struct dbc_function raw_func = {
	.owner = THIS_MODULE,
	.string = {
		.manufacturer = DBC_STR_MANUFACTURER,
--
2.21.0
