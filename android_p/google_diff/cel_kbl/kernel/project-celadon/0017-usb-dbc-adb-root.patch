From 35f2051985cc7f92f0842d58fbd808ee8ad5260c Mon Sep 17 00:00:00 2001
From: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Date: Fri, 21 Jun 2019 15:39:22 +0530
Subject: [PATCH] usb: dbc: adb root

Change-Id: I027be46329908be06cba1b8e6a4e53ad06e34ada
Tracked-On:
Signed-off-by: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
---
 drivers/usb/host/xhci-dbgcap.c   |  3 ++-
 drivers/usb/host/xhci-dbgcap.h   |  3 ++-
 drivers/usb/host/xhci-dbgraw.c   | 19 +++++++++++++++++++
 include/linux/usb/xhcidbc.h      |  8 ++++++++
 include/uapi/linux/usb/xhcidbc.h | 11 +++++++++++
 5 files changed, 42 insertions(+), 2 deletions(-)
 create mode 100644 include/linux/usb/xhcidbc.h
 create mode 100644 include/uapi/linux/usb/xhcidbc.h

diff --git a/drivers/usb/host/xhci-dbgcap.c b/drivers/usb/host/xhci-dbgcap.c
index 08c31b4..2eb6370 100644
--- a/drivers/usb/host/xhci-dbgcap.c
+++ b/drivers/usb/host/xhci-dbgcap.c
@@ -170,6 +170,7 @@ static void xhci_dbc_flush_single_request(struct dbc_request *req)
 {
 	union xhci_trb	*trb = req->trb;
 
+
 	trb->generic.field[0]	= 0;
 	trb->generic.field[1]	= 0;
 	trb->generic.field[2]	= 0;
@@ -662,6 +663,7 @@ static enum evtreturn xhci_dbc_do_handle_events(struct xhci_dbc *dbc)
 	struct xhci_hcd		*xhci = dbc->xhci;
 	bool			update_erdp = false;
 
+
 	/* DbC state machine: */
 	switch (dbc->state) {
 	case DS_DISABLED:
@@ -695,7 +697,6 @@ static enum evtreturn xhci_dbc_do_handle_events(struct xhci_dbc *dbc)
 			xhci_info(xhci, "DbC cable unplugged\n");
 			dbc->state = DS_ENABLED;
 			xhci_dbc_flush_requests(dbc);
-
 			return EVT_DISC;
 		}
 
diff --git a/drivers/usb/host/xhci-dbgcap.h b/drivers/usb/host/xhci-dbgcap.h
index 302e6ca..f2bd802 100644
--- a/drivers/usb/host/xhci-dbgcap.h
+++ b/drivers/usb/host/xhci-dbgcap.h
@@ -12,6 +12,7 @@
 #include <linux/tty.h>
 #include <linux/kfifo.h>
 #include <linux/kernel.h>
+#include <linux/ioctl.h>
 
 struct dbc_regs {
 	__le32	capability;
@@ -219,7 +220,7 @@ static inline struct dbc_ep *get_out_ep(struct xhci_hcd *xhci)
 int xhci_dbc_init(struct xhci_hcd *xhci);
 void xhci_dbc_exit(struct xhci_hcd *xhci);
 struct dbc_request *dbc_alloc_request(struct dbc_ep *dep, gfp_t gfp_flags);
-void xhci_dbc_flush_reqests(struct xhci_dbc *dbc);
+void xhci_dbc_flush_requests(struct xhci_dbc *dbc);
 void dbc_free_request(struct dbc_ep *dep, struct dbc_request *req);
 int dbc_ep_queue(struct dbc_ep *dep, struct dbc_request *req, gfp_t gfp_flags);
 int xhci_dbc_register_function(struct dbc_function *func);
diff --git a/drivers/usb/host/xhci-dbgraw.c b/drivers/usb/host/xhci-dbgraw.c
index b1445cc..bfce082 100644
--- a/drivers/usb/host/xhci-dbgraw.c
+++ b/drivers/usb/host/xhci-dbgraw.c
@@ -13,6 +13,7 @@
 #include <linux/sizes.h>
 #include <linux/slab.h>
 
+
 #include "xhci.h"
 #include "xhci-dbgcap.h"
 
@@ -242,6 +243,23 @@ static int dbc_open(struct inode *ip, struct file *fp)
 	return r;
 }
 
+static long dbc_ioctl(struct file *fp, unsigned int cmd, unsigned long arg)
+{
+//       struct xhci_hcd *xhci = g_xhci;
+//       struct xhci_dbc   *dbc = xhci->dbc;
+	struct dbc_dev *dev = (struct dbc_dev *) fp->private_data;
+        struct xhci_dbc *dbc = dev->dbc;
+
+       if (dbc == NULL)
+               return 0;
+
+       spin_lock(&dbc->lock);
+       xhci_dbc_flush_requests(dbc);
+       spin_unlock(&dbc->lock);
+
+       return 0;
+}
+
 static int dbc_release(struct inode *ip, struct file *fp)
 {
 	struct dbc_dev *dbc_dev = (struct dbc_dev *) fp->private_data;
@@ -260,6 +278,7 @@ static const struct file_operations dbc_fops = {
 	.read = dbc_read,
 	.write = dbc_write,
 	.open = dbc_open,
+	.unlocked_ioctl = dbc_ioctl,
 	.release = dbc_release,
 };
 
diff --git a/include/linux/usb/xhcidbc.h b/include/linux/usb/xhcidbc.h
new file mode 100644
index 0000000..8b4c66c
--- /dev/null
+++ b/include/linux/usb/xhcidbc.h
@@ -0,0 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef __LINUX_XHCI_DBC_H
+#define __LINUX_XHCI_DBC_H
+
+#include <uapi/linux/usb/functionfs.h>
+
+#endif /* __LINUX_XHCI_DBC_H */
diff --git a/include/uapi/linux/usb/xhcidbc.h b/include/uapi/linux/usb/xhcidbc.h
new file mode 100644
index 0000000..4200ee6
--- /dev/null
+++ b/include/uapi/linux/usb/xhcidbc.h
@@ -0,0 +1,11 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef _UAPI__LINUX_XHCI_DBC_H
+#define _UAPI__LINUX_XHCI_DBC_H
+
+#include <linux/types.h>
+#include <linux/ioctl.h>
+
+#define FLUSH_DBC_EP   _IO('f', 1)
+
+#endif /* _UAPI__LINUX_XHCI_DBC_H */
-- 
2.7.4

