From 0f5cefd093cc802184d2c3ddb954e560f1297105 Mon Sep 17 00:00:00 2001
From: Zhiwei Li <zhiwei.li@intel.com>
Date: Thu, 30 Aug 2018 09:53:12 +0800
Subject: [PATCH 3/3] f2fs-tools: add -g to give default options

ported from f2fs-tools maintainer's git:
https://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs-tools.git/commit/?h=dev-test&id=1772e31423d73f59ae9823419b4aeccb3d6fe828

patch list:
https://android.intel.com/#/c/643565
https://android.intel.com/#/c/643566
https://android.intel.com/#/c/643567
https://android.intel.com/#/c/643585

Change-Id: If6a39083a0630aef80698e1a7d4f336a4466da6a
---
 fsck/main.c             | 31 ++++++++++++++++++++++++++++++-
 include/f2fs_fs.h       |  6 ++++++
 mkfs/f2fs_format_main.c | 10 +++++++++-
 3 files changed, 45 insertions(+), 2 deletions(-)

diff --git a/fsck/main.c b/fsck/main.c
index f35d01d..a700689 100644
--- a/fsck/main.c
+++ b/fsck/main.c
@@ -53,6 +53,7 @@ void fsck_usage()
 	MSG(0, "  -a check/fix potential corruption, reported by f2fs\n");
 	MSG(0, "  -d debug level [default:0]\n");
 	MSG(0, "  -f check/fix entire partition\n");
+	MSG(0, "  -g add default options\n");
 	MSG(0, "  -p preen mode [default:0 the same as -a [0|1]]\n");
 	MSG(0, "  -S sparse_mode\n");
 	MSG(0, "  -t show directory tree\n");
@@ -140,6 +141,20 @@ static void error_out(char *prog)
 		MSG(0, "\nWrong progam.\n");
 }
 
+static void __add_fsck_options(void)
+{
+	/* -a */
+	c.auto_fix = 1;
+}
+
+static void add_default_options(void)
+{
+	switch (c.defset) {
+	case CONF_ANDROID:
+		__add_fsck_options();
+	}
+}
+
 void f2fs_parse_options(int argc, char *argv[])
 {
 	int option = 0;
@@ -160,7 +175,7 @@ void f2fs_parse_options(int argc, char *argv[])
 	}
 
 	if (!strcmp("fsck.f2fs", prog)) {
-		const char *option_string = ":ad:fp:q:Sty";
+		const char *option_string = ":ad:fg:p:q:Sty";
 		int opt = 0;
 		struct option long_opt[] = {
 			{"dry-run", no_argument, 0, 1},
@@ -179,6 +194,10 @@ void f2fs_parse_options(int argc, char *argv[])
 				c.auto_fix = 1;
 				MSG(0, "Info: Fix the reported corruption.\n");
 				break;
+			case 'g':
+				if (!strcmp(optarg, "android"))
+					c.defset = CONF_ANDROID;
+				break;
 			case 'p':
 				/* preen mode has different levels:
 				 *  0: default level, the same as -a
@@ -276,6 +295,14 @@ void f2fs_parse_options(int argc, char *argv[])
 				MSG(0, "Info: Debug level = %d\n",
 							c.dbg_lv);
 				break;
+			case 'g':
+				if (!strcmp(optarg, "android")) {
+					c.defset = CONF_ANDROID;
+					MSG(0, "Info: Set conf for android\n");
+					break;
+				}
+				err = EWRONG_OPT;
+				break;
 			case 'i':
 				if (strncmp(optarg, "0x", 2))
 					ret = sscanf(optarg, "%d",
@@ -476,6 +503,8 @@ void f2fs_parse_options(int argc, char *argv[])
 		}
 	}
 
+	add_default_options();
+	
 	if (optind >= argc) {
 		MSG(0, "\tError: Device not specified\n");
 		error_out(prog);
diff --git a/include/f2fs_fs.h b/include/f2fs_fs.h
index 19089e9..2f9d8c3 100644
--- a/include/f2fs_fs.h
+++ b/include/f2fs_fs.h
@@ -303,6 +303,11 @@ enum f2fs_config_func {
 	SLOAD,
 };
 
+enum default_set {
+	CONF_NONE = 0,
+	CONF_ANDROID,
+};
+
 struct device_info {
 	char *path;
 	int32_t fd;
@@ -361,6 +366,7 @@ struct f2fs_configuration {
 	void *private;
 	int dry_run;
 	int fix_on;
+	int defset;
 	int bug_on;
 	int auto_fix;
 	int preen_mode;
diff --git a/mkfs/f2fs_format_main.c b/mkfs/f2fs_format_main.c
index eb4f518..2a49c40 100644
--- a/mkfs/f2fs_format_main.c
+++ b/mkfs/f2fs_format_main.c
@@ -46,6 +46,7 @@ static void mkfs_usage()
 	MSG(0, "  -d debug level [default:0]\n");
 	MSG(0, "  -e [extension list] e.g. \"mp3,gif,mov\"\n");
 	MSG(0, "  -f force overwrite the exist filesystem\n");
+	MSG(0, "  -g add default options\n");
 	MSG(0, "  -l label\n");
 	MSG(0, "  -m support zoned block device [default:0]\n");
 	MSG(0, "  -o overprovision ratio [default:5]\n");
@@ -75,6 +76,9 @@ static void f2fs_show_info()
 	if (c.vol_label)
 		MSG(0, "Info: Label = %s\n", c.vol_label);
 	MSG(0, "Info: Trim is %s\n", c.trim ? "enabled": "disabled");
+
+	if (c.defset == CONF_ANDROID)
+		MSG(0, "Info: Set conf for android\n");
 }
 
 static void parse_feature(const char *features)
@@ -122,7 +126,7 @@ static void add_default_options()
 
 static void f2fs_parse_options(int argc, char *argv[])
 {
-	static const char *option_string = "qa:c:d:e:l:mo:O:R:s:S:z:t:fw:";
+	static const char *option_string = "qa:c:d:e:g:l:mo:O:R:s:S:z:t:fw:";
 	int32_t option=0;
 
 	while ((option = getopt(argc,argv,option_string)) != EOF) {
@@ -152,6 +156,10 @@ static void f2fs_parse_options(int argc, char *argv[])
 		case 'e':
 			c.extension_list = strdup(optarg);
 			break;
+		case 'g':
+			if (!strcmp(optarg, "android"))
+				c.defset = CONF_ANDROID;
+			break;
 		case 'l':		/*v: volume label */
 			if (strlen(optarg) > 512) {
 				MSG(0, "Error: Volume Label should be less than "
-- 
2.7.4

