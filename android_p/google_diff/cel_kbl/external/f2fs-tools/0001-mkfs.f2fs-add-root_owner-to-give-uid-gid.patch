From 5f76a1e6e21e609cf6218960f266d51f3e6b2169 Mon Sep 17 00:00:00 2001
From: Zhiwei Li <zhiwei.li@intel.com>
Date: Wed, 29 Aug 2018 13:28:19 +0800
Subject: [PATCH 1/3] mkfs.f2fs: add root_owner to give uid/gid

ported from f2fs-tools maintainer's git:
https://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs-tools.git/commit/?h=dev-test&id=1185ad58e068fa4c6701a9e7f81f83a246c18f4c

patch list:
https://android.intel.com/#/c/643565
https://android.intel.com/#/c/643566
https://android.intel.com/#/c/643567
https://android.intel.com/#/c/643585

Change-Id: Ia69ff3d1a2c8bd9d6bbf0115ba203ecc79848032
---
 include/f2fs_fs.h       | 27 +++++++++++++++++++++++++++
 lib/libf2fs.c           |  4 ++++
 man/mkfs.f2fs.8         |  8 ++++++++
 mkfs/f2fs_format.c      |  8 ++++----
 mkfs/f2fs_format_main.c |  6 +++++-
 5 files changed, 48 insertions(+), 5 deletions(-)

diff --git a/include/f2fs_fs.h b/include/f2fs_fs.h
index e800004..19089e9 100644
--- a/include/f2fs_fs.h
+++ b/include/f2fs_fs.h
@@ -12,6 +12,9 @@
 #ifndef __F2FS_FS_H__
 #define __F2FS_FS_H__
 
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
@@ -365,6 +368,11 @@ struct f2fs_configuration {
 	int preserve_limits;		/* preserve quota limits */
 	__le32 feature;			/* defined features */
 
+
+	/* mkfs parameters */
+	u_int32_t root_uid;
+	u_int32_t root_gid;
+
 	/* defragmentation parameters */
 	int defrag_shrink;
 	u_int64_t defrag_start;
@@ -1280,4 +1288,23 @@ static inline int is_qf_ino(struct f2fs_super_block *sb, nid_t ino)
 	return 0;
 }
 
+static inline int parse_root_owner(char *ids,
+			u_int32_t *root_uid, u_int32_t *root_gid)
+{
+	char *uid = ids;
+	char *gid = NULL;
+	unsigned long i;
+
+	/* uid:gid */
+	for (i = 0; i < strlen(ids) - 1; i++)
+		if (*(ids + i) == ':')
+			gid = ids + i + 1;
+	if (!gid)
+		return -1;
+
+	*root_uid = atoi(uid);
+	*root_gid = atoi(gid);
+	return 0;
+}
+
 #endif	/*__F2FS_FS_H */
diff --git a/lib/libf2fs.c b/lib/libf2fs.c
index 5ef0214..144a46f 100644
--- a/lib/libf2fs.c
+++ b/lib/libf2fs.c
@@ -628,6 +628,10 @@ void f2fs_init_configuration(void)
 	c.kd = -1;
 	c.dry_run = 0;
 	c.fixed_time = -1;
+
+	/* default root owner */
+	c.root_uid = getuid();
+	c.root_gid = getgid();
 }
 
 #ifdef HAVE_SETMNTENT
diff --git a/man/mkfs.f2fs.8 b/man/mkfs.f2fs.8
index 442c0ea..330233d 100644
--- a/man/mkfs.f2fs.8
+++ b/man/mkfs.f2fs.8
@@ -45,6 +45,10 @@ mkfs.f2fs \- create an F2FS file system
 .B \-q
 ]
 [
+.B \-R
+.I root_owner
+]
+[
 .B \-s
 .I #-of-segments-per-section
 ]
@@ -119,6 +123,10 @@ e.g "encrypt" and so on.
 Quiet mode.
 With it, mkfs.f2fs does not show any messages include the basic messages.
 .TP
+.BI \-R
+Give root_owner option for initial uid/gid assignment.
+Default is set by getuid()/getgid(), and assigned by "-R $uid:$gid".
+.TP
 .BI \-s " #-of-segments-per-section"
 Specify the number of segments per section. A section consists of
 multiple consecutive segments, and is the unit of garbage collection.
diff --git a/mkfs/f2fs_format.c b/mkfs/f2fs_format.c
index 09886b4..a000fb9 100644
--- a/mkfs/f2fs_format.c
+++ b/mkfs/f2fs_format.c
@@ -993,8 +993,8 @@ static int f2fs_write_root_inode(void)
 
 	raw_node->i.i_mode = cpu_to_le16(0x41ed);
 	raw_node->i.i_links = cpu_to_le32(2);
-	raw_node->i.i_uid = cpu_to_le32(getuid());
-	raw_node->i.i_gid = cpu_to_le32(getgid());
+	raw_node->i.i_uid = cpu_to_le32(c.root_uid);
+	raw_node->i.i_gid = cpu_to_le32(c.root_gid);
 
 	blk_size_bytes = 1 << get_sb(log_blocksize);
 	raw_node->i.i_size = cpu_to_le64(1 * blk_size_bytes); /* dentry */
@@ -1155,8 +1155,8 @@ static int f2fs_write_qf_inode(int qtype)
 
 	raw_node->i.i_mode = cpu_to_le16(0x8180);
 	raw_node->i.i_links = cpu_to_le32(1);
-	raw_node->i.i_uid = cpu_to_le32(getuid());
-	raw_node->i.i_gid = cpu_to_le32(getgid());
+	raw_node->i.i_uid = cpu_to_le32(c.root_uid);
+	raw_node->i.i_gid = cpu_to_le32(c.root_gid);
 
 	raw_node->i.i_size = cpu_to_le64(1024 * 6); /* Hard coded */
 	raw_node->i.i_blocks = cpu_to_le64(1 + QUOTA_DATA(qtype));
diff --git a/mkfs/f2fs_format_main.c b/mkfs/f2fs_format_main.c
index 36228d5..39eff5e 100644
--- a/mkfs/f2fs_format_main.c
+++ b/mkfs/f2fs_format_main.c
@@ -105,7 +105,7 @@ static void parse_feature(const char *features)
 
 static void f2fs_parse_options(int argc, char *argv[])
 {
-	static const char *option_string = "qa:c:d:e:l:mo:O:s:S:z:t:fw:";
+	static const char *option_string = "qa:c:d:e:l:mo:O:R:s:S:z:t:fw:";
 	int32_t option=0;
 
 	while ((option = getopt(argc,argv,option_string)) != EOF) {
@@ -152,6 +152,10 @@ static void f2fs_parse_options(int argc, char *argv[])
 		case 'O':
 			parse_feature(optarg);
 			break;
+		case 'R':
+			if (parse_root_owner(optarg, &c.root_uid, &c.root_gid))
+				mkfs_usage();
+			break;
 		case 's':
 			c.segs_per_sec = atoi(optarg);
 			break;
-- 
2.7.4

