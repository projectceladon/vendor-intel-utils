From 0049a13241bc5247307d0c954b1a382f62e26fb1 Mon Sep 17 00:00:00 2001
From: Yue, VincentX <vincentx.yue@intel.com>
Date: Tue, 20 Mar 2018 19:10:28 +0800
Subject: [PATCH] Add support call disconnect cause DisconnectCause.REJECTED in HFPClient

When a phone call disconnected by the user rejected, make sure that it
goes into the rejective call log rather than the missing call log.

Change-Id: Id252ef4432b3bc80e1c9b25185732d310a413846
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-59481
Signed-off-by: Yue, VincentX <vincentx.yue@intel.com>
---

diff --git a/src/com/android/bluetooth/hfpclient/connserv/HfpClientConnection.java b/src/com/android/bluetooth/hfpclient/connserv/HfpClientConnection.java
index 0aca701..03706db 100644
--- a/src/com/android/bluetooth/hfpclient/connserv/HfpClientConnection.java
+++ b/src/com/android/bluetooth/hfpclient/connserv/HfpClientConnection.java
@@ -44,6 +44,7 @@
     private boolean mLocalDisconnect;
     private boolean mClientHasEcc;
     private boolean mAdded;
+    private boolean mReject;
 
     // Constructor to be used when there's an existing call (such as that created on the AG or
     // when connection happens and we see calls for the first time).
@@ -165,7 +166,11 @@
             case BluetoothHeadsetClientCall.CALL_STATE_TERMINATED:
                 if (mPreviousCallState == BluetoothHeadsetClientCall.CALL_STATE_INCOMING
                         || mPreviousCallState == BluetoothHeadsetClientCall.CALL_STATE_WAITING) {
-                    close(DisconnectCause.MISSED);
+                    if (mReject) {
+                        close(DisconnectCause.REJECTED);
+                    } else {
+                        close(DisconnectCause.MISSED);
+                    }
                 } else if (mLocalDisconnect) {
                     close(DisconnectCause.LOCAL);
                 } else {
@@ -274,6 +279,7 @@
             Log.d(TAG, "onReject " + mCurrentCall);
         }
         if (!mClosed) {
+            mReject = true;
             mHeadsetProfile.rejectCall(mDevice);
         }
     }
