From d45d84fc6fe95ff800287e75195315ff355ae1e4 Mon Sep 17 00:00:00 2001
From: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Date: Wed, 9 Oct 2019 08:31:37 +0530
Subject: [PATCH] Add support for external camera

Tracked-On:
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Signed-off-by: Nikumbh, Mayur NimbaX <mayur.nimbax.nikumbh@intel.com>
---
 src/com/android/camera/PermissionsActivity.java           | 4 ++--
 src/com/android/camera/VideoModule.java                   | 8 +++++++-
 src/com/android/camera/one/CameraDirectionProvider.java   | 1 +
 .../camera/one/config/OneCameraFeatureConfigCreator.java  | 1 +
 .../camera/one/v2/Camera2OneCameraManagerImpl.java        | 7 ++++++-
 .../camera/one/v2/OneCameraCharacteristicsImpl.java       | 3 ++-
 .../processing/imagebackend/TaskCompressImageToJpeg.java  | 8 +++++++-
 src/com/android/camera/settings/SettingsManager.java      | 1 +
 8 files changed, 27 insertions(+), 6 deletions(-)

diff --git a/src/com/android/camera/PermissionsActivity.java b/src/com/android/camera/PermissionsActivity.java
index 3fda04abb..765b1406b 100644
--- a/src/com/android/camera/PermissionsActivity.java
+++ b/src/com/android/camera/PermissionsActivity.java
@@ -113,7 +113,7 @@ public class PermissionsActivity extends QuickActivity {
             mFlagHasMicrophonePermission = true;
         }
 
-        if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
+        if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)
                 != PackageManager.PERMISSION_GRANTED) {
             mNumPermissionsToRequest++;
             mShouldRequestStoragePermission = true;
@@ -156,7 +156,7 @@ public class PermissionsActivity extends QuickActivity {
             permissionsRequestIndex++;
         }
         if (mShouldRequestStoragePermission) {
-            permissionsToRequest[permissionsRequestIndex] = Manifest.permission.READ_EXTERNAL_STORAGE;
+            permissionsToRequest[permissionsRequestIndex] = Manifest.permission.WRITE_EXTERNAL_STORAGE;
             mIndexPermissionRequestStorage = permissionsRequestIndex;
             permissionsRequestIndex++;
         }
diff --git a/src/com/android/camera/VideoModule.java b/src/com/android/camera/VideoModule.java
index e8222f6d3..b47e4055d 100644
--- a/src/com/android/camera/VideoModule.java
+++ b/src/com/android/camera/VideoModule.java
@@ -1143,7 +1143,13 @@ public class VideoModule extends CameraModule
         mMediaRecorder.setCamera(camera);
         mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.CAMCORDER);
         mMediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);
-        mMediaRecorder.setProfile(mProfile);
+//        mMediaRecorder.setProfile(mProfile);
+        mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
+
+        mMediaRecorder.setVideoEncodingBitRate(10000000);
+        mMediaRecorder.setVideoFrameRate(30);
+        mMediaRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.H264);
+        mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);
         mMediaRecorder.setVideoSize(mProfile.videoFrameWidth, mProfile.videoFrameHeight);
         mMediaRecorder.setMaxDuration(mMaxVideoDurationInMs);
 
diff --git a/src/com/android/camera/one/CameraDirectionProvider.java b/src/com/android/camera/one/CameraDirectionProvider.java
index e8112aa76..1be45ebc2 100644
--- a/src/com/android/camera/one/CameraDirectionProvider.java
+++ b/src/com/android/camera/one/CameraDirectionProvider.java
@@ -32,6 +32,7 @@ public class CameraDirectionProvider {
     public OneCamera.Facing getDirection() {
         switch (mCharacteristics.get(CameraCharacteristics.LENS_FACING)) {
             case CameraMetadata.LENS_FACING_BACK:
+            case CameraMetadata.LENS_FACING_EXTERNAL:
                 return OneCamera.Facing.BACK;
             case CameraMetadata.LENS_FACING_FRONT:
                 return OneCamera.Facing.FRONT;
diff --git a/src/com/android/camera/one/config/OneCameraFeatureConfigCreator.java b/src/com/android/camera/one/config/OneCameraFeatureConfigCreator.java
index dc7f9003f..2d2dff9b6 100644
--- a/src/com/android/camera/one/config/OneCameraFeatureConfigCreator.java
+++ b/src/com/android/camera/one/config/OneCameraFeatureConfigCreator.java
@@ -165,6 +165,7 @@ public class OneCameraFeatureConfigCreator {
         }
 
         switch (facing) {
+            case CameraCharacteristics.LENS_FACING_EXTERNAL:
             case CameraCharacteristics.LENS_FACING_BACK: {
                 int override = GservicesHelper.getCaptureSupportLevelOverrideBack(contentResolver);
                 return CaptureSupportLevel.fromFlag(override);
diff --git a/src/com/android/camera/one/v2/Camera2OneCameraManagerImpl.java b/src/com/android/camera/one/v2/Camera2OneCameraManagerImpl.java
index a4b5a9b1d..98dad443f 100644
--- a/src/com/android/camera/one/v2/Camera2OneCameraManagerImpl.java
+++ b/src/com/android/camera/one/v2/Camera2OneCameraManagerImpl.java
@@ -135,6 +135,9 @@ public class Camera2OneCameraManagerImpl implements OneCameraManager {
         String cameraId = findFirstCameraIdFacing(CameraCharacteristics.LENS_FACING_BACK);
         if (cameraId == null) {
             Log.w(TAG, "No back-facing camera found.");
+            cameraId = findFirstCameraIdFacing(CameraCharacteristics.LENS_FACING_EXTERNAL);
+            if (cameraId == null)
+                Log.w(TAG, "No external-facing camera found.");
         }
         return cameraId;
     }
@@ -145,6 +148,8 @@ public class Camera2OneCameraManagerImpl implements OneCameraManager {
         String cameraId = findFirstCameraIdFacing(CameraCharacteristics.LENS_FACING_FRONT);
         if (cameraId == null) {
             Log.w(TAG, "No front-facing camera found.");
+            cameraId = findFirstCameraIdFacing(CameraCharacteristics.LENS_FACING_EXTERNAL);
+            Log.w(TAG, "found External-facing camera with ID: " + cameraId);
         }
         return cameraId;
     }
@@ -167,4 +172,4 @@ public class Camera2OneCameraManagerImpl implements OneCameraManager {
         return null;
     }
 
-}
\ No newline at end of file
+}
diff --git a/src/com/android/camera/one/v2/OneCameraCharacteristicsImpl.java b/src/com/android/camera/one/v2/OneCameraCharacteristicsImpl.java
index f7a2b7e17..7bd7ab064 100644
--- a/src/com/android/camera/one/v2/OneCameraCharacteristicsImpl.java
+++ b/src/com/android/camera/one/v2/OneCameraCharacteristicsImpl.java
@@ -101,7 +101,8 @@ public class OneCameraCharacteristicsImpl implements OneCameraCharacteristics {
     @Override
     public OneCamera.Facing getCameraDirection() {
         int direction = mCameraCharacteristics.get(CameraCharacteristics.LENS_FACING);
-        if (direction == CameraCharacteristics.LENS_FACING_BACK) {
+        if (direction == CameraCharacteristics.LENS_FACING_BACK ||
+               direction == CameraCharacteristics.LENS_FACING_EXTERNAL) {
             return OneCamera.Facing.BACK;
         } else {
             return OneCamera.Facing.FRONT;
diff --git a/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java b/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java
index 2e5976c46..0d08b9c8d 100644
--- a/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java
+++ b/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java
@@ -420,7 +420,13 @@ public class TaskCompressImageToJpeg extends TaskJpegEncode {
      * @return Quality level to use for JPEG compression.
      */
     protected int getJpegCompressionQuality () {
-        return CameraProfile.getJpegEncodingQualityParameter(CameraProfile.QUALITY_HIGH);
+        /* Media framework only didn't support query EXTERNAL camera quality,
+         * it will return the BACK facing camera's quality, set it as 90 as WA
+         */
+        int quality = CameraProfile.getJpegEncodingQualityParameter(CameraProfile.QUALITY_HIGH);
+        if (quality == 0)
+            return 90;
+        return quality;
     }
 
     /**
diff --git a/src/com/android/camera/settings/SettingsManager.java b/src/com/android/camera/settings/SettingsManager.java
index c5c494ea8..b591293d5 100644
--- a/src/com/android/camera/settings/SettingsManager.java
+++ b/src/com/android/camera/settings/SettingsManager.java
@@ -157,6 +157,7 @@ public class SettingsManager {
     }
 
     public static String getCameraSettingScope(String cameraIdValue) {
+        cameraIdValue = String.valueOf(0);
         return CAMERA_SCOPE_PREFIX + cameraIdValue;
     }
 
-- 
2.17.1

