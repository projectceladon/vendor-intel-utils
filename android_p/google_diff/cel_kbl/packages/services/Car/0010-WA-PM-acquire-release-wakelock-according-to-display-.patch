From 3e476223465ef7b4df307181391281e31252c4f9 Mon Sep 17 00:00:00 2001
From: "Chen, Hu" <hu1.chen@intel.com>
Date: Wed, 5 Jun 2019 09:38:36 +0800
Subject: [PATCH] [WA] PM: acquire/release wakelock according to display state

It's a bit tricky to run Android.Car on NUC/PC because they don't have
IOC. Now we rely on libsuspend not CarService to suspend the system,
just like smartphone. However, if CarService holds any wakelock, it will
block libsusepnd.

Our WA (may become a formal solution in future) is as below:
When the AOSP get the KEY_POWER event, it turns off the display.
CarService is notified with the display state change and acquire/release
its wakelocks according to display state.

Know issue: CarService is not notified when the display become on
(resume from S3).

Tracked-On: OAM-81137
Signed-off-by: Chen, Hu <hu1.chen@intel.com>
---
 service/src/com/android/car/CarPowerManagementService.java | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/service/src/com/android/car/CarPowerManagementService.java b/service/src/com/android/car/CarPowerManagementService.java
index 57ccf622..e2582556 100644
--- a/service/src/com/android/car/CarPowerManagementService.java
+++ b/service/src/com/android/car/CarPowerManagementService.java
@@ -604,7 +604,12 @@ public class CarPowerManagementService extends ICarPower.Stub implements CarServ
     }
 
     private void doHandleMainDisplayStateChange(boolean on) {
-        Log.w(CarLog.TAG_POWER, "Unimplemented:  doHandleMainDisplayStateChange() - on = " + on);
+        Log.i(CarLog.TAG_POWER, "doHandleMainDisplayStateChange() - on = " + on);
+        if (on) {
+            mSystemInterface.switchToFullWakeLock();
+        } else {
+            mSystemInterface.releaseAllWakeLocks();
+        }
     }
 
     public void handleMainDisplayChanged(boolean on) {
-- 
2.21.0

