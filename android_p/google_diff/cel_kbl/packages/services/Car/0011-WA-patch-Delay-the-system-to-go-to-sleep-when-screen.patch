From a21c4cf6d570933ea45cb98f89760f01d92765f0 Mon Sep 17 00:00:00 2001
From: Ting Li <ting.li@intel.com>
Date: Thu, 11 Jul 2019 09:47:22 +0800
Subject: [PATCH] [WA patch]Delay the system to go to sleep when screen off

Some CTS tests need turn off the screen via send KEY code SLEEP,
but because of the NUC don't support doze mode, receive SLEEP KEY
will cause the system to go to sleep immediately and make the test fail.
So, add a 30 seconds wakelock to delay the system to go to sleep when screen off
for these CTS tests.

Tracked-On:
Signed-off-by: Ting Li <ting.li@intel.com>
---
 .../com/android/car/CarPowerManagementService.java |  2 ++
 .../car/systeminterface/DisplayInterface.java      |  1 +
 .../car/systeminterface/SystemInterface.java       | 10 ++++++++++
 .../car/systeminterface/WakeLockInterface.java     | 22 ++++++++++++++++++++++
 4 files changed, 35 insertions(+)

diff --git a/service/src/com/android/car/CarPowerManagementService.java b/service/src/com/android/car/CarPowerManagementService.java
index e258255..25174cc 100644
--- a/service/src/com/android/car/CarPowerManagementService.java
+++ b/service/src/com/android/car/CarPowerManagementService.java
@@ -607,7 +607,9 @@ public class CarPowerManagementService extends ICarPower.Stub implements CarServ
         Log.i(CarLog.TAG_POWER, "doHandleMainDisplayStateChange() - on = " + on);
         if (on) {
             mSystemInterface.switchToFullWakeLock();
+            mSystemInterface.releaseDealySleepWakeLockIfNeeded();
         } else {
+            mSystemInterface.acquireDelaySleepWakeLock();
             mSystemInterface.releaseAllWakeLocks();
         }
     }
diff --git a/service/src/com/android/car/systeminterface/DisplayInterface.java b/service/src/com/android/car/systeminterface/DisplayInterface.java
index 3a7fc68..ba12a81 100644
--- a/service/src/com/android/car/systeminterface/DisplayInterface.java
+++ b/service/src/com/android/car/systeminterface/DisplayInterface.java
@@ -109,6 +109,7 @@ public interface DisplayInterface {
                     return;
                 }
                 service = mService;
+                mDisplayStateSet = isOn;
             }
             service.handleMainDisplayChanged(isOn);
         }
diff --git a/service/src/com/android/car/systeminterface/SystemInterface.java b/service/src/com/android/car/systeminterface/SystemInterface.java
index b508988..ef5e5db 100644
--- a/service/src/com/android/car/systeminterface/SystemInterface.java
+++ b/service/src/com/android/car/systeminterface/SystemInterface.java
@@ -88,6 +88,16 @@ public final class SystemInterface implements DisplayInterface, IOInterface,
     }
 
     @Override
+    public void acquireDelaySleepWakeLock() {
+        mWakeLockInterface.acquireDelaySleepWakeLock();
+    }
+
+    @Override
+    public void releaseDealySleepWakeLockIfNeeded() {
+        mWakeLockInterface.releaseDealySleepWakeLockIfNeeded();
+    }
+
+    @Override
     public long getUptime() {
         return mTimeInterface.getUptime();
     }
diff --git a/service/src/com/android/car/systeminterface/WakeLockInterface.java b/service/src/com/android/car/systeminterface/WakeLockInterface.java
index 771d625..f358eb8 100644
--- a/service/src/com/android/car/systeminterface/WakeLockInterface.java
+++ b/service/src/com/android/car/systeminterface/WakeLockInterface.java
@@ -28,10 +28,15 @@ public interface WakeLockInterface {
     void releaseAllWakeLocks();
     void switchToPartialWakeLock();
     void switchToFullWakeLock();
+    void acquireDelaySleepWakeLock();
+    void releaseDealySleepWakeLockIfNeeded();
 
     class DefaultImpl implements WakeLockInterface {
         private final WakeLock mPartialWakeLock;
         private final WakeLock mFullWakeLock;
+        private static final long DELAY_SLEEP_TIME = 30 * 1000;
+        private final WakeLock mDelaySleepWakeLock;
+
 
         DefaultImpl(Context context) {
             PowerManager powerManager =
@@ -40,6 +45,8 @@ public interface WakeLockInterface {
                 CarLog.TAG_POWER);
             mPartialWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
                 CarLog.TAG_POWER);
+            mDelaySleepWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
+                "DelaySleepWakeLock");
         }
 
         @Override
@@ -71,5 +78,20 @@ public interface WakeLockInterface {
                 mFullWakeLock.release();
             }
         }
+
+        @Override
+        public void acquireDelaySleepWakeLock() {
+            if (mDelaySleepWakeLock.isHeld()) {
+                mDelaySleepWakeLock.release();
+            }
+            mDelaySleepWakeLock.acquire(DELAY_SLEEP_TIME);
+        }
+
+        @Override
+        public void releaseDealySleepWakeLockIfNeeded() {
+            if (mDelaySleepWakeLock.isHeld()) {
+                mDelaySleepWakeLock.release();
+            }
+        }
     }
 }
-- 
1.9.1

