From a489755626345fddaef6916e127ff96c5934721a Mon Sep 17 00:00:00 2001
From: Ming Tan <ming.tan@intel.com>
Date: Wed, 1 Nov 2017 16:33:57 +0800
Subject: [PATCH 1/4] If can't find lifecycle var, set the provisioning mode to
 false.

The old code will set to true, and cause the device state to unlock.
If the device status is unlocked, kernelflinger will show a warning
page with error code 3.
But in some hardware platform which does not support fastboot, then
the device state can't change from unlock to locked, then the warning
page will always shown.
Set the provisioning mode to false will cause the device state to locked
in such case.

Jira: None.
Test: Test it in SKL NUC, can boot to UI without kernelflinger error
code 3.

Change-Id: I00fc2fa23595ed5c1a112b4b9528e63fe737e7ae
Signed-off-by: tanminger <ming.tan@intel.com>
---
 libkernelflinger/vars.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/libkernelflinger/vars.c b/libkernelflinger/vars.c
index 19433b7..44e82af 100644
--- a/libkernelflinger/vars.c
+++ b/libkernelflinger/vars.c
@@ -279,8 +279,8 @@ enum device_state get_current_state()
 			ret = life_cycle_is_enduser(&enduser);
 			if (EFI_ERROR(ret)) {
 				if (ret == EFI_NOT_FOUND) {
-					debug(L"OEMLock not set, device is in provisioning mode");
-					set_provisioning_mode(TRUE);
+					debug(L"OEMLock not set, device is not in provisioning mode");
+					set_provisioning_mode(FALSE);
 				}
 				goto exit;
 			}
-- 
1.9.1

