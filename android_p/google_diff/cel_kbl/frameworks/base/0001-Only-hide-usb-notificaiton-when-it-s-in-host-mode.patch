From 3aaf3707ddc8fe161d41e1d4f0e927806e72e5cc Mon Sep 17 00:00:00 2001
From: "Yan, WalterX" <walterx.yan@intel.com>
Date: Fri, 27 Oct 2017 15:44:01 +0800
Subject: [PATCH 16/21] Only hide usb notificaiton when it's in host mode.

For the devices have female usb interface and some usb
devices plugged-in, e.g. mouse, keyboard, the usb notification
will be hidden incorrectly while connecting as a client.

To scan the usb devices only when it's in host mode.

Change-Id: I1c648f597fa7154d1a44b40ff831652730e819cd
Tracked-On:https://jira01.devtools.intel.com/browse/OAM-58562
Signed-off-by: Yan, WalterX <walterx.yan@intel.com>
---
 .../com/android/server/usb/UsbDeviceManager.java   | 36 ++++++++++++----------
 1 file changed, 19 insertions(+), 17 deletions(-)

diff --git a/services/usb/java/com/android/server/usb/UsbDeviceManager.java b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
index 7437332..4961857 100644
--- a/services/usb/java/com/android/server/usb/UsbDeviceManager.java
+++ b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
@@ -947,23 +947,25 @@ public class UsbDeviceManager {
                     }
 
                     mHideUsbNotification = false;
-                    while (devices.hasNext()) {
-                        Map.Entry pair = (Map.Entry) devices.next();
-                        if (DEBUG) {
-                            Slog.i(TAG, pair.getKey() + " = " + pair.getValue());
-                        }
-                        UsbDevice device = (UsbDevice) pair.getValue();
-                        int configurationCount = device.getConfigurationCount() - 1;
-                        while (configurationCount >= 0) {
-                            UsbConfiguration config = device.getConfiguration(configurationCount);
-                            configurationCount--;
-                            int interfaceCount = config.getInterfaceCount() - 1;
-                            while (interfaceCount >= 0) {
-                                UsbInterface intrface = config.getInterface(interfaceCount);
-                                interfaceCount--;
-                                if (sBlackListedInterfaces.contains(intrface.getInterfaceClass())) {
-                                    mHideUsbNotification = true;
-                                    break;
+                    if (mHostConnected) {
+                        while (devices.hasNext()) {
+                            Map.Entry pair = (Map.Entry) devices.next();
+                            if (DEBUG) {
+                                Slog.i(TAG, pair.getKey() + " = " + pair.getValue());
+                            }
+                            UsbDevice device = (UsbDevice) pair.getValue();
+                            int configurationCount = device.getConfigurationCount() - 1;
+                            while (configurationCount >= 0) {
+                                UsbConfiguration config = device.getConfiguration(configurationCount);
+                                configurationCount--;
+                                int interfaceCount = config.getInterfaceCount() - 1;
+                                while (interfaceCount >= 0) {
+                                    UsbInterface intrface = config.getInterface(interfaceCount);
+                                    interfaceCount--;
+                                    if (sBlackListedInterfaces.contains(intrface.getInterfaceClass())) {
+                                        mHideUsbNotification = true;
+                                        break;
+                                    }
                                 }
                             }
                         }
-- 
1.9.1

