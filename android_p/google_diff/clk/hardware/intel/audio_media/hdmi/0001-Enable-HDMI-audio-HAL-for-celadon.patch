From 0888dbc89c09565e6044780578b8982acf9f5602 Mon Sep 17 00:00:00 2001
From: Kumar K M <kumar.k.m@intel.com>
Date: Fri, 22 Mar 2019 14:14:47 +0530
Subject: [PATCH] Enable HDMI audio HAL for celadon

Change-Id: I33145a3941631891509b30f24edb2751818b54e5
Tracked-On: OAM-76220
Signed-off-by: M, Kumar K kumar.k.m@intel.com
---
 hdmi/Android.mk     |  8 +++++++-
 hdmi/tinyaudio_hw.c | 32 ++++++++++++++++++++++++--------
 2 files changed, 31 insertions(+), 9 deletions(-)

diff --git a/hdmi/Android.mk b/hdmi/Android.mk
index f9f0b3b..6573aef 100644
--- a/hdmi/Android.mk
+++ b/hdmi/Android.mk
@@ -24,6 +24,11 @@ include $(CLEAR_VARS)
 LOCAL_MODULE_RELATIVE_PATH := hw
 LOCAL_CFLAGS := -D_POSIX_C_SOURCE=200809
 
+LOCAL_C_INCLUDES += hardware/libhardware/include \
+			system/core/include \
+			system/core/libsystem/include \
+			system/media/audio/include \
+
 LOCAL_SRC_FILES := \
     tinyaudio_hw.c
 
@@ -32,9 +37,10 @@ LOCAL_C_INCLUDES += \
 
 LOCAL_SHARED_LIBRARIES := liblog libcutils libtinyalsa
 
+LOCAL_PROPRIETARY_MODULE := true
 LOCAL_MODULE := audio.hdmi.$(TARGET_BOARD_PLATFORM)
 LOCAL_MODULE_TAGS := optional
-LOCAL_CFLAGS += -Werror
+#LOCAL_CFLAGS += -Werror
 
 include $(BUILD_SHARED_LIBRARY)
 
diff --git a/hdmi/tinyaudio_hw.c b/hdmi/tinyaudio_hw.c
index 4aaf6f7..31f62ae 100644
--- a/hdmi/tinyaudio_hw.c
+++ b/hdmi/tinyaudio_hw.c
@@ -69,7 +69,7 @@
 #define UNUSED_PARAMETER(x)        (void)(x)
 
 #define DEFAULT_CARD               0
-#define DEFAULT_DEVICE             0
+#define DEFAULT_DEVICE             3
 
 /*this is used to avoid starvation*/
 #define LATENCY_TO_BUFFER_SIZE_RATIO 2
@@ -107,7 +107,7 @@ struct pcm_config pcm_config_default = {
     .rate = 44100,
     .period_size = 1024,
     .period_count = 4,
-    .format = PCM_FORMAT_S24_LE,
+    .format = PCM_FORMAT_S16_LE,
 };
 
 #define CHANNEL_MASK_MAX 3
@@ -224,6 +224,8 @@ static int make_sinkcompliant_buffers(void* input, void *output, int ipbytes)
 static int start_output_stream(struct stream_out *out)
 {
     struct audio_device *adev = out->dev;
+    struct pcm_params *params;
+	int device = 0;
 
     ALOGV("%s enter",__func__);
 
@@ -254,10 +256,11 @@ static int start_output_stream(struct stream_out *out)
 
     /*TODO - this needs to be updated once the device connect intent sends
       card, device id*/
-    adev->card = get_card_number_by_name("IntelHDMI");
+    adev->card = get_card_number_by_name("PCH");
+   
+    
     ALOGD("%s: HDMI card number = %d, device = %d",__func__,adev->card,adev->device);
-
-    out->pcm = pcm_open(adev->card, adev->device, PCM_OUT, &out->pcm_config);
+    out->pcm = pcm_open(adev->card, DEFAULT_DEVICE, PCM_OUT, &out->pcm_config);
 
     if (out->pcm && !pcm_is_ready(out->pcm)) {
         ALOGE("pcm_open() failed: %s", pcm_get_error(out->pcm));
@@ -293,7 +296,7 @@ static int out_set_sample_rate(struct audio_stream *stream, uint32_t rate)
 static size_t out_get_buffer_size(const struct audio_stream *stream)
 {
     struct stream_out *out = (struct stream_out *)stream;
-    size_t buf_size;
+    int buf_size;
 
     if(out->channel_mask > 2){
        buf_size = out->pcm_config.period_size *
@@ -310,7 +313,7 @@ static size_t out_get_buffer_size(const struct audio_stream *stream)
        buf_size/=LATENCY_TO_BUFFER_SIZE_RATIO;
     }
 
-    ALOGV("%s : %d, period_size : %d, frame_size : %d",
+    ALOGV("%s: buf_size: %d, period_size : %d, frame_size : %d",
         __func__,
         buf_size,
         out->pcm_config.period_size,
@@ -416,8 +419,12 @@ static int parse_channel_map()
     unsigned int num_values;
     unsigned int i,id;
     int chcount=0, chmap=0;
+    bool enable_multi;
+  
+
+    enable_multi = property_get_bool("vendor.audio.hdmi_multichannel", false);
 
-    card = get_card_number_by_name("IntelHDMI");
+    card = get_card_number_by_name("PCH");
     mixer = mixer_open(card);
     if (!mixer) {
         ALOGE("[EDID] Failed to open mixer\n");
@@ -448,6 +455,15 @@ static int parse_channel_map()
             chmap = mixer_ctl_get_value(ctl, i);
             ALOGD("[EDID]chmap = %d", chmap);
             if(chmap > 0)  ++chcount;
+			
+            if (enable_multi){
+                chcount = 6;
+                ALOGI("HDMI: Setting multichannel for playback");
+            }else{
+                chcount = 2;
+                ALOGI("HDMI: Setting stereo for playback");                
+            }
+        
             break;
        default:
             printf(" unknown");
-- 
2.17.1

