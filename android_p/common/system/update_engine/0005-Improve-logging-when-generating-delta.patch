From 3ceae2836c92ee04fbaf5d684497ea2d2a53e8b9 Mon Sep 17 00:00:00 2001
From: Sen Jiang <senj@google.com>
Date: Thu, 12 Apr 2018 19:13:38 -0700
Subject: Improve logging when generating delta.

Measure the time took encoding each file, and added logging for
time and number of operations before and after FragmentOperations
and MergeOperations.

Bug: 77817425
Test: look at log
Change-Id: Idd087dfe29fb57a0ba667078efac08b2081e4e67

diff --git a/payload_generator/ab_generator.cc b/payload_generator/ab_generator.cc
index 089dfd9..962118e 100644
--- a/payload_generator/ab_generator.cc
+++ b/payload_generator/ab_generator.cc
@@ -57,6 +57,7 @@ bool ABGenerator::GenerateOperations(
                                                        blob_file));
   LOG(INFO) << "done reading " << new_part.name;
 
+  LOG(INFO) << "Fragmenting " << aops->size() << " operations.";
   TEST_AND_RETURN_FALSE(
       FragmentOperations(config.version, aops, new_part.path, blob_file));
   SortOperationsByDestination(aops);
@@ -69,8 +70,10 @@ bool ABGenerator::GenerateOperations(
     merge_chunk_blocks = hard_chunk_blocks;
   }
 
+  LOG(INFO) << "Merging " << aops->size() << " operations.";
   TEST_AND_RETURN_FALSE(MergeOperations(
       aops, config.version, merge_chunk_blocks, new_part.path, blob_file));
+  LOG(INFO) << aops->size() << " operations after merge.";
 
   if (config.version.minor >= kOpSrcHashMinorPayloadVersion)
     TEST_AND_RETURN_FALSE(AddSourceHash(aops, old_part.path));
diff --git a/payload_generator/delta_diff_utils.cc b/payload_generator/delta_diff_utils.cc
index 5329dbf..c0962bf 100644
--- a/payload_generator/delta_diff_utils.cc
+++ b/payload_generator/delta_diff_utils.cc
@@ -40,6 +40,7 @@
 #include <base/strings/string_util.h>
 #include <base/strings/stringprintf.h>
 #include <base/threading/simple_thread.h>
+#include <base/time/time.h>
 #include <brillo/data_encoding.h>
 #include <bsdiff/bsdiff.h>
 #include <bsdiff/patch_writer_factory.h>
@@ -243,9 +244,7 @@ class FileDeltaProcessor : public base::DelegateSimpleThread::Delegate {
 
 void FileDeltaProcessor::Run() {
   TEST_AND_RETURN(blob_file_ != nullptr);
-
-  LOG(INFO) << "Encoding file " << name_ << " (" << new_extents_blocks_
-            << " blocks)";
+  base::Time start = base::Time::Now();
 
   if (!DeltaReadFile(&file_aops_,
                      old_part_,
@@ -261,6 +260,10 @@ void FileDeltaProcessor::Run() {
     LOG(ERROR) << "Failed to generate delta for " << name_ << " ("
                << new_extents_blocks_ << " blocks)";
   }
+
+  LOG(INFO) << "Encoded file " << name_ << " (" << new_extents_blocks_
+            << " blocks) in " << (base::Time::Now() - start).InSecondsF()
+            << " seconds.";
 }
 
 void FileDeltaProcessor::MergeOperation(vector<AnnotatedOperation>* aops) {
