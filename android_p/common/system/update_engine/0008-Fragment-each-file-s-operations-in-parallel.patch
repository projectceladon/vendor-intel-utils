From 3808353b7e242c9d12096292a0531ac4256634b7 Mon Sep 17 00:00:00 2001
From: Sen Jiang <senj@google.com>
Date: Tue, 17 Apr 2018 16:20:11 -0700
Subject: Fragment each file's operations in parallel.

FragmentOperations() can take a long time if we have many replace
operations, but it doesn't have dependencies on other operations,
so it's safe to parallelize it.

Bug: 77817425
Test: generated a delta payload exactly the same as before
Change-Id: Idb62667df167108bd27bee859e2976931baa4326

diff --git a/payload_generator/ab_generator.cc b/payload_generator/ab_generator.cc
index 962118e..f24f6c3 100644
--- a/payload_generator/ab_generator.cc
+++ b/payload_generator/ab_generator.cc
@@ -57,9 +57,6 @@ bool ABGenerator::GenerateOperations(
                                                        blob_file));
   LOG(INFO) << "done reading " << new_part.name;
 
-  LOG(INFO) << "Fragmenting " << aops->size() << " operations.";
-  TEST_AND_RETURN_FALSE(
-      FragmentOperations(config.version, aops, new_part.path, blob_file));
   SortOperationsByDestination(aops);
 
   // Use the soft_chunk_size when merging operations to prevent merging all
diff --git a/payload_generator/delta_diff_utils.cc b/payload_generator/delta_diff_utils.cc
index d8e32ec..340d8d6 100644
--- a/payload_generator/delta_diff_utils.cc
+++ b/payload_generator/delta_diff_utils.cc
@@ -49,6 +49,7 @@
 #include "update_engine/common/subprocess.h"
 #include "update_engine/common/utils.h"
 #include "update_engine/payload_consumer/payload_constants.h"
+#include "update_engine/payload_generator/ab_generator.h"
 #include "update_engine/payload_generator/block_mapping.h"
 #include "update_engine/payload_generator/bzip.h"
 #include "update_engine/payload_generator/deflate_utils.h"
@@ -274,6 +275,13 @@ void FileDeltaProcessor::Run() {
     }
   }
 
+  if (!version_.InplaceUpdate()) {
+    if (!ABGenerator::FragmentOperations(
+            version_, &file_aops_, new_part_, blob_file_)) {
+      LOG(ERROR) << "Failed to fragment operations for " << name_;
+    }
+  }
+
   LOG(INFO) << "Encoded file " << name_ << " (" << new_extents_blocks_
             << " blocks) in " << (base::Time::Now() - start).InSecondsF()
             << " seconds.";
