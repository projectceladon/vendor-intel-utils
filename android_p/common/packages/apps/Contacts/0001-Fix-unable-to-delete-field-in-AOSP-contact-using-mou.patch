From ca4e523690fa42a5fca3e34521a6e56ac6171876 Mon Sep 17 00:00:00 2001
From: "Yue, VincentX" <vincentx.yue@intel.com>
Date: Wed, 13 Dec 2017 09:55:06 +0800
Subject: [PATCH 2/2] Fix unable to delete field in AOSP contact using mouse

Due to ScrollBar will request fouce when the mouse near the ScrollBar,
but ScrollBar don't handle GenericMotion event. So, can be get the callback
through set generic motion listener on view delete.

Change-Id: I11f9f90d3fb01fabeb940ff0991f26588b7b3b57
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-53741
Signed-off-by: Yue, VincentX <vincentx.yue@intel.com>
---
 .../android/contacts/editor/LabeledEditorView.java | 29 ++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/src/com/android/contacts/editor/LabeledEditorView.java b/src/com/android/contacts/editor/LabeledEditorView.java
index 5712f39..e8427fe 100644
--- a/src/com/android/contacts/editor/LabeledEditorView.java
+++ b/src/com/android/contacts/editor/LabeledEditorView.java
@@ -29,6 +29,7 @@ import android.text.TextWatcher;
 import android.util.AttributeSet;
 import android.util.TypedValue;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
@@ -143,6 +144,34 @@ public abstract class LabeledEditorView extends LinearLayout implements Editor,
 
         mDelete = (ImageView) findViewById(R.id.delete_button);
         mDeleteContainer = findViewById(R.id.delete_button_container);
+        mDeleteContainer.setOnGenericMotionListener(new OnGenericMotionListener() {
+            @Override
+            public boolean onGenericMotion(View v, MotionEvent event) {
+                switch(event.getButtonState()) {
+                    case MotionEvent.BUTTON_PRIMARY:
+                        // defer removal of this button so that the pressed state is visible shortly
+                        new Handler().post(new Runnable() {
+                            @Override
+                            public void run() {
+                                // Don't do anything if the view is no longer attached to the window
+                                // (This check is needed because when this {@link Runnable} is executed,
+                                // we can't guarantee the view is still valid.
+                                if (!mIsAttachedToWindow) {
+                                    return;
+                                }
+                                // Send the delete request to the listener (which will in turn call
+                                // deleteEditor() on this view if the deletion is valid - i.e. this is not
+                                // the last {@link Editor} in the section).
+                                if (mListener != null) {
+                                    mListener.onDeleteRequested(LabeledEditorView.this);
+                                }
+                            }
+                        });
+                        break;
+                    }
+                return  true;
+                }
+            });
         mDeleteContainer.setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View v) {
-- 
1.9.1

