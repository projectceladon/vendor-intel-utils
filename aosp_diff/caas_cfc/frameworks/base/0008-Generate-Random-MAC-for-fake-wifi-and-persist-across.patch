From 79aa61b4ea009ce8c55cc2ceaf82a141a2b7dcec Mon Sep 17 00:00:00 2001
From: Aiswarya Cyriac <aiswarya.cyriac@intel.com>
Date: Mon, 20 Dec 2021 14:09:15 +0530
Subject: [PATCH] Generate Random MAC for fake wifi and persist across boots

A random MAC will be generated during first boot and it will
be stored in a persist system property. For subsequent boots
this property is read to retrieve the value stored in first boot

Tracked-On: OAM-100226
Signed-off-by: Aiswarya Cyriac <aiswarya.cyriac@intel.com>
---
 packages/SettingsLib/Android.bp               | 10 ++++
 .../android/sysprop/FakeWifiProps.sysprop     | 10 ++++
 .../SettingsLib/api/FakeWifiProps-current.txt |  9 ++++
 .../SettingsLib/api/FakeWifiProps-latest.txt  |  0
 ...actWifiMacAddressPreferenceController.java | 47 +++++++++++++++----
 5 files changed, 67 insertions(+), 9 deletions(-)
 create mode 100644 packages/SettingsLib/android/sysprop/FakeWifiProps.sysprop
 create mode 100644 packages/SettingsLib/api/FakeWifiProps-current.txt
 create mode 100644 packages/SettingsLib/api/FakeWifiProps-latest.txt

diff --git a/packages/SettingsLib/Android.bp b/packages/SettingsLib/Android.bp
index 5afe2f3d2efc..fb785a1bfec3 100644
--- a/packages/SettingsLib/Android.bp
+++ b/packages/SettingsLib/Android.bp
@@ -8,6 +8,7 @@ android_library {
 
     // TODO(b/149540986): revert this change.
     static_libs: [
+        "FakeWifiProps",
          // All other dependent components should be put in
          // "SettingsLibDependenciesWithoutWifiTracker".
         "WifiTrackerLib",
@@ -58,6 +59,7 @@ java_defaults {
 java_defaults {
     name: "SettingsLibDefaults",
     static_libs: [
+        "FakeWifiProps",
         "androidx.annotation_annotation",
         "androidx.lifecycle_lifecycle-common",
         "androidx.legacy_legacy-support-v4",
@@ -69,3 +71,11 @@ java_defaults {
         "SettingsLib",
     ],
 }
+
+sysprop_library {
+    name: "FakeWifiProps",
+    api_packages: ["android.sysprop"],
+    srcs: ["android/sysprop/FakeWifiProps.sysprop"],
+    property_owner: "Platform",
+}
+
diff --git a/packages/SettingsLib/android/sysprop/FakeWifiProps.sysprop b/packages/SettingsLib/android/sysprop/FakeWifiProps.sysprop
new file mode 100644
index 000000000000..e8c0d82bc15a
--- /dev/null
+++ b/packages/SettingsLib/android/sysprop/FakeWifiProps.sysprop
@@ -0,0 +1,10 @@
+owner: Platform
+module: "android.sysprop.FakeWifiProps"
+prop {
+    api_name: "mac"
+    type: String
+    prop_name: "persist.wifi.fakewifi.mac"
+    scope: Public
+    access: ReadWrite
+}
+
diff --git a/packages/SettingsLib/api/FakeWifiProps-current.txt b/packages/SettingsLib/api/FakeWifiProps-current.txt
new file mode 100644
index 000000000000..4011bd6dec68
--- /dev/null
+++ b/packages/SettingsLib/api/FakeWifiProps-current.txt
@@ -0,0 +1,9 @@
+props {
+  module: "android.sysprop.FakeWifiProps"
+  prop {
+    api_name: "mac"
+    type: String
+    access: ReadWrite
+    prop_name: "persist.wifi.fakewifi.mac"
+  }
+}
diff --git a/packages/SettingsLib/api/FakeWifiProps-latest.txt b/packages/SettingsLib/api/FakeWifiProps-latest.txt
new file mode 100644
index 000000000000..e69de29bb2d1
diff --git a/packages/SettingsLib/src/com/android/settingslib/deviceinfo/AbstractWifiMacAddressPreferenceController.java b/packages/SettingsLib/src/com/android/settingslib/deviceinfo/AbstractWifiMacAddressPreferenceController.java
index b5f275b463f4..5fad45569ec7 100644
--- a/packages/SettingsLib/src/com/android/settingslib/deviceinfo/AbstractWifiMacAddressPreferenceController.java
+++ b/packages/SettingsLib/src/com/android/settingslib/deviceinfo/AbstractWifiMacAddressPreferenceController.java
@@ -20,6 +20,7 @@ import android.annotation.SuppressLint;
 import android.content.Context;
 import android.net.ConnectivityManager;
 import android.net.wifi.WifiManager;
+import android.sysprop.FakeWifiProps;
 import android.text.TextUtils;
 
 import androidx.annotation.VisibleForTesting;
@@ -28,6 +29,10 @@ import androidx.preference.PreferenceScreen;
 
 import com.android.settingslib.R;
 import com.android.settingslib.core.lifecycle.Lifecycle;
+import java.io.File;
+import java.util.Optional;
+import android.util.Log;
+import java.util.Random;
 
 /**
  * Preference controller for WIFI MAC address
@@ -79,20 +84,44 @@ public abstract class AbstractWifiMacAddressPreferenceController
     protected String[] getConnectivityIntents() {
         return CONNECTIVITY_INTENTS;
     }
+    private  String getRandomFakeWifiMacAddress() {
+        String mac = "";
+        Random r = new Random();
+        for (int i = 0; i < 6; i++) {
+            int n = r.nextInt(255);
+            mac += String.format("%02x", n);
+           if (i != 5)
+                mac += ':';
+        }
+        return mac.toUpperCase();
+    }
 
     @SuppressLint("HardwareIds")
     @Override
     protected void updateConnectivity() {
-        final String[] macAddresses = mWifiManager.getFactoryMacAddresses();
-        String macAddress = null;
-        if (macAddresses != null && macAddresses.length > 0) {
-            macAddress = macAddresses[0];
-        }
-
-        if (TextUtils.isEmpty(macAddress)) {
-            mWifiMacAddress.setSummary(R.string.status_unavailable);
+        final File f_wlan = new File("/sys/class/net/wlan0");
+        boolean status = false ;
+        if (f_wlan.exists()) {
+            status = true;
+            final String[] macAddresses = mWifiManager.getFactoryMacAddresses();
+            String macAddress = null;
+            if (macAddresses != null && macAddresses.length > 0) {
+                macAddress = macAddresses[0];
+            }
+            if (TextUtils.isEmpty(macAddress)) {
+                mWifiMacAddress.setSummary(R.string.status_unavailable);
+            } else {
+                mWifiMacAddress.setSummary(macAddress);
+            }
         } else {
-            mWifiMacAddress.setSummary(macAddress);
+            String mac = FakeWifiProps.mac().orElse(null);
+            if (mac == null) {
+                String randomMac = getRandomFakeWifiMacAddress();
+                FakeWifiProps.mac(randomMac);
+                mWifiMacAddress.setSummary(randomMac);
+            } else {
+                mWifiMacAddress.setSummary(mac);
+            }
         }
     }
 }
-- 
2.33.0

