From 2713d08ab434c8e16f6d7d1f15fc91efd7e8b119 Mon Sep 17 00:00:00 2001
From: gkdeepa <g.k.deepa@intel.com>
Date: Thu, 28 Oct 2021 13:41:35 +0530
Subject: [PATCH] framework logs and WA

Tracked-On:
---
 core/jni/android_hardware_Camera.cpp | 33 +++++++++++++++++++++++-----
 1 file changed, 28 insertions(+), 5 deletions(-)

diff --git a/core/jni/android_hardware_Camera.cpp b/core/jni/android_hardware_Camera.cpp
index bc69735d7453..d46c77396960 100644
--- a/core/jni/android_hardware_Camera.cpp
+++ b/core/jni/android_hardware_Camera.cpp
@@ -40,7 +40,7 @@ enum {
     // Keep up to date with Camera.java
     CAMERA_HAL_API_VERSION_NORMAL_CONNECT = -2,
 };
-
+int checkflag=0;
 struct fields_t {
     jfieldID    context;
     jfieldID    facing;
@@ -544,9 +544,14 @@ static void android_hardware_Camera_getCameraInfo(JNIEnv *env, jobject thiz,
         jniThrowRuntimeException(env, "Fail to get camera info");
         return;
     }
+    if(checkflag == 1){
+       if(cameraInfo.facing == 1) 
+        env->SetIntField(info_obj, fields.orientation, 270);
+    }
+    else{
+        env->SetIntField(info_obj, fields.orientation, cameraInfo.orientation);
+    }
     env->SetIntField(info_obj, fields.facing, cameraInfo.facing);
-    env->SetIntField(info_obj, fields.orientation, cameraInfo.orientation);
-
     char value[PROPERTY_VALUE_MAX];
     property_get("ro.camera.sound.forced", value, "0");
     jboolean canDisableShutterSound = (strncmp(value, "0", 2) == 0);
@@ -558,6 +563,7 @@ static void android_hardware_Camera_getCameraInfo(JNIEnv *env, jobject thiz,
 static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
     jobject weak_this, jint cameraId, jint halVersion, jstring clientPackageName)
 {
+
     // Convert jstring to String16
     const char16_t *rawClientName = reinterpret_cast<const char16_t*>(
         env->GetStringChars(clientPackageName, NULL));
@@ -565,13 +571,25 @@ static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
     String16 clientName(rawClientName, rawClientNameLen);
     env->ReleaseStringChars(clientPackageName,
                             reinterpret_cast<const jchar*>(rawClientName));
+    checkflag=0;
+    //check app orientation 
+    const char *nativeString = env->GetStringUTFChars(clientPackageName, NULL);
+   // use your string
 
+    if (!strcmp(nativeString, "cn.eeo.classin")) 
+    {
+         //only set for classin app
+         checkflag =1;
+    }
+    env->ReleaseStringUTFChars(clientPackageName, nativeString);
     sp<Camera> camera;
     if (halVersion == CAMERA_HAL_API_VERSION_NORMAL_CONNECT) {
         // Default path: hal version is don't care, do normal camera connect.
+        ALOGE("connect Default path: ");
         camera = Camera::connect(cameraId, clientName,
                 Camera::USE_CALLING_UID, Camera::USE_CALLING_PID);
     } else {
+        ALOGE("connect Default path connectLegacy: ");
         jint status = Camera::connectLegacy(cameraId, halVersion, clientName,
                 Camera::USE_CALLING_UID, camera);
         if (status != NO_ERROR) {
@@ -580,6 +598,7 @@ static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
     }
 
     if (camera == NULL) {
+        ALOGE("camera is null");
         return -EACCES;
     }
 
@@ -603,7 +622,6 @@ static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
 
     // save context in opaque field
     env->SetLongField(thiz, fields.context, (jlong)context.get());
-
     // Update default display orientation in case the sensor is reverse-landscape
     CameraInfo cameraInfo;
     status_t rc = Camera::getCameraInfo(cameraId, &cameraInfo);
@@ -611,6 +629,12 @@ static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
         ALOGE("%s: getCameraInfo error: %d", __FUNCTION__, rc);
         return rc;
     }
+    if(checkflag == 1){
+      if(cameraInfo.facing == CAMERA_FACING_FRONT)
+         cameraInfo.orientation = 270;
+    } 
+    else 
+       cameraInfo.orientation = 0;
     int defaultOrientation = 0;
     switch (cameraInfo.orientation) {
         case 0:
@@ -633,7 +657,6 @@ static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
             break;
     }
     if (defaultOrientation != 0) {
-        ALOGV("Setting default display orientation to %d", defaultOrientation);
         rc = camera->sendCommand(CAMERA_CMD_SET_DISPLAY_ORIENTATION,
                 defaultOrientation, 0);
         if (rc != NO_ERROR) {
-- 
2.17.1

