From 63019f441791038443629a14aa95950005a56152 Mon Sep 17 00:00:00 2001
From: bxu10x <bingx.xu@intel.com>
Date: Thu, 24 Dec 2020 14:20:23 +0800
Subject: [PATCH 1/3] Add display Id of calling app when starting activity from
 other users

Change-Id: Icfffde54575d9bb0a5828566ea3c14ae1f785171
Tracked-On: ACP-1420
Signed-off-by: bxu10x <bingx.xu@intel.com>
---
 .../android/server/wm/ActivityStarter.java    | 19 +++++++++++++++++++
 .../server/wm/WindowProcessController.java    |  4 ++++
 2 files changed, 23 insertions(+)

diff --git a/services/core/java/com/android/server/wm/ActivityStarter.java b/services/core/java/com/android/server/wm/ActivityStarter.java
index 54ad4acaca4c..dca5c7a41269 100644
--- a/services/core/java/com/android/server/wm/ActivityStarter.java
+++ b/services/core/java/com/android/server/wm/ActivityStarter.java
@@ -55,6 +55,7 @@ import static android.content.pm.ActivityInfo.LAUNCH_SINGLE_TOP;
 import static android.content.pm.PackageManager.PERMISSION_GRANTED;
 import static android.os.Process.INVALID_UID;
 import static android.view.Display.DEFAULT_DISPLAY;
+import static android.view.Display.INVALID_DISPLAY;
 
 import static com.android.server.wm.ActivityStack.ActivityState.RESUMED;
 import static com.android.server.wm.ActivityStackSupervisor.DEFER_RESUME;
@@ -1183,6 +1184,24 @@ class ActivityStarter {
         mService.onStartActivitySetDidAppSwitch();
         mController.doPendingActivityLaunches(false);
 
+        int calling_displayID = INVALID_DISPLAY;
+        ActivityRecord callerRecord = null;
+        if(callerApp != null) {
+            callerRecord = callerApp.getConfigActivityRecord();
+            if(callerRecord != null) {
+                calling_displayID = callerRecord.getDisplayId();
+            }
+        }
+        if (calling_displayID != INVALID_DISPLAY && checkedOptions != null){
+	    //call from APP property
+            if (calling_displayID != checkedOptions.getCallerDisplayId()) {
+                checkedOptions.setCallerDisplayId(calling_displayID);
+            }
+        } else if (sourceRecord == null) {
+	    //call from APP internal
+            sourceRecord = callerRecord;
+        }
+
         mLastStartActivityResult = startActivityUnchecked(r, sourceRecord, voiceSession,
                 request.voiceInteractor, startFlags, true /* doResume */, checkedOptions, inTask,
                 restrictedBgActivity, intentGrants);
diff --git a/services/core/java/com/android/server/wm/WindowProcessController.java b/services/core/java/com/android/server/wm/WindowProcessController.java
index e6a35f1267b5..27b15313d1e6 100644
--- a/services/core/java/com/android/server/wm/WindowProcessController.java
+++ b/services/core/java/com/android/server/wm/WindowProcessController.java
@@ -416,6 +416,10 @@ public class WindowProcessController extends ConfigurationContainer<Configuratio
         return mDisplayId;
     }
 
+    ActivityRecord getConfigActivityRecord() {
+        return mConfigActivityRecord;
+    }
+
     public void setDebugging(boolean debugging) {
         mDebugging = debugging;
     }
-- 
2.17.1

