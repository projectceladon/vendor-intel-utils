From b04040ae614cbc811b6b0aaa1ace38ee48e9e5a0 Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Thu, 3 Mar 2022 15:03:47 +0530
Subject: [PATCH] Add visibilty info to TaskInfo

This is back ported from S
commid-id is 42767054cc9e75ec29ec699fd106cfc3b1f887e1

Task visibilty info will help us decide if correspoding
LG window should be closed or not.

This patch also adds TASK permission to ClipboardAgent
private app.

Tracked-On: OAM-101891
Signed-off-by: ahs <amrita.h.s@intel.com>
---
 api/current.txt                                 |  1 +
 core/java/android/app/TaskInfo.java             | 17 ++++++++++++++++-
 data/etc/privapp-permissions-platform.xml       |  1 +
 non-updatable-api/current.txt                   |  1 +
 .../core/java/com/android/server/wm/Task.java   |  1 +
 5 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/api/current.txt b/api/current.txt
index 952ccdad992c..3126ea62fcb6 100644
--- a/api/current.txt
+++ b/api/current.txt
@@ -6455,6 +6455,7 @@ package android.app {
   }
 
   public class TaskInfo {
+    method public boolean isVisible();
     field @Nullable public android.content.ComponentName baseActivity;
     field @NonNull public android.content.Intent baseIntent;
     field public boolean isRunning;
diff --git a/core/java/android/app/TaskInfo.java b/core/java/android/app/TaskInfo.java
index f99d4e937f92..b651ce6663b7 100644
--- a/core/java/android/app/TaskInfo.java
+++ b/core/java/android/app/TaskInfo.java
@@ -183,6 +183,12 @@ public class TaskInfo {
      */
     public @ActivityInfo.ScreenOrientation int requestedOrientation;
 
+    /**
+     * Whether this task is visible.
+     * @hide
+     */
+    public boolean isVisible;
+
     TaskInfo() {
         // Do nothing
     }
@@ -255,6 +261,7 @@ public class TaskInfo {
                 : null;
         isResizeable = source.readBoolean();
         requestedOrientation = source.readInt();
+        isVisible = source.readBoolean();
     }
 
     /**
@@ -306,6 +313,7 @@ public class TaskInfo {
         }
         dest.writeBoolean(isResizeable);
         dest.writeInt(requestedOrientation);
+        dest.writeBoolean(isVisible);
     }
 
     @Override
@@ -325,6 +333,13 @@ public class TaskInfo {
                 + " topActivityType=" + topActivityType
                 + " pictureInPictureParams=" + pictureInPictureParams
                 + " topActivityInfo=" + topActivityInfo
-                + " requestedOrientation=" + requestedOrientation;
+                + " requestedOrientation=" + requestedOrientation
+                + " isVisible=" + isVisible
+                + "}";
     }
+
+    public boolean isVisible() {
+        return isVisible;
+    }
+
 }
diff --git a/data/etc/privapp-permissions-platform.xml b/data/etc/privapp-permissions-platform.xml
index 607f09748dce..33607f64c96b 100644
--- a/data/etc/privapp-permissions-platform.xml
+++ b/data/etc/privapp-permissions-platform.xml
@@ -474,6 +474,7 @@ applications that come with the platform
         <permission name="android.permission.INTERNAL_SYSTEM_WINDOW"/>
         <permission name="android.permission.INTERNET"/>
         <permission name="android.permission.PACKAGE_USAGE_STATS"/>
+        <permission name="android.permission.GET_TASKS"/>
     </privapp-permissions>
     
 </permissions>
diff --git a/non-updatable-api/current.txt b/non-updatable-api/current.txt
index 5f15216e8400..e0fd4307d0bc 100644
--- a/non-updatable-api/current.txt
+++ b/non-updatable-api/current.txt
@@ -6455,6 +6455,7 @@ package android.app {
   }
 
   public class TaskInfo {
+    method public boolean isVisible();
     field @Nullable public android.content.ComponentName baseActivity;
     field @NonNull public android.content.Intent baseIntent;
     field public boolean isRunning;
diff --git a/services/core/java/com/android/server/wm/Task.java b/services/core/java/com/android/server/wm/Task.java
index b19b8c1ce10b..337d6d55cfbc 100644
--- a/services/core/java/com/android/server/wm/Task.java
+++ b/services/core/java/com/android/server/wm/Task.java
@@ -3630,6 +3630,7 @@ class Task extends WindowContainer<WindowContainer> {
         info.requestedOrientation = mReuseActivitiesReport.base != null
                 ? mReuseActivitiesReport.base.getRequestedOrientation()
                 : SCREEN_ORIENTATION_UNSET;
+        info.isVisible = hasVisibleChildren();
     }
 
     /**
-- 
2.17.1

