From 6660454a23489718eb05f4efa3726f04ad2b0a85 Mon Sep 17 00:00:00 2001
From: gkdeepa <g.k.deepa@intel.com>
Date: Tue, 8 Mar 2022 16:29:13 +0530
Subject: [PATCH] enable logs in ap1 frameworks/av

Tracked-On:
---
 services/camera/libcameraservice/api1/CameraClient.cpp        | 3 ++-
 services/camera/libcameraservice/api1/client2/Parameters.cpp  | 4 +++-
 services/camera/libcameraservice/api2/CameraDeviceClient.cpp  | 2 +-
 .../camera/libcameraservice/common/CameraProviderManager.cpp  | 2 +-
 services/camera/libcameraservice/utils/ExifUtils.cpp          | 3 ++-
 5 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/services/camera/libcameraservice/api1/CameraClient.cpp b/services/camera/libcameraservice/api1/CameraClient.cpp
index 892996c3af..dfec5d56b0 100644
--- a/services/camera/libcameraservice/api1/CameraClient.cpp
+++ b/services/camera/libcameraservice/api1/CameraClient.cpp
@@ -15,7 +15,7 @@
  */
 
 #define LOG_TAG "CameraClient"
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <cutils/atomic.h>
 #include <cutils/properties.h>
@@ -1153,6 +1153,7 @@ void CameraClient::copyFrameAndPostCopiedFrame(
 }
 
 int CameraClient::getOrientation(int degrees, bool mirror) {
+ALOGE("Deepa getOrientation degree %d mirror %d ",degrees,mirror);
     if (!mirror) {
         if (degrees == 0) return 0;
         else if (degrees == 90) return HAL_TRANSFORM_ROT_90;
diff --git a/services/camera/libcameraservice/api1/client2/Parameters.cpp b/services/camera/libcameraservice/api1/client2/Parameters.cpp
index dbc863b3ad..e95cd17b4e 100644
--- a/services/camera/libcameraservice/api1/client2/Parameters.cpp
+++ b/services/camera/libcameraservice/api1/client2/Parameters.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "Camera2-Parameters"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-// #define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <utils/Log.h>
 #include <utils/Trace.h>
@@ -2828,6 +2828,7 @@ bool Parameters::boolFromString(const char *boolStr) {
 }
 
 int Parameters::degToTransform(int degrees, bool mirror) {
+    ALOGE("Deepa degrees %d mirror %d",degrees,mirror);
     if (!mirror) {
         if (degrees == 0) return 0;
         else if (degrees == 90) return HAL_TRANSFORM_ROT_90;
@@ -2842,6 +2843,7 @@ int Parameters::degToTransform(int degrees, bool mirror) {
             return HAL_TRANSFORM_FLIP_V;
         } else if (degrees == 270) {  // FLIP_H and ROT_270
             return HAL_TRANSFORM_FLIP_V | HAL_TRANSFORM_ROT_90;
+            ALOGE("Deepa degrees %d mirror %d returning 270 only",degrees,mirror);
         }
     }
     ALOGE("%s: Bad input: %d", __FUNCTION__, degrees);
diff --git a/services/camera/libcameraservice/api2/CameraDeviceClient.cpp b/services/camera/libcameraservice/api2/CameraDeviceClient.cpp
index e35b4366f2..a147071c14 100644
--- a/services/camera/libcameraservice/api2/CameraDeviceClient.cpp
+++ b/services/camera/libcameraservice/api2/CameraDeviceClient.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "CameraDeviceClient"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <cutils/properties.h>
 #include <utils/CameraThreadState.h>
diff --git a/services/camera/libcameraservice/common/CameraProviderManager.cpp b/services/camera/libcameraservice/common/CameraProviderManager.cpp
index 876d70d7cf..b50633b32b 100644
--- a/services/camera/libcameraservice/common/CameraProviderManager.cpp
+++ b/services/camera/libcameraservice/common/CameraProviderManager.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "CameraProviderManager"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include "CameraProviderManager.h"
 
diff --git a/services/camera/libcameraservice/utils/ExifUtils.cpp b/services/camera/libcameraservice/utils/ExifUtils.cpp
index 8a0303a8e0..58b1da82db 100644
--- a/services/camera/libcameraservice/utils/ExifUtils.cpp
+++ b/services/camera/libcameraservice/utils/ExifUtils.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "CameraServerExifUtils"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <cutils/log.h>
 
@@ -635,6 +635,7 @@ bool ExifUtilsImpl::setExposureBias(int32_t ev,
 }
 
 bool ExifUtilsImpl::setOrientation(uint16_t degrees) {
+ALOGE("EXIF set orientation %d",degrees);
     ExifOrientation value = ExifOrientation::ORIENTATION_0_DEGREES;
     switch (degrees) {
         case 90:
-- 
2.17.1

