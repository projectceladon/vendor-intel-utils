From c5f0a8b8f093b7e2842702f733006fda4d54d423 Mon Sep 17 00:00:00 2001
From: Priyanka Bose <priyanka.bose@intel.com>
Date: Thu, 7 May 2020 01:46:26 +0530
Subject: [PATCH] AutoFastJni Enabling Patch at Runtime

This patch helps to add the option to enable the optimization at Runtime.
This feature when enabled implements the Binary Analysis for x86
during native method registration at runtime.

Performed ART tests by enabling this flag.
Test: ./test.py --host --64
Signed-off-by: Priyanka Bose <priyanka.bose@intel.com>

Change-Id: I19672fb2755c8e92c0e92338a07e60cdf986357d
---
 core/jni/AndroidRuntime.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/core/jni/AndroidRuntime.cpp b/core/jni/AndroidRuntime.cpp
index cd0b340..d3137dc 100644
--- a/core/jni/AndroidRuntime.cpp
+++ b/core/jni/AndroidRuntime.cpp
@@ -689,6 +689,7 @@ int AndroidRuntime::startVm(JavaVM** pJavaVM, JNIEnv** pEnv, bool zygote)
     std::string fingerprintBuf;
     char jdwpProviderBuf[sizeof("-XjdwpProvider:") - 1 + PROPERTY_VALUE_MAX];
     char bootImageBuf[sizeof("-Ximage:") - 1 + PROPERTY_VALUE_MAX];
+    char autofastjniOptsBuf[sizeof("-XAutoFastJni:")-1 + PROPERTY_VALUE_MAX];
 
     std::string use_apex_image =
         server_configurable_flags::GetServerConfigurableFlag(RUNTIME_NATIVE_BOOT_NAMESPACE,
@@ -811,6 +812,10 @@ int AndroidRuntime::startVm(JavaVM** pJavaVM, JNIEnv** pEnv, bool zygote)
     }
 
     /*
+     * AutoFastJni related option.
+     */
+    parseRuntimeOption("dalvik.vm.useautofastjni", autofastjniOptsBuf, "-XAutoFastJni:");
+    /*
      * Madvise related options.
      */
     parseRuntimeOption("dalvik.vm.madvise-random", madviseRandomOptsBuf, "-XX:MadviseRandomAccess:");
-- 
2.7.4

