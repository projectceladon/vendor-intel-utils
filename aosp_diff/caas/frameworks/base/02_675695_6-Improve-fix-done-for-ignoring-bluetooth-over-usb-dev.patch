From 3a71e5804dcdfbabdc69643ac1b12de47e24bb60 Mon Sep 17 00:00:00 2001
From: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Date: Fri, 19 Jul 2019 19:56:03 +0530
Subject: [PATCH 2/2] Improve fix done for ignoring bluetooth over usb device

Fix done for ignoring bluetooth usb device is now done
based on vendor_id:product_id configured in configuration
file.

Change-Id: I676ab5c9440b5036fdae0a0b0a7bf62602de4f79
Tracked-On: https://jira.devtools.intel.com/browse/OAM-84133
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
---
 core/res/res/values/config.xml                     |  6 ++++++
 core/res/res/values/symbols.xml                    |  1 +
 .../com/android/server/usb/UsbHostManager.java     | 14 ++++++++++----
 3 files changed, 17 insertions(+), 4 deletions(-)

diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index 0391530c483..6b5837c5bbb 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -1198,6 +1198,12 @@
     <string-array name="config_usbHostBlacklist" translatable="false">
     </string-array>
 
+    <!-- List of restricted usb devices to exclude. Items should be added in the format
+          vendorId:produtId.
+    -->
+    <string-array name="config_usbDeviceBlacklist" translatable="false">
+    </string-array>
+
     <!-- List of paths to serial ports that are available to the serial manager.
          for example, /dev/ttyUSB0
     -->
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index afb67f931e7..aa5a6a0d4e8 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -3814,6 +3814,7 @@
   <java-symbol type="string" name="config_defaultSupervisionProfileOwnerComponent" />
   <java-symbol type="bool" name="config_inflateSignalStrength" />
   <java-symbol type="array" name="config_restrictedPreinstalledCarrierApps" />
+  <java-symbol type="array" name="config_usbDeviceBlacklist" />
 
   <java-symbol type="drawable" name="android_logotype" />
   <java-symbol type="layout" name="platlogo_layout" />
diff --git a/services/usb/java/com/android/server/usb/UsbHostManager.java b/services/usb/java/com/android/server/usb/UsbHostManager.java
index 08917fc52c8..4a72e59dce4 100644
--- a/services/usb/java/com/android/server/usb/UsbHostManager.java
+++ b/services/usb/java/com/android/server/usb/UsbHostManager.java
@@ -64,6 +64,9 @@ public class UsbHostManager {
     // USB busses to exclude from USB host support
     private final String[] mHostBlacklist;
 
+    // USB devices to exclude
+    private final String[] mDeviceBlacklist;
+
     private final UsbAlsaManager mUsbAlsaManager;
     private final UsbSettingsManager mSettingsManager;
 
@@ -253,6 +256,8 @@ public class UsbHostManager {
 
         mHostBlacklist = context.getResources().getStringArray(
                 com.android.internal.R.array.config_usbHostBlacklist);
+        mDeviceBlacklist = context.getResources().getStringArray(
+                com.android.internal.R.array.config_usbDeviceBlacklist);
         mUsbAlsaManager = alsaManager;
         mSettingsManager = settingsManager;
         String deviceConnectionHandler = context.getResources().getString(
@@ -298,7 +303,7 @@ public class UsbHostManager {
     }
 
     /* returns true if the USB device should not be accessible by applications */
-    private boolean isBlackListed(int clazz, int subClass, int vendorID, int productID) {
+    private boolean isBlackListed(int clazz, int subClass, int vendorId, int productId) {
         // blacklist hubs
         if (clazz == UsbConstants.USB_CLASS_HUB) return true;
 
@@ -307,9 +312,10 @@ public class UsbHostManager {
                 && subClass == UsbConstants.USB_INTERFACE_SUBCLASS_BOOT) {
             return true;
         }
-        //blacklist vendor id & product id devices
-        for (VendorIdProductId id : mVidPidBlackList) {
-            if (id.vendorId == vendorID && id.productId == productID) {
+        int count = mDeviceBlacklist.length;
+        String vid_pid = String.format("%04x:%04x", vendorId, productId);
+        for (int i = 0; i < count; i++) {
+            if (vid_pid.equals(mDeviceBlacklist[i])) {
                 return true;
             }
         }
-- 
2.17.1

