From 51cd2769ca2ff6595c52960096245e17af974527 Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Mon, 28 Sep 2020 18:05:53 +0530
Subject: [PATCH] Disabling intrisic changes in RS module

Tracked-On:
Signed-off-by: ahs <amrita.h.s@intel.com>
---
 cpu_ref/rsCpuIntrinsicResize.cpp | 82 ++++++++++++++++----------------
 1 file changed, 41 insertions(+), 41 deletions(-)

diff --git a/cpu_ref/rsCpuIntrinsicResize.cpp b/cpu_ref/rsCpuIntrinsicResize.cpp
index 8a3dd1ae..09a65ccb 100644
--- a/cpu_ref/rsCpuIntrinsicResize.cpp
+++ b/cpu_ref/rsCpuIntrinsicResize.cpp
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-#if defined(ARCH_X86_HAVE_AVX2)
+//#if defined(ARCH_X86_HAVE_AVX2)
 #include <stdint.h>
 #include <x86intrin.h>
 #include <xmmintrin.h>
-#endif
+//#endif
 
 #include "rsCpuIntrinsic.h"
 #include "rsCpuIntrinsicInlines.h"
@@ -84,19 +84,19 @@ static float2 cubicInterpolate(float2 p0,float2 p1,float2 p2,float2 p3, float x)
 }
 
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
 static float cubicInterpolate(float p0,float p1,float p2,float p3 , float x) {
    return p1 + 0.5f * x * (p2 - p0 + x * (2.f * p0 - 5.f * p1 +
            _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(4.f), _mm_set1_ps(p2),_mm_set1_ps(p3)))
            + x * (_mm_cvtss_f32(_mm_fmadd_ss (_mm_set1_ps(3.f),_mm_set1_ps(p1 - p2),_mm_set1_ps(p3 - p0))))));
 
 }
-#else
+#else*/
 static float cubicInterpolate(float p0,float p1,float p2,float p3 , float x) {
     return p1 + 0.5f * x * (p2 - p0 + x * (2.f * p0 - 5.f * p1 + 4.f * p2 - p3
             + x * (3.f * (p1 - p2) + p3 - p0)));
 }
-#endif
+//#endif
 
 static uchar4 OneBiCubic(const uchar4 *yp0, const uchar4 *yp1, const uchar4 *yp2, const uchar4 *yp3,
                          float xf, float yf, int width) {
@@ -333,11 +333,11 @@ void RsdCpuScriptIntrinsicResize::kernelU4(const RsExpandKernelDriverInfo *info,
     const size_t stride = cp->mAlloc->mHal.drvState.lod[0].stride;
 
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
     float yf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(info->current.y + 0.5f),_mm_set1_ps(cp->scaleY), _mm_set1_ps(0.5f)));
-#else
+#else*/
     float yf = (info->current.y + 0.5f) * cp->scaleY - 0.5f;
-#endif
+//#endif
 
 
     int starty = (int) floor(yf - 1);
@@ -385,11 +385,11 @@ void RsdCpuScriptIntrinsicResize::kernelU4(const RsExpandKernelDriverInfo *info,
 #endif
 
     while(x1 < x2) {
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
         float xf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(x1 + 0.5f) , _mm_set1_ps(cp->scaleX) , _mm_set1_ps(0.5f)));
-#else
+#elsei*/
         float xf = (x1 + 0.5f) * cp->scaleX - 0.5f;
-#endif
+//#endif
         *out = OneBiCubic(yp0, yp1, yp2, yp3, xf, yf, srcWidth);
         out++;
         x1++;
@@ -411,11 +411,11 @@ void RsdCpuScriptIntrinsicResize::kernelU2(const RsExpandKernelDriverInfo *info,
     const size_t stride = cp->mAlloc->mHal.drvState.lod[0].stride;
 
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
     float yf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(info->current.y + 0.5f),_mm_set1_ps(cp->scaleY), _mm_set1_ps(0.5f)));
-#else
+#else*/
     float yf = (info->current.y + 0.5f) * cp->scaleY - 0.5f;
-#endif
+//#endif
 
     int starty = (int) floor(yf - 1);
     yf = yf - floor(yf);
@@ -463,11 +463,11 @@ void RsdCpuScriptIntrinsicResize::kernelU2(const RsExpandKernelDriverInfo *info,
 
     while(x1 < x2) {
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
         float xf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(x1 + 0.5f) , _mm_set1_ps(cp->scaleX) , _mm_set1_ps(0.5f)));
-#else
+#else*/
         float xf = (x1 + 0.5f) * cp->scaleX - 0.5f;
-#endif
+//#endif
         *out = OneBiCubic(yp0, yp1, yp2, yp3, xf, yf, srcWidth);
         out++;
         x1++;
@@ -489,11 +489,11 @@ void RsdCpuScriptIntrinsicResize::kernelU1(const RsExpandKernelDriverInfo *info,
     const size_t stride = cp->mAlloc->mHal.drvState.lod[0].stride;
 
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
     float yf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(info->current.y + 0.5f),_mm_set1_ps(cp->scaleY), _mm_set1_ps(0.5f)));
-#else
+#else*/
     float yf = (info->current.y + 0.5f) * cp->scaleY - 0.5f;
-#endif
+//#endif
 
     int starty = (int) floor(yf - 1);
     yf = yf - floor(yf);
@@ -541,11 +541,11 @@ void RsdCpuScriptIntrinsicResize::kernelU1(const RsExpandKernelDriverInfo *info,
 
     while(x1 < x2) {
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
         float xf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(x1 + 0.5f) , _mm_set1_ps(cp->scaleX) , _mm_set1_ps(0.5f)));
-#else
+#else*/
         float xf = (x1 + 0.5f) * cp->scaleX - 0.5f;
-#endif
+//#endif
 
         *out = OneBiCubic(yp0, yp1, yp2, yp3, xf, yf, srcWidth);
         out++;
@@ -567,11 +567,11 @@ void RsdCpuScriptIntrinsicResize::kernelF4(const RsExpandKernelDriverInfo *info,
     const int srcWidth = cp->mAlloc->mHal.drvState.lod[0].dimX;
     const size_t stride = cp->mAlloc->mHal.drvState.lod[0].stride;
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
     float yf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(info->current.y + 0.5f),_mm_set1_ps(cp->scaleY), _mm_set1_ps(0.5f)));
-#else
+#else*/
     float yf = (info->current.y + 0.5f) * cp->scaleY - 0.5f;
-#endif
+//#endif
 
     int starty = (int) floor(yf - 1);
     yf = yf - floor(yf);
@@ -592,11 +592,11 @@ void RsdCpuScriptIntrinsicResize::kernelF4(const RsExpandKernelDriverInfo *info,
 
     while(x1 < x2) {
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
         float xf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(x1 + 0.5f) , _mm_set1_ps(cp->scaleX) , _mm_set1_ps(0.5f)));
-#else
+#else*/
         float xf = (x1 + 0.5f) * cp->scaleX - 0.5f;
-#endif
+//#endif
 
         *out = OneBiCubic(yp0, yp1, yp2, yp3, xf, yf, srcWidth);
         out++;
@@ -619,11 +619,11 @@ void RsdCpuScriptIntrinsicResize::kernelF2(const RsExpandKernelDriverInfo *info,
     const size_t stride = cp->mAlloc->mHal.drvState.lod[0].stride;
 
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
     float yf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(info->current.y + 0.5f),_mm_set1_ps(cp->scaleY), _mm_set1_ps(0.5f)));
-#else
+#else*/
     float yf = (info->current.y + 0.5f) * cp->scaleY - 0.5f;
-#endif
+//#endif
 
     int starty = (int) floor(yf - 1);
     yf = yf - floor(yf);
@@ -644,11 +644,11 @@ void RsdCpuScriptIntrinsicResize::kernelF2(const RsExpandKernelDriverInfo *info,
 
     while(x1 < x2) {
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
         float xf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(x1 + 0.5f) , _mm_set1_ps(cp->scaleX) , _mm_set1_ps(0.5f)));
-#else
+#else*/
         float xf = (x1 + 0.5f) * cp->scaleX - 0.5f;
-#endif
+//#endif
 
         *out = OneBiCubic(yp0, yp1, yp2, yp3, xf, yf, srcWidth);
         out++;
@@ -671,11 +671,11 @@ void RsdCpuScriptIntrinsicResize::kernelF1(const RsExpandKernelDriverInfo *info,
     const size_t stride = cp->mAlloc->mHal.drvState.lod[0].stride;
 
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
     float yf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(info->current.y + 0.5f),_mm_set1_ps(cp->scaleY), _mm_set1_ps(0.5f)));
-#else
+#else*/
     float yf = (info->current.y + 0.5f) * cp->scaleY - 0.5f;
-#endif
+//#endif
 
     int starty = (int) floor(yf - 1);
     yf = yf - floor(yf);
@@ -696,11 +696,11 @@ void RsdCpuScriptIntrinsicResize::kernelF1(const RsExpandKernelDriverInfo *info,
 
     while(x1 < x2) {
 
-#if defined(ARCH_X86_HAVE_AVX2)
+/*#if defined(ARCH_X86_HAVE_AVX2)
         float xf = _mm_cvtss_f32(_mm_fmsub_ss(_mm_set1_ps(x1 + 0.5f) , _mm_set1_ps(cp->scaleX) , _mm_set1_ps(0.5f)));
-#else
+#else*/
         float xf = (x1 + 0.5f) * cp->scaleX - 0.5f;
-#endif
+//#endif
 
         *out = OneBiCubic(yp0, yp1, yp2, yp3, xf, yf, srcWidth);
         out++;
-- 
2.17.1

