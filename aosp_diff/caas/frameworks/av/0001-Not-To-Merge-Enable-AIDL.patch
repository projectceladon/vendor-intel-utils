From 0d845602f14da7abf62a8e97f31957c4de6b2f8c Mon Sep 17 00:00:00 2001
From: padmashree mandri <padmashree.mandri@intel.com>
Date: Tue, 7 May 2024 14:25:49 +0000
Subject: [PATCH] [Not To Merge]Enable AIDL

Signed-off-by: padmashree mandri <padmashree.mandri@intel.com>
---
 media/libaudiohal/FactoryHal.cpp | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/media/libaudiohal/FactoryHal.cpp b/media/libaudiohal/FactoryHal.cpp
index f88915d7f4..900acce999 100644
--- a/media/libaudiohal/FactoryHal.cpp
+++ b/media/libaudiohal/FactoryHal.cpp
@@ -52,12 +52,11 @@ using InterfaceName = std::pair<std::string, std::string>;
  */
 static const std::array<AudioHalVersionInfo, 5> sAudioHALVersions = {
     // TODO: remove this comment to get AIDL
-    // AudioHalVersionInfo(AudioHalVersionInfo::Type::AIDL, 1, 0),
+    AudioHalVersionInfo(AudioHalVersionInfo::Type::AIDL, 1, 0),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 7, 1),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 7, 0),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 6, 0),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 5, 0),
-    AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 4, 0),
 };
 
 static const std::map<AudioHalVersionInfo::Type, InterfaceName> sDevicesHALInterfaces = {
@@ -105,6 +104,7 @@ bool createHalService(const AudioHalVersionInfo& version, bool isDevice, void**
 
 bool hasAidlHalService(const InterfaceName& interface, const AudioHalVersionInfo& version) {
     const std::string name = interface.first + "." + interface.second + "/default";
+    ALOGE("In func %s", __func__);
     const bool isDeclared = AServiceManager_isDeclared(name.c_str());
     if (!isDeclared) {
         ALOGW("%s %s: false", __func__, name.c_str());
@@ -116,6 +116,7 @@ bool hasAidlHalService(const InterfaceName& interface, const AudioHalVersionInfo
 
 bool hasHidlHalService(const InterfaceName& interface, const AudioHalVersionInfo& version) {
     using ::android::hidl::manager::V1_0::IServiceManager;
+    ALOGE("In func %s", __func__);
     sp<IServiceManager> sm = ::android::hardware::defaultServiceManager();
     if (!sm) {
         ALOGW("Failed to obtain HIDL ServiceManager");
@@ -140,8 +141,10 @@ bool hasHidlHalService(const InterfaceName& interface, const AudioHalVersionInfo
 bool hasHalService(const InterfaceName& interface, const AudioHalVersionInfo& version) {
     auto halType = version.getType();
     if (halType == AudioHalVersionInfo::Type::AIDL) {
+         ALOGE("In func %s halType is AIDL", __func__);
         return hasAidlHalService(interface, version);
     } else if (halType == AudioHalVersionInfo::Type::HIDL) {
+         ALOGE("In func %s halType is HIDL", __func__);
         return hasHidlHalService(interface, version);
     } else {
         ALOGE("HalType not supported %s", version.toString().c_str());
-- 
2.34.1

