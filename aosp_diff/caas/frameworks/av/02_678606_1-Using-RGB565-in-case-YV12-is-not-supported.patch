From 85b8c052f5c044cf6343c54c16222b95a5eab57a Mon Sep 17 00:00:00 2001
From: "Liu, Xinwu" <xinwu.liu@intel.com>
Date: Fri, 23 Aug 2019 10:44:15 +0800
Subject: [PATCH] Using RGB565 in case YV12 is not supported

Since YV12 is not supported in some virtulization environment, convert
the format to RGB565 in this cases.

Change-Id: I6f773129bf9a97d8164dda38a921efbda038e0c4
Tracked-On:
Signed-off-by: Liu, Xinwu <xinwu.liu@intel.com>
---
 .../colorconversion/SoftwareRenderer.cpp         | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/media/libstagefright/colorconversion/SoftwareRenderer.cpp b/media/libstagefright/colorconversion/SoftwareRenderer.cpp
index 359df3d54..eaa3db843 100644
--- a/media/libstagefright/colorconversion/SoftwareRenderer.cpp
+++ b/media/libstagefright/colorconversion/SoftwareRenderer.cpp
@@ -121,6 +121,14 @@ void SoftwareRenderer::resetFormatIfChanged(
     int halFormat = HAL_PIXEL_FORMAT_RGB_565;
     size_t bufWidth = mCropWidth;
     size_t bufHeight = mCropHeight;
+    char szVendorIntelVideoCodec[PROPERTY_VALUE_MAX] = {'\0'};
+    bool noYUV = false;
+
+    if(property_get("vendor.intel.video.codec", szVendorIntelVideoCodec, NULL) > 0 ) {
+        if (strncmp(szVendorIntelVideoCodec, "hardware", PROPERTY_VALUE_MAX) != 0 ) {
+            noYUV = true;
+        }
+    }
 
     // hardware has YUV12 and RGBA8888 support, so convert known formats
     {
@@ -129,6 +137,10 @@ void SoftwareRenderer::resetFormatIfChanged(
             case OMX_COLOR_FormatYUV420SemiPlanar:
             case OMX_TI_COLOR_FormatYUV420PackedSemiPlanar:
             {
+                if (noYUV) {
+                    ALOGW("does not support YV12, convert to HAL_PIXEL_FORMAT_RGB_565");
+                    break;
+                }
                 halFormat = HAL_PIXEL_FORMAT_YV12;
                 bufWidth = (mCropWidth + 1) & ~1;
                 bufHeight = (mCropHeight + 1) & ~1;
@@ -159,6 +171,10 @@ void SoftwareRenderer::resetFormatIfChanged(
                     // use render engine to convert it to RGB if needed.
                     halFormat = HAL_PIXEL_FORMAT_RGBA_1010102;
                 } else {
+                    if (noYUV) {
+                        ALOGW("does not support YV12, convert to HAL_PIXEL_FORMAT_RGB_565");
+                        break;
+                    }
                     halFormat = HAL_PIXEL_FORMAT_YV12;
                 }
                 bufWidth = (mCropWidth + 1) & ~1;
-- 
2.21.0

