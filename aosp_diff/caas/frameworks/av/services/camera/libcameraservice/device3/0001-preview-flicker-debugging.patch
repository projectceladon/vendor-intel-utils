From a4bad13b7e8f873fc93d8d246759ac54acbeab5b Mon Sep 17 00:00:00 2001
From: kbillore <kaushal.billore@intel.com>
Date: Wed, 21 Oct 2020 13:05:05 +0530
Subject: [PATCH] preview flicker debugging

---
 .../camera/libcameraservice/device3/Camera3Device.cpp | 11 ++++++-----
 .../camera/libcameraservice/device3/Camera3Stream.cpp |  2 +-
 2 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/services/camera/libcameraservice/device3/Camera3Device.cpp b/services/camera/libcameraservice/device3/Camera3Device.cpp
index 4a509aa745..e0ce9beb17 100644
--- a/services/camera/libcameraservice/device3/Camera3Device.cpp
+++ b/services/camera/libcameraservice/device3/Camera3Device.cpp
@@ -19,11 +19,12 @@
 //#define LOG_NDEBUG 0
 //#define LOG_NNDEBUG 0  // Per-frame verbose logging
 
-#ifdef LOG_NNDEBUG
+//#ifdef LOG_NNDEBUG
+//#define ALOGVV(...) ALOGV(__VA_ARGS__)
+//#else
+//#define ALOGVV(...) ((void)0)
+//#endif
 #define ALOGVV(...) ALOGV(__VA_ARGS__)
-#else
-#define ALOGVV(...) ((void)0)
-#endif
 
 // Convenience macro for transient errors
 #define CLOGE(fmt, ...) ALOGE("Camera %s: %s: " fmt, mId.string(), __FUNCTION__, \
@@ -1023,7 +1024,7 @@ hardware::Return<void> Camera3Device::processCaptureResult_3_4(
         // a warning here.
         ALOGW("%s: received capture result in error state.", __FUNCTION__);
     }
-
+ALOGE("shiva processCaptureResult");
     sp<NotificationListener> listener;
     {
         std::lock_guard<std::mutex> l(mOutputLock);
diff --git a/services/camera/libcameraservice/device3/Camera3Stream.cpp b/services/camera/libcameraservice/device3/Camera3Stream.cpp
index 20f616853a..0d27d4ded4 100644
--- a/services/camera/libcameraservice/device3/Camera3Stream.cpp
+++ b/services/camera/libcameraservice/device3/Camera3Stream.cpp
@@ -605,7 +605,7 @@ status_t Camera3Stream::getBuffer(camera3_stream_buffer *buffer,
     ATRACE_HFR_CALL();
     Mutex::Autolock l(mLock);
     status_t res = OK;
-
+ALOGE("shiva getBuffer");
     // This function should be only called when the stream is configured already.
     if (mState != STATE_CONFIGURED) {
         ALOGE("%s: Stream %d: Can't get buffers if stream is not in CONFIGURED state %d",
-- 
2.17.1

