From 9ae3680662708b06a70bd1f077a2065c4168994e Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Thu, 24 Sep 2020 12:10:08 +0530
Subject: Modify the patch enabling avx implementation for math
  funcs so that it is march independent

Tracked-On:
Signed-off-by: ahs <amrita.h.s@intel.com>
---
 libm/Android.bp                               |  248 ++--
 libm/x86_64/atan_avx2.S                       |  198 ---
 libm/x86_64/atan_cout_avx2.S                  |  859 -------------
 libm/x86_64/atan_data_avx2.S                  | 1102 -----------------
 libm/x86_64/atanf_avx2.S                      |  220 ----
 libm/x86_64/atanf_cout_avx2.S                 |  865 -------------
 libm/x86_64/atanf_data_avx2.S                 |  814 ------------
 libm/x86_64/dynamic_function_dispatch.cpp     |  175 +++
 libm/x86_64/{ => generic}/ceil.S              |    5 +-
 libm/x86_64/{ => generic}/ceilf.S             |    4 +-
 libm/x86_64/generic/cosf.c                    |   19 +
 libm/x86_64/{ => generic}/e_acos.S            |    0
 libm/x86_64/{ => generic}/e_asin.S            |    0
 libm/x86_64/{ => generic}/e_atan2.S           |    0
 libm/x86_64/{ => generic}/e_cosh.S            |    0
 libm/x86_64/{ => generic}/e_hypot.S           |    4 +-
 libm/x86_64/{ => generic}/e_log10.S           |    4 +-
 libm/x86_64/generic/e_log10f.c                |   19 +
 libm/x86_64/{ => generic}/e_sinh.S            |    4 +-
 libm/x86_64/generic/e_sinhf.c                 |   19 +
 libm/x86_64/generic/expf.c                    |   19 +
 libm/x86_64/{ => generic}/floor.S             |    4 +-
 libm/x86_64/{ => generic}/floorf.S            |    4 +-
 libm/x86_64/{ => generic}/lrint.S             |    0
 libm/x86_64/{ => generic}/lrintf.S            |    0
 libm/x86_64/{ => generic}/rint.S              |    4 +-
 libm/x86_64/{ => generic}/rintf.S             |    4 +-
 libm/x86_64/{ => generic}/s_atan.S            |    0
 libm/x86_64/{ => generic}/s_cbrt.S            |    4 +-
 libm/x86_64/generic/s_cbrtf.c                 |   19 +
 libm/x86_64/{ => generic}/s_cos.S             |    4 +-
 libm/x86_64/{ => generic}/s_expm1.S           |    0
 libm/x86_64/{ => generic}/s_log1p.S           |    4 +-
 libm/x86_64/generic/s_log1pf.c                |   19 +
 libm/x86_64/{ => generic}/s_sin.S             |    4 +-
 libm/x86_64/{ => generic}/s_tan.S             |    0
 libm/x86_64/{ => generic}/s_tanh.S            |    0
 libm/x86_64/generic/sinf.c                    |   19 +
 libm/x86_64/{ => generic}/sqrt.S              |    0
 libm/x86_64/{ => generic}/sqrtf.S             |    0
 libm/x86_64/{ => generic}/trunc.S             |    0
 libm/x86_64/{ => generic}/truncf.S            |    0
 libm/x86_64/{ => kabylake}/cbrt_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/cbrt_cout_avx2.S   |    0
 libm/x86_64/{ => kabylake}/cbrt_data_avx2.S   |    0
 libm/x86_64/{ => kabylake}/cbrtf_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/cbrtf_cout_avx2.S  |    0
 libm/x86_64/{ => kabylake}/cbrtf_data_avx2.S  |    0
 libm/x86_64/{ => kabylake}/ceil_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/ceilf_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/cos_avx2.S         |    4 +-
 libm/x86_64/{ => kabylake}/cos_cout_avx2.S    |    0
 libm/x86_64/{ => kabylake}/cos_data_avx2.S    |    0
 libm/x86_64/{ => kabylake}/cosf_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/cosf_cout_avx2.S   |    0
 libm/x86_64/{ => kabylake}/cosf_data_avx2.S   |    0
 libm/x86_64/{ => kabylake}/exp_cout_avx2.S    |    0
 libm/x86_64/{ => kabylake}/exp_data_avx2.S    |    0
 libm/x86_64/{ => kabylake}/expf_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/floor_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/floorf_avx2.S      |    4 +-
 libm/x86_64/{ => kabylake}/hypot_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/hypot_cout_avx2.S  |    0
 libm/x86_64/{ => kabylake}/hypot_data_avx2.S  |    0
 libm/x86_64/{ => kabylake}/log10_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/log10_cout_avx2.S  |    0
 libm/x86_64/{ => kabylake}/log10_data_avx2.S  |    0
 libm/x86_64/{ => kabylake}/log10f_avx2.S      |    4 +-
 libm/x86_64/{ => kabylake}/log10f_cout_avx2.S |    0
 libm/x86_64/{ => kabylake}/log10f_data_avx2.S |    0
 libm/x86_64/{ => kabylake}/log1p_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/log1p_cout_avx2.S  |    0
 libm/x86_64/{ => kabylake}/log1p_data_avx2.S  |    0
 libm/x86_64/{ => kabylake}/log1pf_avx2.S      |    4 +-
 libm/x86_64/{ => kabylake}/log1pf_cout_avx2.S |    0
 libm/x86_64/{ => kabylake}/log1pf_data_avx2.S |    0
 libm/x86_64/{ => kabylake}/rint_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/rintf_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/sin_avx2.S         |    4 +-
 libm/x86_64/{ => kabylake}/sin_cout_avx2.S    |    0
 libm/x86_64/{ => kabylake}/sin_data_avx2.S    |    0
 libm/x86_64/{ => kabylake}/sinf_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/sinf_cout_avx2.S   |    0
 libm/x86_64/{ => kabylake}/sinf_data_avx2.S   |    0
 libm/x86_64/{ => kabylake}/sinh_avx2.S        |    4 +-
 libm/x86_64/{ => kabylake}/sinh_cout_avx2.S   |    0
 libm/x86_64/{ => kabylake}/sinh_data_avx2.S   |    0
 libm/x86_64/{ => kabylake}/sinhf_avx2.S       |    4 +-
 libm/x86_64/{ => kabylake}/sinhf_cout_avx2.S  |    0
 libm/x86_64/{ => kabylake}/sinhf_data_avx2.S  |    0
 libm/x86_64/static_function_dispatch.S        |   55 +
 91 files changed, 545 insertions(+), 4257 deletions(-)
 delete mode 100644 libm/x86_64/atan_avx2.S
 delete mode 100644 libm/x86_64/atan_cout_avx2.S
 delete mode 100644 libm/x86_64/atan_data_avx2.S
 delete mode 100644 libm/x86_64/atanf_avx2.S
 delete mode 100644 libm/x86_64/atanf_cout_avx2.S
 delete mode 100644 libm/x86_64/atanf_data_avx2.S
 create mode 100644 libm/x86_64/dynamic_function_dispatch.cpp
 rename libm/x86_64/{ => generic}/ceil.S (97%)
 rename libm/x86_64/{ => generic}/ceilf.S (97%)
 create mode 100644 libm/x86_64/generic/cosf.c
 rename libm/x86_64/{ => generic}/e_acos.S (100%)
 rename libm/x86_64/{ => generic}/e_asin.S (100%)
 rename libm/x86_64/{ => generic}/e_atan2.S (100%)
 rename libm/x86_64/{ => generic}/e_cosh.S (100%)
 rename libm/x86_64/{ => generic}/e_hypot.S (99%)
 rename libm/x86_64/{ => generic}/e_log10.S (99%)
 create mode 100644 libm/x86_64/generic/e_log10f.c
 rename libm/x86_64/{ => generic}/e_sinh.S (99%)
 create mode 100644 libm/x86_64/generic/e_sinhf.c
 create mode 100644 libm/x86_64/generic/expf.c
 rename libm/x86_64/{ => generic}/floor.S (97%)
 rename libm/x86_64/{ => generic}/floorf.S (97%)
 rename libm/x86_64/{ => generic}/lrint.S (100%)
 rename libm/x86_64/{ => generic}/lrintf.S (100%)
 rename libm/x86_64/{ => generic}/rint.S (97%)
 rename libm/x86_64/{ => generic}/rintf.S (97%)
 rename libm/x86_64/{ => generic}/s_atan.S (100%)
 rename libm/x86_64/{ => generic}/s_cbrt.S (99%)
 create mode 100644 libm/x86_64/generic/s_cbrtf.c
 rename libm/x86_64/{ => generic}/s_cos.S (99%)
 rename libm/x86_64/{ => generic}/s_expm1.S (100%)
 rename libm/x86_64/{ => generic}/s_log1p.S (99%)
 create mode 100644 libm/x86_64/generic/s_log1pf.c
 rename libm/x86_64/{ => generic}/s_sin.S (99%)
 rename libm/x86_64/{ => generic}/s_tan.S (100%)
 rename libm/x86_64/{ => generic}/s_tanh.S (100%)
 create mode 100644 libm/x86_64/generic/sinf.c
 rename libm/x86_64/{ => generic}/sqrt.S (100%)
 rename libm/x86_64/{ => generic}/sqrtf.S (100%)
 rename libm/x86_64/{ => generic}/trunc.S (100%)
 rename libm/x86_64/{ => generic}/truncf.S (100%)
 rename libm/x86_64/{ => kabylake}/cbrt_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/cbrt_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/cbrt_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/cbrtf_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/cbrtf_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/cbrtf_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/ceil_avx2.S (97%)
 rename libm/x86_64/{ => kabylake}/ceilf_avx2.S (97%)
 rename libm/x86_64/{ => kabylake}/cos_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/cos_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/cos_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/cosf_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/cosf_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/cosf_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/exp_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/exp_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/expf_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/floor_avx2.S (97%)
 rename libm/x86_64/{ => kabylake}/floorf_avx2.S (97%)
 rename libm/x86_64/{ => kabylake}/hypot_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/hypot_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/hypot_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log10_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/log10_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log10_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log10f_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/log10f_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log10f_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log1p_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/log1p_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log1p_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log1pf_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/log1pf_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/log1pf_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/rint_avx2.S (97%)
 rename libm/x86_64/{ => kabylake}/rintf_avx2.S (97%)
 rename libm/x86_64/{ => kabylake}/sin_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/sin_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sin_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sinf_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/sinf_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sinf_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sinh_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/sinh_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sinh_data_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sinhf_avx2.S (99%)
 rename libm/x86_64/{ => kabylake}/sinhf_cout_avx2.S (100%)
 rename libm/x86_64/{ => kabylake}/sinhf_data_avx2.S (100%)
 create mode 100644 libm/x86_64/static_function_dispatch.S

diff --git a/libm/Android.bp b/libm/Android.bp
index 65d8d5756..0891ed698 100644
--- a/libm/Android.bp
+++ b/libm/Android.bp
@@ -394,33 +394,91 @@ cc_library {
         x86_64: {
             srcs: [
                 "amd64/fenv.c",
-                "x86_64/ceil.S",
-                "x86_64/ceilf.S",
-                "x86_64/floor.S",
-                "x86_64/floorf.S",
-                "x86_64/rint.S",
-                "x86_64/rintf.S",
-                "x86_64/sqrt.S",
-                "x86_64/sqrtf.S",
-                "x86_64/trunc.S",
-                "x86_64/truncf.S",
-                "x86_64/e_acos.S",
-                "x86_64/e_asin.S",
-                "x86_64/e_atan2.S",
-                "x86_64/e_cosh.S",
-                "x86_64/e_hypot.S",
-                "x86_64/e_log10.S",
-                "x86_64/e_sinh.S",
-                "x86_64/lrint.S",
-                "x86_64/lrintf.S",
-                "x86_64/s_atan.S",
-                "x86_64/s_cbrt.S",
-                "x86_64/s_cos.S",
-                "x86_64/s_expm1.S",
-                "x86_64/s_log1p.S",
-                "x86_64/s_sin.S",
-                "x86_64/s_tanh.S",
-                "x86_64/s_tan.S",
+                "x86_64/generic/ceil.S",
+                "x86_64/generic/ceilf.S",
+                "x86_64/generic/floor.S",
+                "x86_64/generic/floorf.S",
+                "x86_64/generic/rint.S",
+                "x86_64/generic/rintf.S",
+                "x86_64/generic/sqrt.S",
+                "x86_64/generic/sqrtf.S",
+                "x86_64/generic/trunc.S",
+                "x86_64/generic/truncf.S",
+                "x86_64/generic/e_acos.S",
+                "x86_64/generic/e_asin.S",
+                "x86_64/generic/e_atan2.S",
+                "x86_64/generic/e_cosh.S",
+                "x86_64/generic/e_hypot.S",
+                "x86_64/generic/e_log10.S",
+                "x86_64/generic/e_sinh.S",
+                "x86_64/generic/lrint.S",
+                "x86_64/generic/lrintf.S",
+                "x86_64/generic/s_atan.S",
+                "x86_64/generic/s_cbrt.S",
+                "x86_64/generic/s_cos.S",
+                "x86_64/generic/s_expm1.S",
+                "x86_64/generic/s_log1p.S",
+                "x86_64/generic/s_sin.S",
+                "x86_64/generic/s_tanh.S",
+                "x86_64/generic/s_tan.S",
+               
+                "x86_64/generic/e_log10f.c", 
+                "x86_64/generic/s_log1pf.c", 
+                "x86_64/generic/s_cbrtf.c", 
+                "x86_64/generic/e_sinhf.c",
+                "x86_64/generic/sinf.c",
+                "x86_64/generic/cosf.c",
+                "x86_64/generic/expf.c",
+ 
+                //avx2 functions
+                "x86_64/kabylake/ceil_avx2.S",
+                "x86_64/kabylake/ceilf_avx2.S",
+                "x86_64/kabylake/floor_avx2.S",
+                "x86_64/kabylake/floorf_avx2.S",
+                "x86_64/kabylake/rint_avx2.S",
+                "x86_64/kabylake/rintf_avx2.S",
+                "x86_64/kabylake/hypot_data_avx2.S",
+                "x86_64/kabylake/hypot_cout_avx2.S",
+                "x86_64/kabylake/hypot_avx2.S",
+                "x86_64/kabylake/cbrt_data_avx2.S",
+                "x86_64/kabylake/cbrt_cout_avx2.S",
+                "x86_64/kabylake/cbrt_avx2.S", 
+                "x86_64/kabylake/cbrtf_data_avx2.S",
+                "x86_64/kabylake/cbrtf_cout_avx2.S",
+                "x86_64/kabylake/cbrtf_avx2.S", 
+                "x86_64/kabylake/log10_data_avx2.S",
+                "x86_64/kabylake/log10_cout_avx2.S", 
+                "x86_64/kabylake/log10_avx2.S",
+                "x86_64/kabylake/log10f_data_avx2.S",
+                "x86_64/kabylake/log10f_cout_avx2.S", 
+                "x86_64/kabylake/log10f_avx2.S",
+                "x86_64/kabylake/log1p_data_avx2.S",
+                "x86_64/kabylake/log1p_cout_avx2.S", 
+                "x86_64/kabylake/log1p_avx2.S",
+                "x86_64/kabylake/log1pf_data_avx2.S",
+                "x86_64/kabylake/log1pf_cout_avx2.S", 
+                "x86_64/kabylake/log1pf_avx2.S",
+                "x86_64/kabylake/sinh_data_avx2.S",
+                "x86_64/kabylake/sinh_cout_avx2.S",
+                "x86_64/kabylake/sinh_avx2.S",
+                "x86_64/kabylake/sinhf_data_avx2.S",
+                "x86_64/kabylake/sinhf_cout_avx2.S",
+                "x86_64/kabylake/sinhf_avx2.S",
+                "x86_64/kabylake/sin_data_avx2.S",
+                "x86_64/kabylake/sin_cout_avx2.S",
+                "x86_64/kabylake/sin_avx2.S",
+                "x86_64/kabylake/sinf_data_avx2.S",
+                "x86_64/kabylake/sinf_cout_avx2.S",
+                "x86_64/kabylake/sinf_avx2.S",
+                "x86_64/kabylake/cos_data_avx2.S",
+                "x86_64/kabylake/cos_cout_avx2.S",
+                "x86_64/kabylake/cos_avx2.S",
+                "x86_64/kabylake/cosf_data_avx2.S",
+                "x86_64/kabylake/cosf_cout_avx2.S",
+                "x86_64/kabylake/cosf_avx2.S",
+                "x86_64/kabylake/exp_data_avx2.S",
+                "x86_64/kabylake/exp_cout_avx2.S",
+                "x86_64/kabylake/expf_avx2.S",
             ],
             exclude_srcs: [
                 "upstream-freebsd/lib/msun/src/e_acos.c",
@@ -429,11 +487,14 @@ cc_library {
                 "upstream-freebsd/lib/msun/src/e_cosh.c",
                 "upstream-freebsd/lib/msun/src/e_hypot.c",
                 "upstream-freebsd/lib/msun/src/e_log10.c",
+                "upstream-freebsd/lib/msun/src/e_log10f.c",
                 "upstream-freebsd/lib/msun/src/e_sinh.c",
+                "upstream-freebsd/lib/msun/src/e_sinhf.c",
                 "upstream-freebsd/lib/msun/src/e_sqrt.c",
                 "upstream-freebsd/lib/msun/src/e_sqrtf.c",
                 "upstream-freebsd/lib/msun/src/s_atan.c",
                 "upstream-freebsd/lib/msun/src/s_cbrt.c",
+                "upstream-freebsd/lib/msun/src/s_cbrtf.c",
                 "upstream-freebsd/lib/msun/src/s_ceil.c",
                 "upstream-freebsd/lib/msun/src/s_ceilf.c",
                 "upstream-freebsd/lib/msun/src/s_cos.c",
@@ -441,6 +502,7 @@ cc_library {
                 "upstream-freebsd/lib/msun/src/s_floor.c",
                 "upstream-freebsd/lib/msun/src/s_floorf.c",
                 "upstream-freebsd/lib/msun/src/s_log1p.c",
+                "upstream-freebsd/lib/msun/src/s_log1pf.c",
                 "upstream-freebsd/lib/msun/src/s_llrint.c",
                 "upstream-freebsd/lib/msun/src/s_llrintf.c",
                 "upstream-freebsd/lib/msun/src/s_lrint.c",
@@ -453,115 +515,15 @@ cc_library {
                 "upstream-freebsd/lib/msun/src/s_trunc.c",
                 "upstream-freebsd/lib/msun/src/s_truncf.c",
             ],
-            avx2: {
-                           srcs: [
-                               "x86_64/ceil_avx2.S",
-                               "x86_64/ceilf_avx2.S",
-                               "x86_64/floor_avx2.S",
-                               "x86_64/floorf_avx2.S",
-                               "x86_64/rint_avx2.S",
-                               "x86_64/rintf_avx2.S",
-                               "x86_64/exp_data_avx2.S",
-                               "x86_64/exp_cout_avx2.S",
-                               "x86_64/expf_avx2.S",
-
-                               "x86_64/hypot_data_avx2.S",
-                               "x86_64/hypot_cout_avx2.S",
-                               "x86_64/hypot_avx2.S",
-
-                               "x86_64/log10_data_avx2.S",
-                               "x86_64/log10_cout_avx2.S",
-                               "x86_64/log10_avx2.S",
-                               "x86_64/log10f_data_avx2.S",
-                               "x86_64/log10f_cout_avx2.S",
-                               "x86_64/log10f_avx2.S",
-
-                               "x86_64/sinhf_data_avx2.S",
-                               "x86_64/sinhf_cout_avx2.S",
-                               "x86_64/sinhf_avx2.S",
-                               "x86_64/sinh_data_avx2.S",
-                               "x86_64/sinh_cout_avx2.S",
-                               "x86_64/sinh_avx2.S",
-
-                               //"x86_64/atan_data_avx2.S",
-                               //"x86_64/atan_cout_avx2.S",
-                               //"x86_64/atan_avx2.S",
-                               //"x86_64/atanf_data_avx2.S",
-                               //"x86_64/atanf_cout_avx2.S",
-                               //"x86_64/atanf_avx2.S",
-
-                               "x86_64/cbrt_data_avx2.S",
-                               "x86_64/cbrt_cout_avx2.S",
-                               "x86_64/cbrt_avx2.S",
-                               "x86_64/cbrtf_data_avx2.S",
-                               "x86_64/cbrtf_cout_avx2.S",
-                               "x86_64/cbrtf_avx2.S",
-
-                               "x86_64/cos_data_avx2.S",
-                               "x86_64/cos_cout_avx2.S",
-                                "x86_64/cos_avx2.S",
-                               "x86_64/cosf_data_avx2.S",
-                               "x86_64/cosf_cout_avx2.S",
-                               "x86_64/cosf_avx2.S",
-
-                               "x86_64/log1p_data_avx2.S",
-                               "x86_64/log1p_cout_avx2.S",
-                               "x86_64/log1p_avx2.S",
-                               "x86_64/log1pf_data_avx2.S",
-                               "x86_64/log1pf_cout_avx2.S",
-                               "x86_64/log1pf_avx2.S",
-
-                               "x86_64/sinf_data_avx2.S",
-                               "x86_64/sinf_cout_avx2.S",
-                               "x86_64/sinf_avx2.S",
-                               "x86_64/sin_data_avx2.S",
-                               "x86_64/sin_cout_avx2.S",
-                               "x86_64/sin_avx2.S",
-
-                           ],
-                            exclude_srcs: [
-                               "upstream-freebsd/lib/msun/src/s_ceil.c",
-                               "upstream-freebsd/lib/msun/src/s_ceilf.c",
-                               "x86_64/ceil.S",
-                               "x86_64/ceilf.S",
-                               "upstream-freebsd/lib/msun/src/s_floor.c",
-                               "upstream-freebsd/lib/msun/src/s_floorf.c",
-                               "x86_64/floor.S",
-                               "x86_64/floorf.S",
-                               "upstream-freebsd/lib/msun/src/s_rint.c",
-                               "upstream-freebsd/lib/msun/src/s_rintf.c",
-                               "x86_64/rint.S",
-                               "x86_64/rintf.S",
-                               "upstream-freebsd/lib/msun/src/e_expf.c",
-                               "upstream-freebsd/lib/msun/src/e_hypot.c",
-                               "x86_64/e_hypot.S",
-                               "upstream-freebsd/lib/msun/src/e_log10.c",
-                               "upstream-freebsd/lib/msun/src/e_log10f.c",
-                               "x86_64/e_log10.S",
-                               "upstream-freebsd/lib/msun/src/e_sinh.c",
-                               "upstream-freebsd/lib/msun/src/e_sinhf.c",
-                               "x86_64/e_sinh.S",
-                               "upstream-freebsd/lib/msun/src/s_atan.c",
-                               //"upstream-freebsd/lib/msun/src/s_atanf.c",
-                               //"x86_64/s_atan.S",
-                               "upstream-freebsd/lib/msun/src/s_cbrt.c",
-                               "upstream-freebsd/lib/msun/src/s_cbrtf.c",
-                               "x86_64/s_cbrt.S",
-                               "upstream-freebsd/lib/msun/src/s_cos.c",
-                               "upstream-freebsd/lib/msun/src/s_cosf.c",
-                               "x86_64/s_cos.S",
-                               "upstream-freebsd/lib/msun/src/s_log1p.c",
-                               "upstream-freebsd/lib/msun/src/s_log1pf.c",
-                               "x86_64/s_log1p.S",
-                               "upstream-freebsd/lib/msun/src/s_sin.c",
-                               "upstream-freebsd/lib/msun/src/s_sinf.c",
-                               "x86_64/s_sin.S",
-                ],
-             },        
+            shared: {
+               srcs: ["x86_64/dynamic_function_dispatch.cpp"],
+            },
+            static: {
+               srcs: ["x86_64/static_function_dispatch.S"],
+            }, 
             version_script: ":libm.x86_64.map",
         },
     },
-
     local_include_dirs: [
         "upstream-freebsd/android/include/",
         "upstream-freebsd/lib/msun/src/",
@@ -616,6 +578,26 @@ cc_library {
     ],
 }
 
+/*cc_library_static {
+    name: "libm_dynamic_dispatch",
+    srcs: ["dynamic_function_dispatch.cpp"],
+    arch: {
+       x86_64: {
+          srcs: ["x86_64/dynamic_function_dispatch.cpp"],
+       },
+    },
+}
+ 
+cc_library_static {
+    name: "libm_static_dispatch",
+    srcs: ["static_function_dispatch.S"],
+    arch: {
+       x86_64: {
+          srcs: ["x86_64/static_function_dispatch.S"],
+       },
+    },
+}*/
+
 ndk_library {
     name: "libm",
     native_bridge_supported: true,
diff --git a/libm/x86_64/atan_avx2.S b/libm/x86_64/atan_avx2.S
deleted file mode 100644
index 6ba53c3d0..000000000
--- a/libm/x86_64/atan_avx2.S
+++ /dev/null
@@ -1,198 +0,0 @@
-/*
-Copyright (C) 2019 The Android Open Source Project
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
- * Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
- * Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in
-   the documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-SUCH DAMAGE.
-*/
-
-#include <private/bionic_asm.h>
-# -- Begin  atan
-ENTRY(atan)
-# parameter 1: %xmm0
-..B1.1:
-..L1:
-
-        pushq     %rbp
-	.cfi_def_cfa_offset 16
-        movq      %rsp, %rbp
-	.cfi_def_cfa 6, 16
-	.cfi_offset 6, -16
-        andq      $-64, %rsp
-        subq      $256, %rsp
-        vmovapd   %xmm0, %xmm3
-        vandpd    1152+__svml_datan_ha_data_internal(%rip), %xmm3, %xmm0
-        lea       __svml_datan_ha_data_internal(%rip), %r8
-        vpshufd   $221, %xmm0, %xmm6
-        vxorpd    %xmm0, %xmm3, %xmm2
-        vmovq     2560+__svml_datan_ha_data_internal(%rip), %xmm1
-        vpsubd    %xmm1, %xmm6, %xmm7
-        vmovq     2624+__svml_datan_ha_data_internal(%rip), %xmm1
-        vmovups   %xmm14, 160(%rsp)
-        vpcmpgtd  %xmm1, %xmm7, %xmm14
-        vmovups   %xmm13, 144(%rsp)
-        vpcmpeqd  %xmm1, %xmm7, %xmm13
-        vpor      %xmm13, %xmm14, %xmm5
-        vmovmskps %xmm5, %edx
-        vmovq     1408+__svml_datan_ha_data_internal(%rip), %xmm13
-        vmovq     1472+__svml_datan_ha_data_internal(%rip), %xmm4
-        vpsubd    %xmm6, %xmm13, %xmm13
-        vmovq     1536+__svml_datan_ha_data_internal(%rip), %xmm5
-        vpsubd    %xmm6, %xmm4, %xmm4
-        vmovq     1600+__svml_datan_ha_data_internal(%rip), %xmm7
-        vpsrad    $31, %xmm13, %xmm13
-        vpsubd    %xmm6, %xmm7, %xmm7
-        vpsubd    %xmm6, %xmm5, %xmm6
-        vpsrad    $31, %xmm7, %xmm7
-        vpsrad    $31, %xmm4, %xmm4
-        vpsrad    $31, %xmm6, %xmm6
-        vpaddd    %xmm7, %xmm13, %xmm7
-        vpaddd    %xmm6, %xmm4, %xmm13
-        vmovq     1664+__svml_datan_ha_data_internal(%rip), %xmm14
-        vpaddd    %xmm13, %xmm7, %xmm5
-        vpaddd    %xmm14, %xmm5, %xmm14
-        vpslld    $5, %xmm14, %xmm4
-        vmovd     %xmm4, %eax
-        vmovupd   1728+__svml_datan_ha_data_internal(%rip), %xmm1
-        vpextrd   $1, %xmm4, %ecx
-        vmovq     8(%rax,%r8), %xmm7
-        vmovq     (%rax,%r8), %xmm6
-        vmovq     16(%rax,%r8), %xmm13
-        vmovhpd   8(%rcx,%r8), %xmm7, %xmm4
-        vmovhpd   (%rcx,%r8), %xmm6, %xmm5
-        vmovhpd   16(%rcx,%r8), %xmm13, %xmm6
-        vandpd    %xmm0, %xmm4, %xmm13
-        vmovq     24(%rax,%r8), %xmm14
-        vmovhpd   24(%rcx,%r8), %xmm14, %xmm7
-        vsubpd    %xmm5, %xmm13, %xmm14
-        vandpd    %xmm1, %xmm4, %xmm13
-        vmovapd   %xmm1, %xmm4
-        vfmadd231pd %xmm5, %xmm0, %xmm13
-        vcvtpd2ps %xmm13, %xmm0
-        vmovlhps  %xmm0, %xmm0, %xmm0
-        vrcpps    %xmm0, %xmm5
-        vcvtps2pd %xmm5, %xmm5
-        vfnmadd231pd %xmm13, %xmm5, %xmm4
-        vfmadd213pd %xmm4, %xmm4, %xmm4
-        vfmadd213pd %xmm5, %xmm4, %xmm5
-        vfnmadd231pd %xmm13, %xmm5, %xmm1
-        vfmadd213pd %xmm5, %xmm1, %xmm5
-        vmulpd    %xmm5, %xmm14, %xmm0
-        vfnmadd213pd %xmm14, %xmm0, %xmm13
-        vmovupd   1792+__svml_datan_ha_data_internal(%rip), %xmm14
-        vmulpd    %xmm13, %xmm5, %xmm1
-        vmulpd    %xmm0, %xmm0, %xmm5
-        vaddpd    %xmm1, %xmm7, %xmm1
-        vmulpd    %xmm5, %xmm5, %xmm4
-        vmovupd   1856+__svml_datan_ha_data_internal(%rip), %xmm13
-        vfmadd213pd 1920+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm14
-        vfmadd213pd 1984+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm13
-        vfmadd213pd 2048+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm14
-        vfmadd213pd 2112+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm13
-        vfmadd213pd 2176+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm14
-        vfmadd213pd 2240+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm13
-        vfmadd213pd 2304+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm14
-        vfmadd213pd 2368+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm13
-        vfmadd213pd 2432+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm14
-        vfmadd213pd 2496+__svml_datan_ha_data_internal(%rip), %xmm4, %xmm13
-        vfmadd213pd %xmm13, %xmm5, %xmm14
-        vmulpd    %xmm14, %xmm5, %xmm4
-        vfmadd213pd %xmm1, %xmm0, %xmm4
-        vaddpd    %xmm4, %xmm0, %xmm7
-        vaddpd    %xmm7, %xmm6, %xmm0
-        vorpd     %xmm2, %xmm0, %xmm0
-        andl      $3, %edx
-        jne       ..B1.3
-..B1.2:
-        vmovups   144(%rsp), %xmm13
-	.cfi_restore 30
-        vmovups   160(%rsp), %xmm14
-	.cfi_restore 31
-        movq      %rbp, %rsp
-        popq      %rbp
-	.cfi_def_cfa 7, 8
-	.cfi_restore 6
-        ret
-	.cfi_def_cfa 6, 16
-	.cfi_offset 6, -16
-..B1.3:
-        vmovupd   %xmm3, 128(%rsp)
-        vmovupd   %xmm0, 192(%rsp)
-        je        ..B1.2
-..B1.6:
-        xorl      %eax, %eax
-        vmovups   %xmm8, 80(%rsp)
-        vmovups   %xmm9, 64(%rsp)
-        vmovups   %xmm10, 48(%rsp)
-        vmovups   %xmm11, 32(%rsp)
-        vmovups   %xmm12, 16(%rsp)
-        vmovups   %xmm15, (%rsp)
-        movq      %rsi, 104(%rsp)
-        movq      %rdi, 96(%rsp)
-        movq      %r12, 120(%rsp)
-        movl      %eax, %r12d
-        movq      %r13, 112(%rsp)
-        movl      %edx, %r13d
-..B1.7:
-        btl       %r12d, %r13d
-        jc        ..B1.10
-..B1.8:
-        incl      %r12d
-        cmpl      $2, %r12d
-        jl        ..B1.7
-..B1.9:
-        vmovups   80(%rsp), %xmm8
-	.cfi_restore 25
-        vmovups   64(%rsp), %xmm9
-	.cfi_restore 26
-        vmovups   48(%rsp), %xmm10
-	.cfi_restore 27
-        vmovups   32(%rsp), %xmm11
-	.cfi_restore 28
-        vmovups   16(%rsp), %xmm12
-	.cfi_restore 29
-        vmovups   (%rsp), %xmm15
-	.cfi_restore 32
-        movq      104(%rsp), %rsi
-	.cfi_restore 4
-        movq      96(%rsp), %rdi
-	.cfi_restore 5
-        movq      120(%rsp), %r12
-	.cfi_restore 12
-        movq      112(%rsp), %r13
-	.cfi_restore 13
-        vmovupd   192(%rsp), %xmm0
-        jmp       ..B1.2
-..B1.10:
-        lea       128(%rsp,%r12,8), %rdi
-        lea       192(%rsp,%r12,8), %rsi
-        call      __svml_datan_ha_cout_rare_internal
-        jmp       ..B1.8
-END(atan)
-	.data
-# -- End  __svml_atan2_ha_l9
-	.data
-	.hidden __svml_datan_ha_data_internal
-	.hidden __svml_datan_ha_cout_rare_internal
-	.section .note.GNU-stack, ""
-# End
diff --git a/libm/x86_64/atan_cout_avx2.S b/libm/x86_64/atan_cout_avx2.S
deleted file mode 100644
index 212ffd3c3..000000000
--- a/libm/x86_64/atan_cout_avx2.S
+++ /dev/null
@@ -1,859 +0,0 @@
-/*
-Copyright (C) 2019 The Android Open Source Project
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
- * Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
- * Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in
-   the documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-SUCH DAMAGE.
-*/
-
-# -- Machine type EM64t
-	.text
-..TXTST0:
-.L_2__routine_start___svml_datan_ha_cout_rare_internal_0:
-# -- Begin  __svml_datan_ha_cout_rare_internal
-	.text
-       .align    16,0x90
-	.hidden __svml_datan_ha_cout_rare_internal
-	.globl __svml_datan_ha_cout_rare_internal
-__svml_datan_ha_cout_rare_internal:
-# parameter 1: %rdi
-# parameter 2: %rsi
-..B1.1:
-	.cfi_startproc
-..L1:
-
-        movzwl    6(%rdi), %r8d
-        andl      $32752, %r8d
-        shrl      $4, %r8d
-        cmpl      $2047, %r8d
-        je        ..B1.12
-..B1.2:
-        movq      (%rdi), %rdx
-        movq      %rdx, -16(%rsp)
-        shrq      $56, %rdx
-        movb      7(%rdi), %al
-        andl      $127, %edx
-        movb      %dl, -9(%rsp)
-        movsd     -16(%rsp), %xmm0
-        shrb      $7, %al
-        comisd    1888+_vmldAtanHATab(%rip), %xmm0
-        movl      -12(%rsp), %ecx
-        jb        ..B1.6
-..B1.3:
-        movsd     1896+_vmldAtanHATab(%rip), %xmm1
-        comisd    %xmm0, %xmm1
-        jbe       ..B1.5
-..B1.4:
-        movl      4(%rdi), %edx
-        movl      %ecx, %edi
-        andl      $-524288, %ecx
-        andl      $-1048576, %edi
-        addl      $262144, %ecx
-        movaps    %xmm0, %xmm8
-        andl      $1048575, %ecx
-        movaps    %xmm0, %xmm9
-        movsd     %xmm0, -56(%rsp)
-        orl       %ecx, %edi
-        movl      $0, -56(%rsp)
-        andl      $1048575, %edx
-        movl      %edi, -52(%rsp)
-        lea       _vmldAtanHATab(%rip), %rcx
-        movsd     1928+_vmldAtanHATab(%rip), %xmm3
-        movsd     -56(%rsp), %xmm14
-        shll      $20, %r8d
-        subsd     -56(%rsp), %xmm8
-        mulsd     1928+_vmldAtanHATab(%rip), %xmm9
-        shlb      $7, %al
-        mulsd     %xmm8, %xmm3
-        movsd     %xmm3, -48(%rsp)
-        orl       %edx, %r8d
-        movsd     -48(%rsp), %xmm4
-        addl      $-1069547520, %r8d
-        sarl      $18, %r8d
-        subsd     %xmm8, %xmm4
-        movsd     %xmm4, -40(%rsp)
-        andl      $-2, %r8d
-        movsd     -48(%rsp), %xmm6
-        movsd     -40(%rsp), %xmm5
-        movslq    %r8d, %r8
-        subsd     %xmm5, %xmm6
-        movsd     %xmm6, -48(%rsp)
-        movsd     -48(%rsp), %xmm7
-        movsd     1904+_vmldAtanHATab(%rip), %xmm5
-        subsd     %xmm7, %xmm8
-        movsd     %xmm8, -40(%rsp)
-        movsd     -48(%rsp), %xmm1
-        movsd     -40(%rsp), %xmm2
-        movsd     %xmm9, -48(%rsp)
-        movsd     -48(%rsp), %xmm10
-        movsd     1904+_vmldAtanHATab(%rip), %xmm7
-        subsd     -16(%rsp), %xmm10
-        movsd     %xmm10, -40(%rsp)
-        movsd     -48(%rsp), %xmm12
-        movsd     -40(%rsp), %xmm11
-        subsd     %xmm11, %xmm12
-        movsd     %xmm12, -48(%rsp)
-        movsd     -48(%rsp), %xmm13
-        subsd     %xmm13, %xmm0
-        movsd     1904+_vmldAtanHATab(%rip), %xmm13
-        movsd     %xmm0, -40(%rsp)
-        movsd     -48(%rsp), %xmm3
-        movsd     -40(%rsp), %xmm4
-        mulsd     %xmm14, %xmm3
-        mulsd     %xmm14, %xmm4
-        movaps    %xmm3, %xmm15
-        addsd     %xmm4, %xmm15
-        movsd     %xmm15, -48(%rsp)
-        movsd     -48(%rsp), %xmm0
-        subsd     %xmm0, %xmm3
-        addsd     %xmm3, %xmm4
-        movsd     %xmm4, -40(%rsp)
-        movsd     -48(%rsp), %xmm11
-        movsd     -40(%rsp), %xmm0
-        addsd     %xmm11, %xmm5
-        movsd     %xmm5, -48(%rsp)
-        movsd     -48(%rsp), %xmm6
-        movsd     1928+_vmldAtanHATab(%rip), %xmm4
-        subsd     %xmm6, %xmm7
-        movsd     %xmm7, -40(%rsp)
-        movsd     -48(%rsp), %xmm9
-        movsd     -40(%rsp), %xmm8
-        addsd     %xmm8, %xmm9
-        movsd     1904+_vmldAtanHATab(%rip), %xmm8
-        movsd     %xmm9, -32(%rsp)
-        movsd     -40(%rsp), %xmm10
-        addsd     %xmm10, %xmm11
-        movsd     %xmm11, -40(%rsp)
-        movsd     -32(%rsp), %xmm12
-        subsd     %xmm12, %xmm13
-        movsd     %xmm13, -32(%rsp)
-        movsd     -40(%rsp), %xmm3
-        movsd     -32(%rsp), %xmm14
-        addsd     %xmm14, %xmm3
-        movsd     %xmm3, -32(%rsp)
-        movsd     -48(%rsp), %xmm7
-        mulsd     %xmm7, %xmm4
-        movsd     -32(%rsp), %xmm15
-        movsd     %xmm4, -48(%rsp)
-        addsd     %xmm15, %xmm0
-        movsd     -48(%rsp), %xmm5
-        subsd     %xmm7, %xmm5
-        movsd     %xmm5, -40(%rsp)
-        movsd     -48(%rsp), %xmm6
-        movsd     -40(%rsp), %xmm15
-        subsd     %xmm15, %xmm6
-        movsd     %xmm6, -48(%rsp)
-        movsd     -48(%rsp), %xmm3
-        subsd     %xmm3, %xmm7
-        movsd     %xmm7, -40(%rsp)
-        movsd     -48(%rsp), %xmm13
-        divsd     %xmm13, %xmm8
-        movsd     -40(%rsp), %xmm3
-        addsd     %xmm0, %xmm3
-        movsd     1928+_vmldAtanHATab(%rip), %xmm0
-        mulsd     %xmm8, %xmm0
-        movsd     %xmm0, -40(%rsp)
-        movsd     -40(%rsp), %xmm9
-        movsd     1904+_vmldAtanHATab(%rip), %xmm0
-        subsd     %xmm8, %xmm9
-        movsd     %xmm9, -32(%rsp)
-        movsd     -40(%rsp), %xmm11
-        movsd     -32(%rsp), %xmm10
-        subsd     %xmm10, %xmm11
-        movsd     %xmm11, -32(%rsp)
-        movsd     -32(%rsp), %xmm12
-        mulsd     %xmm12, %xmm13
-        movsd     -32(%rsp), %xmm14
-        subsd     %xmm13, %xmm0
-        mulsd     %xmm14, %xmm3
-        movsd     %xmm3, -40(%rsp)
-        movsd     -40(%rsp), %xmm13
-        movsd     (%rcx,%r8,8), %xmm3
-        subsd     %xmm13, %xmm0
-        movsd     %xmm0, -40(%rsp)
-        movaps    %xmm3, %xmm0
-        movsd     -40(%rsp), %xmm7
-        movsd     -32(%rsp), %xmm6
-        movsd     -40(%rsp), %xmm4
-        movaps    %xmm6, %xmm9
-        movsd     -32(%rsp), %xmm5
-        mulsd     %xmm2, %xmm6
-        addsd     1904+_vmldAtanHATab(%rip), %xmm7
-        mulsd     %xmm1, %xmm9
-        mulsd     %xmm4, %xmm7
-        mulsd     %xmm5, %xmm7
-        movaps    %xmm7, %xmm8
-        mulsd     %xmm2, %xmm8
-        mulsd     %xmm7, %xmm1
-        addsd     %xmm6, %xmm8
-        movsd     1872+_vmldAtanHATab(%rip), %xmm4
-        addsd     %xmm1, %xmm8
-        movsd     %xmm8, -48(%rsp)
-        movaps    %xmm9, %xmm1
-        movsd     -48(%rsp), %xmm6
-        addsd     %xmm6, %xmm1
-        movsd     %xmm1, -48(%rsp)
-        movsd     -48(%rsp), %xmm2
-        subsd     %xmm2, %xmm9
-        addsd     %xmm6, %xmm9
-        movsd     %xmm9, -40(%rsp)
-        movsd     -48(%rsp), %xmm7
-        movaps    %xmm7, %xmm5
-        addsd     %xmm7, %xmm0
-        mulsd     %xmm7, %xmm5
-        mulsd     %xmm5, %xmm4
-        movsd     -40(%rsp), %xmm8
-        movsd     %xmm0, -48(%rsp)
-        movsd     -48(%rsp), %xmm1
-        addsd     1864+_vmldAtanHATab(%rip), %xmm4
-        subsd     %xmm1, %xmm3
-        mulsd     %xmm5, %xmm4
-        addsd     %xmm7, %xmm3
-        addsd     1856+_vmldAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        movsd     %xmm3, -40(%rsp)
-        movsd     -48(%rsp), %xmm11
-        movsd     -40(%rsp), %xmm10
-        addsd     1848+_vmldAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        addsd     1840+_vmldAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        addsd     1832+_vmldAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        addsd     1824+_vmldAtanHATab(%rip), %xmm4
-        mulsd     %xmm4, %xmm5
-        mulsd     %xmm5, %xmm7
-        addsd     %xmm7, %xmm8
-        addsd     8(%rcx,%r8,8), %xmm8
-        addsd     %xmm8, %xmm10
-        addsd     %xmm10, %xmm11
-        movsd     %xmm11, -24(%rsp)
-        movb      -17(%rsp), %r9b
-        andb      $127, %r9b
-        orb       %al, %r9b
-        movb      %r9b, -17(%rsp)
-        movq      -24(%rsp), %rax
-        movq      %rax, (%rsi)
-        jmp       ..B1.11
-..B1.5:
-        movsd     1912+_vmldAtanHATab(%rip), %xmm0
-        shlb      $7, %al
-        addsd     1920+_vmldAtanHATab(%rip), %xmm0
-        movsd     %xmm0, -24(%rsp)
-        movb      -17(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -17(%rsp)
-        movq      -24(%rsp), %rax
-        movq      %rax, (%rsi)
-        jmp       ..B1.11
-..B1.6:
-        comisd    1880+_vmldAtanHATab(%rip), %xmm0
-        jb        ..B1.8
-..B1.7:
-        movaps    %xmm0, %xmm2
-        mulsd     %xmm0, %xmm2
-        shlb      $7, %al
-        movsd     1872+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1864+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1856+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1848+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1840+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1832+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1824+_vmldAtanHATab(%rip), %xmm1
-        mulsd     %xmm1, %xmm2
-        mulsd     %xmm0, %xmm2
-        addsd     %xmm0, %xmm2
-        movsd     %xmm2, -24(%rsp)
-        movb      -17(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -17(%rsp)
-        movq      -24(%rsp), %rax
-        movq      %rax, (%rsi)
-        jmp       ..B1.11
-..B1.8:
-        movzwl    -10(%rsp), %edx
-        testl     $32752, %edx
-        je        ..B1.10
-..B1.9:
-        movsd     1904+_vmldAtanHATab(%rip), %xmm1
-        shlb      $7, %al
-        addsd     %xmm0, %xmm1
-        movsd     %xmm1, -48(%rsp)
-        movsd     -48(%rsp), %xmm0
-        mulsd     -16(%rsp), %xmm0
-        movsd     %xmm0, -24(%rsp)
-        movb      -17(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -17(%rsp)
-        movq      -24(%rsp), %rax
-        movq      %rax, (%rsi)
-        jmp       ..B1.11
-..B1.10:
-        mulsd     %xmm0, %xmm0
-        shlb      $7, %al
-        movsd     %xmm0, -48(%rsp)
-        movsd     -48(%rsp), %xmm0
-        addsd     -16(%rsp), %xmm0
-        movsd     %xmm0, -24(%rsp)
-        movb      -17(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -17(%rsp)
-        movq      -24(%rsp), %rax
-        movq      %rax, (%rsi)
-..B1.11:
-        xorl      %eax, %eax
-        ret
-..B1.12:
-        testl     $1048575, 4(%rdi)
-        jne       ..B1.15
-..B1.13:
-        cmpl      $0, (%rdi)
-        jne       ..B1.15
-..B1.14:
-        movsd     1912+_vmldAtanHATab(%rip), %xmm0
-        movb      7(%rdi), %al
-        andb      $-128, %al
-        addsd     1920+_vmldAtanHATab(%rip), %xmm0
-        movsd     %xmm0, -24(%rsp)
-        movb      -17(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -17(%rsp)
-        movq      -24(%rsp), %rcx
-        movq      %rcx, (%rsi)
-        jmp       ..B1.11
-..B1.15:
-        movsd     (%rdi), %xmm0
-        addsd     %xmm0, %xmm0
-        movsd     %xmm0, (%rsi)
-        jmp       ..B1.11
-        .align    16,0x90
-	.cfi_endproc
-	.type	__svml_datan_ha_cout_rare_internal,@function
-	.size	__svml_datan_ha_cout_rare_internal,.-__svml_datan_ha_cout_rare_internal
-..LN__svml_datan_ha_cout_rare_internal.0:
-	.data
-# -- End  __svml_datan_ha_cout_rare_internal
-	.section .rodata, "a"
-	.align 32
-	.align 32
-_vmldAtanHATab:
-	.long	3892314112
-	.long	1069799150
-	.long	2332892550
-	.long	1039715405
-	.long	1342177280
-	.long	1070305495
-	.long	270726690
-	.long	1041535749
-	.long	939524096
-	.long	1070817911
-	.long	2253973841
-	.long	3188654726
-	.long	3221225472
-	.long	1071277294
-	.long	3853927037
-	.long	1043226911
-	.long	2818572288
-	.long	1071767563
-	.long	2677759107
-	.long	1044314101
-	.long	3355443200
-	.long	1072103591
-	.long	1636578514
-	.long	3191094734
-	.long	1476395008
-	.long	1072475260
-	.long	1864703685
-	.long	3188646936
-	.long	805306368
-	.long	1072747407
-	.long	192551812
-	.long	3192726267
-	.long	2013265920
-	.long	1072892781
-	.long	2240369452
-	.long	1043768538
-	.long	0
-	.long	1072999953
-	.long	3665168337
-	.long	3192705970
-	.long	402653184
-	.long	1073084787
-	.long	1227953434
-	.long	3192313277
-	.long	2013265920
-	.long	1073142981
-	.long	3853283127
-	.long	1045277487
-	.long	805306368
-	.long	1073187261
-	.long	1676192264
-	.long	3192868861
-	.long	134217728
-	.long	1073217000
-	.long	4290763938
-	.long	1042034855
-	.long	671088640
-	.long	1073239386
-	.long	994303084
-	.long	3189643768
-	.long	402653184
-	.long	1073254338
-	.long	1878067156
-	.long	1042652475
-	.long	1610612736
-	.long	1073265562
-	.long	670314820
-	.long	1045138554
-	.long	3221225472
-	.long	1073273048
-	.long	691126919
-	.long	3189987794
-	.long	3489660928
-	.long	1073278664
-	.long	1618990832
-	.long	3188194509
-	.long	1207959552
-	.long	1073282409
-	.long	2198872939
-	.long	1044806069
-	.long	3489660928
-	.long	1073285217
-	.long	2633982383
-	.long	1042307894
-	.long	939524096
-	.long	1073287090
-	.long	1059367786
-	.long	3189114230
-	.long	2281701376
-	.long	1073288494
-	.long	3158525533
-	.long	1044484961
-	.long	3221225472
-	.long	1073289430
-	.long	286581777
-	.long	1044893263
-	.long	4026531840
-	.long	1073290132
-	.long	2000245215
-	.long	3191647611
-	.long	134217728
-	.long	1073290601
-	.long	4205071590
-	.long	1045035927
-	.long	536870912
-	.long	1073290952
-	.long	2334392229
-	.long	1043447393
-	.long	805306368
-	.long	1073291186
-	.long	2281458177
-	.long	3188885569
-	.long	3087007744
-	.long	1073291361
-	.long	691611507
-	.long	1044733832
-	.long	3221225472
-	.long	1073291478
-	.long	1816229550
-	.long	1044363390
-	.long	2281701376
-	.long	1073291566
-	.long	1993843750
-	.long	3189837440
-	.long	134217728
-	.long	1073291625
-	.long	3654754496
-	.long	1044970837
-	.long	4026531840
-	.long	1073291668
-	.long	3224300229
-	.long	3191935390
-	.long	805306368
-	.long	1073291698
-	.long	2988777976
-	.long	3188950659
-	.long	536870912
-	.long	1073291720
-	.long	1030371341
-	.long	1043402665
-	.long	3221225472
-	.long	1073291734
-	.long	1524463765
-	.long	1044361356
-	.long	3087007744
-	.long	1073291745
-	.long	2754295320
-	.long	1044731036
-	.long	134217728
-	.long	1073291753
-	.long	3099629057
-	.long	1044970710
-	.long	2281701376
-	.long	1073291758
-	.long	962914160
-	.long	3189838838
-	.long	805306368
-	.long	1073291762
-	.long	3543908206
-	.long	3188950786
-	.long	4026531840
-	.long	1073291764
-	.long	1849909620
-	.long	3191935434
-	.long	3221225472
-	.long	1073291766
-	.long	1641333636
-	.long	1044361352
-	.long	536870912
-	.long	1073291768
-	.long	1373968792
-	.long	1043402654
-	.long	134217728
-	.long	1073291769
-	.long	2033191599
-	.long	1044970710
-	.long	3087007744
-	.long	1073291769
-	.long	4117947437
-	.long	1044731035
-	.long	805306368
-	.long	1073291770
-	.long	315378368
-	.long	3188950787
-	.long	2281701376
-	.long	1073291770
-	.long	2428571750
-	.long	3189838838
-	.long	3221225472
-	.long	1073291770
-	.long	1608007466
-	.long	1044361352
-	.long	4026531840
-	.long	1073291770
-	.long	1895711420
-	.long	3191935434
-	.long	134217728
-	.long	1073291771
-	.long	2031108713
-	.long	1044970710
-	.long	536870912
-	.long	1073291771
-	.long	1362518342
-	.long	1043402654
-	.long	805306368
-	.long	1073291771
-	.long	317461253
-	.long	3188950787
-	.long	939524096
-	.long	1073291771
-	.long	4117231784
-	.long	1044731035
-	.long	1073741824
-	.long	1073291771
-	.long	1607942376
-	.long	1044361352
-	.long	1207959552
-	.long	1073291771
-	.long	2428929577
-	.long	3189838838
-	.long	1207959552
-	.long	1073291771
-	.long	2031104645
-	.long	1044970710
-	.long	1342177280
-	.long	1073291771
-	.long	1895722602
-	.long	3191935434
-	.long	1342177280
-	.long	1073291771
-	.long	317465322
-	.long	3188950787
-	.long	1342177280
-	.long	1073291771
-	.long	1362515546
-	.long	1043402654
-	.long	1342177280
-	.long	1073291771
-	.long	1607942248
-	.long	1044361352
-	.long	1342177280
-	.long	1073291771
-	.long	4117231610
-	.long	1044731035
-	.long	1342177280
-	.long	1073291771
-	.long	2031104637
-	.long	1044970710
-	.long	1342177280
-	.long	1073291771
-	.long	1540251232
-	.long	1045150466
-	.long	1342177280
-	.long	1073291771
-	.long	2644671394
-	.long	1045270303
-	.long	1342177280
-	.long	1073291771
-	.long	2399244691
-	.long	1045360181
-	.long	1342177280
-	.long	1073291771
-	.long	803971124
-	.long	1045420100
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192879152
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192849193
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192826724
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192811744
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192800509
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192793019
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192787402
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192783657
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192780848
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192778976
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192777572
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192776635
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192775933
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192775465
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192775114
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774880
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192774704
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774587
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192774500
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774441
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192774397
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774368
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192774346
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774331
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192774320
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774313
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192774308
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774304
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192774301
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774299
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192774298
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774297
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192774296
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774296
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192774296
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1466225875
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1343512524
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1251477510
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1190120835
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1144103328
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1113424990
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1090416237
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1075077068
-	.long	3192774295
-	.long	1431655765
-	.long	3218429269
-	.long	2576978363
-	.long	1070176665
-	.long	2453154343
-	.long	3217180964
-	.long	4189149139
-	.long	1069314502
-	.long	1775019125
-	.long	3216459198
-	.long	273199057
-	.long	1068739452
-	.long	874748308
-	.long	3215993277
-	.long	0
-	.long	1017118720
-	.long	0
-	.long	1069547520
-	.long	0
-	.long	1129316352
-	.long	0
-	.long	1072693248
-	.long	1413754136
-	.long	1073291771
-	.long	856972295
-	.long	1016178214
-	.long	33554432
-	.long	1101004800
-	.type	_vmldAtanHATab,@object
-	.size	_vmldAtanHATab,1936
-	.data
-	.section .note.GNU-stack, ""
-# End
diff --git a/libm/x86_64/atan_data_avx2.S b/libm/x86_64/atan_data_avx2.S
deleted file mode 100644
index 3d799321b..000000000
--- a/libm/x86_64/atan_data_avx2.S
+++ /dev/null
@@ -1,1102 +0,0 @@
-/*
-Copyright (C) 2019 The Android Open Source Project
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
- * Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
- * Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in
-   the documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-SUCH DAMAGE.
-*/
-
-# -- Machine type EM64t
-	.section .rodata, "a"
-	.align 64
-	.align 64
-	.hidden __svml_datan_ha_data_internal_avx512
-	.globl __svml_datan_ha_data_internal_avx512
-__svml_datan_ha_data_internal_avx512:
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1125646336
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	1075806208
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	3220176896
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	1206910976
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	4180443357
-	.long	1070553973
-	.long	90291023
-	.long	1071492199
-	.long	2737217249
-	.long	1071945615
-	.long	1413754136
-	.long	1072243195
-	.long	1468297118
-	.long	1072475260
-	.long	3531732635
-	.long	1072657163
-	.long	744202399
-	.long	1072747407
-	.long	2464923204
-	.long	1072805601
-	.long	1436891685
-	.long	1072853231
-	.long	2037009832
-	.long	1072892781
-	.long	1826698067
-	.long	1072926058
-	.long	1803191648
-	.long	1072954391
-	.long	2205372832
-	.long	1072978772
-	.long	4234512805
-	.long	1072999952
-	.long	3932628503
-	.long	1073018509
-	.long	2501811453
-	.long	1073034892
-	.long	866379431
-	.long	1073049455
-	.long	1376865888
-	.long	1073062480
-	.long	3290094269
-	.long	1073074195
-	.long	354764887
-	.long	1073084787
-	.long	3332975497
-	.long	1073094406
-	.long	1141460092
-	.long	1073103181
-	.long	745761286
-	.long	1073111216
-	.long	1673304509
-	.long	1073118600
-	.long	983388243
-	.long	1073125409
-	.long	3895509104
-	.long	1073131706
-	.long	2128523669
-	.long	1073137548
-	.long	2075485693
-	.long	1073142981
-	.long	121855980
-	.long	1073148047
-	.long	4181733783
-	.long	1073152780
-	.long	2887813284
-	.long	1073157214
-	.long	0
-	.long	0
-	.long	1022865341
-	.long	1013492590
-	.long	573531618
-	.long	1014639487
-	.long	2280825944
-	.long	1014120858
-	.long	856972295
-	.long	1015129638
-	.long	986810987
-	.long	1015077601
-	.long	2062601149
-	.long	1013974920
-	.long	589036912
-	.long	3164328156
-	.long	1787331214
-	.long	1016798022
-	.long	2942272763
-	.long	3164235441
-	.long	2956702105
-	.long	1016472908
-	.long	3903328092
-	.long	3162582135
-	.long	3175026820
-	.long	3158589859
-	.long	787328196
-	.long	1014621351
-	.long	2317874517
-	.long	3163795518
-	.long	4071621134
-	.long	1016673529
-	.long	2492111345
-	.long	3164172103
-	.long	3606178875
-	.long	3162371821
-	.long	3365790232
-	.long	1014547152
-	.long	2710887773
-	.long	1017086651
-	.long	2755350986
-	.long	3162706257
-	.long	198095269
-	.long	3162802133
-	.long	2791076759
-	.long	3164364640
-	.long	4214434319
-	.long	3162164074
-	.long	773754012
-	.long	3164190653
-	.long	139561443
-	.long	3164313657
-	.long	2197796619
-	.long	3164066219
-	.long	3592486882
-	.long	1016669082
-	.long	1148791015
-	.long	3163724934
-	.long	386789398
-	.long	3163117479
-	.long	2518816264
-	.long	3162291736
-	.long	2545101323
-	.long	3164592727
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	16
-	.long	1125646336
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	4123328151
-	.long	1068689849
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	3295121612
-	.long	3216458327
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	4026078880
-	.long	1069314495
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2398029018
-	.long	3217180964
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	2576905246
-	.long	1070176665
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.long	1431655757
-	.long	3218429269
-	.type	__svml_datan_ha_data_internal_avx512,@object
-	.size	__svml_datan_ha_data_internal_avx512,1536
-	.align 64
-	.hidden __svml_datan_ha_data_internal
-	.globl __svml_datan_ha_data_internal
-__svml_datan_ha_data_internal:
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	0
-	.long	1413754136
-	.long	1073291771
-	.long	856972295
-	.long	1016178214
-	.long	0
-	.long	1073217536
-	.long	4294967295
-	.long	4294967295
-	.long	3531732635
-	.long	1072657163
-	.long	2062601149
-	.long	1013974920
-	.long	0
-	.long	1072693248
-	.long	4294967295
-	.long	4294967295
-	.long	1413754136
-	.long	1072243195
-	.long	856972295
-	.long	1015129638
-	.long	0
-	.long	1071644672
-	.long	4294967295
-	.long	4294967295
-	.long	90291023
-	.long	1071492199
-	.long	573531618
-	.long	1014639487
-	.long	0
-	.long	0
-	.long	4294967295
-	.long	4294967295
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1071382528
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1072889856
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1073971200
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	0
-	.long	1072037888
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	90291023
-	.long	1071492199
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	573531618
-	.long	1014639487
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	1413754136
-	.long	1072243195
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	856972295
-	.long	1015129638
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	3531732635
-	.long	1072657163
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	2062601149
-	.long	1013974920
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	1413754136
-	.long	1073291771
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	856972295
-	.long	1016178214
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1071644672
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	1073217536
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	0
-	.long	2147483648
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	4294967295
-	.long	2147483647
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	1413754136
-	.long	1074340347
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	0
-	.long	1017226816
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	4160749568
-	.long	4294967295
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1071382528
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1072889856
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1073971200
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	1072037888
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	4
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	3866310424
-	.long	1066132731
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	529668190
-	.long	3214953687
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1493047753
-	.long	1067887957
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	1554070819
-	.long	3215629941
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	3992437651
-	.long	1068372721
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	845965549
-	.long	3216052365
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	3073500986
-	.long	1068740914
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	426211919
-	.long	3216459217
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	435789718
-	.long	1069314503
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2453936673
-	.long	3217180964
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	2576977731
-	.long	1070176665
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	1431655762
-	.long	3218429269
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	2150629376
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.long	4258267136
-	.type	__svml_datan_ha_data_internal,@object
-	.size	__svml_datan_ha_data_internal,2688
-	.data
-	.section .note.GNU-stack, ""
-# End
diff --git a/libm/x86_64/atanf_avx2.S b/libm/x86_64/atanf_avx2.S
deleted file mode 100644
index fee676fe9..000000000
--- a/libm/x86_64/atanf_avx2.S
+++ /dev/null
@@ -1,220 +0,0 @@
-/*
-Copyright (C) 2019 The Android Open Source Project
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
- * Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
- * Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in
-   the documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-SUCH DAMAGE.
-*/
-
-#include <private/bionic_asm.h>
-# -- Begin  atanf
-ENTRY(atanf)
-# parameter 1: %xmm0
-..B1.1:
-..L1:
-
-        pushq     %rbp
-	.cfi_def_cfa_offset 16
-        movq      %rsp, %rbp
-	.cfi_def_cfa 6, 16
-	.cfi_offset 6, -16
-        andq      $-64, %rsp
-        subq      $192, %rsp
-        vandps    192+__svml_satan_ha_data_internal(%rip), %xmm0, %xmm3
-        vmovups   1984+__svml_satan_ha_data_internal(%rip), %xmm6
-        vpsubd    1920+__svml_satan_ha_data_internal(%rip), %xmm3, %xmm7
-        vpcmpgtd  %xmm6, %xmm7, %xmm4
-        vpcmpeqd  %xmm6, %xmm7, %xmm2
-        vmovups   384+__svml_satan_ha_data_internal(%rip), %xmm7
-        vpor      %xmm2, %xmm4, %xmm1
-        vmovups   %xmm12, 176(%rsp)
-        vpcmpgtd  %xmm3, %xmm7, %xmm5
-        vmovups   %xmm11, 48(%rsp)
-        vmovups   256+__svml_satan_ha_data_internal(%rip), %xmm12
-        vmovups   320+__svml_satan_ha_data_internal(%rip), %xmm11
-        vpcmpgtd  448+__svml_satan_ha_data_internal(%rip), %xmm3, %xmm7
-        vmovups   %xmm13, 144(%rsp)
-        vmovups   %xmm10, 160(%rsp)
-        vmovups   %xmm9, 80(%rsp)
-        vpcmpgtd  %xmm3, %xmm11, %xmm9
-        vmovups   %xmm0, (%rsp)
-        vpandn    %xmm5, %xmm9, %xmm6
-        vandps    128+__svml_satan_ha_data_internal(%rip), %xmm0, %xmm10
-        vpcmpgtd  %xmm3, %xmm12, %xmm0
-        vmovmskps %xmm1, %edx
-        vpxor     1728+__svml_satan_ha_data_internal(%rip), %xmm7, %xmm13
-        vmovups   768+__svml_satan_ha_data_internal(%rip), %xmm1
-        vmovups   832+__svml_satan_ha_data_internal(%rip), %xmm2
-        vsubps    %xmm1, %xmm3, %xmm12
-        vmovups   896+__svml_satan_ha_data_internal(%rip), %xmm4
-        vmovups   %xmm14, 112(%rsp)
-        vsubps    %xmm4, %xmm3, %xmm14
-        vmulps    %xmm4, %xmm3, %xmm4
-        vmovups   %xmm8, 96(%rsp)
-        vpandn    %xmm9, %xmm0, %xmm8
-        vpandn    %xmm13, %xmm5, %xmm9
-        vandps    %xmm0, %xmm3, %xmm13
-        vandps    %xmm8, %xmm12, %xmm11
-        vsubps    %xmm2, %xmm3, %xmm5
-        vmulps    %xmm2, %xmm3, %xmm2
-        vandps    %xmm6, %xmm5, %xmm12
-        vandps    %xmm9, %xmm14, %xmm5
-        vorps     %xmm11, %xmm13, %xmm11
-        vorps     %xmm5, %xmm12, %xmm12
-        vandps    64+__svml_satan_ha_data_internal(%rip), %xmm7, %xmm14
-        vorps     %xmm12, %xmm11, %xmm11
-        vmovups   __svml_satan_ha_data_internal(%rip), %xmm13
-        vorps     %xmm14, %xmm11, %xmm5
-        vandps    %xmm0, %xmm13, %xmm11
-        vaddps    %xmm2, %xmm13, %xmm14
-        vmulps    %xmm1, %xmm3, %xmm0
-        vcvtps2pd %xmm5, %ymm5
-        vandps    %xmm6, %xmm14, %xmm14
-        vaddps    %xmm0, %xmm13, %xmm1
-        vaddps    %xmm4, %xmm13, %xmm13
-        vandps    %xmm8, %xmm1, %xmm12
-        vandps    %xmm9, %xmm13, %xmm0
-        vandps    %xmm7, %xmm3, %xmm13
-        vorps     %xmm12, %xmm11, %xmm3
-        vorps     %xmm0, %xmm14, %xmm12
-        vorps     %xmm12, %xmm3, %xmm11
-        vandps    960+__svml_satan_ha_data_internal(%rip), %xmm8, %xmm0
-        vorps     %xmm13, %xmm11, %xmm11
-        vandps    1088+__svml_satan_ha_data_internal(%rip), %xmm6, %xmm1
-        vorps     %xmm1, %xmm0, %xmm4
-        vrcpps    %xmm11, %xmm0
-        vcvtps2pd %xmm11, %ymm13
-        vcvtps2pd %xmm0, %ymm1
-        vandps    1216+__svml_satan_ha_data_internal(%rip), %xmm9, %xmm2
-        vandps    1344+__svml_satan_ha_data_internal(%rip), %xmm7, %xmm3
-        vorps     %xmm3, %xmm2, %xmm14
-        vmulpd    %ymm1, %ymm13, %ymm13
-        vorps     %xmm14, %xmm4, %xmm12
-        vmovupd   1856+__svml_satan_ha_data_internal(%rip), %ymm4
-        vandps    1024+__svml_satan_ha_data_internal(%rip), %xmm8, %xmm8
-        vandps    1152+__svml_satan_ha_data_internal(%rip), %xmm6, %xmm6
-        vandps    1280+__svml_satan_ha_data_internal(%rip), %xmm9, %xmm9
-        vorps     %xmm6, %xmm8, %xmm6
-        vandps    1408+__svml_satan_ha_data_internal(%rip), %xmm7, %xmm7
-        vsubpd    %ymm13, %ymm4, %ymm3
-        vorps     %xmm7, %xmm9, %xmm7
-        vmulpd    %ymm3, %ymm1, %ymm2
-        vmulpd    %ymm3, %ymm3, %ymm14
-        vaddpd    %ymm2, %ymm1, %ymm11
-        vaddpd    %ymm14, %ymm4, %ymm0
-        vmulpd    %ymm0, %ymm11, %ymm1
-        vmulpd    %ymm1, %ymm5, %ymm5
-        vandpd    1792+__svml_satan_ha_data_internal(%rip), %ymm5, %ymm0
-        vcvtpd2ps %ymm0, %xmm11
-        vsubpd    %ymm0, %ymm5, %ymm1
-        vorps     %xmm7, %xmm6, %xmm0
-        vmulps    %xmm11, %xmm11, %xmm13
-        vcvtpd2ps %ymm1, %xmm2
-        vmulps    %xmm13, %xmm13, %xmm3
-        vaddps    %xmm0, %xmm2, %xmm0
-        vmulps    1472+__svml_satan_ha_data_internal(%rip), %xmm3, %xmm1
-        vmulps    1536+__svml_satan_ha_data_internal(%rip), %xmm3, %xmm4
-        vaddps    1600+__svml_satan_ha_data_internal(%rip), %xmm1, %xmm5
-        vaddps    1664+__svml_satan_ha_data_internal(%rip), %xmm4, %xmm8
-        vmulps    %xmm5, %xmm13, %xmm9
-        vaddps    %xmm9, %xmm8, %xmm14
-        vmulps    %xmm14, %xmm13, %xmm1
-        vmulps    %xmm1, %xmm11, %xmm2
-        vmovups   (%rsp), %xmm1
-        vaddps    %xmm2, %xmm0, %xmm3
-        vaddps    %xmm3, %xmm11, %xmm11
-        vaddps    %xmm11, %xmm12, %xmm12
-        vorps     %xmm10, %xmm12, %xmm0
-        vmovups   176(%rsp), %xmm12
-	.cfi_restore 29
-        testl     %edx, %edx
-        jne       ..B1.3
-..B1.2:
-        vzeroupper
-        vmovups   96(%rsp), %xmm8
-	.cfi_restore 25
-        vmovups   80(%rsp), %xmm9
-	.cfi_restore 26
-        vmovups   160(%rsp), %xmm10
-	.cfi_restore 27
-        vmovups   48(%rsp), %xmm11
-	.cfi_restore 28
-        vmovups   144(%rsp), %xmm13
-	.cfi_restore 30
-        vmovups   112(%rsp), %xmm14
-	.cfi_restore 31
-        movq      %rbp, %rsp
-        popq      %rbp
-	.cfi_def_cfa 7, 8
-	.cfi_restore 6
-        ret
-        .cfi_def_cfa 6, 16
-	.cfi_offset 6, -16
-..B1.3:
-        vmovups   %xmm1, 64(%rsp)
-        vmovups   %xmm0, 128(%rsp)
-..B1.6:
-        xorl      %eax, %eax
-        vmovups   %xmm12, 176(%rsp)
-        vmovups   %xmm15, (%rsp)
-        movq      %rsi, 24(%rsp)
-        movq      %rdi, 16(%rsp)
-        movq      %r12, 40(%rsp)
-        movl      %eax, %r12d
-        movq      %r13, 32(%rsp)
-        movl      %edx, %r13d
-..B1.7:
-        btl       %r12d, %r13d
-        jc        ..B1.10
-..B1.8:
-        incl      %r12d
-        cmpl      $4, %r12d
-        jl        ..B1.7
-..B1.9:
-        vmovups   176(%rsp), %xmm12
-	.cfi_restore 29
-        vmovups   (%rsp), %xmm15
-	.cfi_restore 32
-        movq      24(%rsp), %rsi
-	.cfi_restore 4
-        movq      16(%rsp), %rdi
-	.cfi_restore 5
-        movq      40(%rsp), %r12
-	.cfi_restore 12
-        movq      32(%rsp), %r13
-	.cfi_restore 13
-        vmovups   128(%rsp), %xmm0
-        jmp       ..B1.2
-..B1.10:
-        vzeroupper
-        lea       64(%rsp,%r12,4), %rdi
-        lea       128(%rsp,%r12,4), %rsi
-        call      __svml_satan_ha_cout_rare_internal
-        jmp       ..B1.8
-END(atanf)        
-# -- End  __svml_atanf4_ha_e9
-	.data
-	.hidden __svml_satan_ha_data_internal
-	.hidden __svml_satan_ha_cout_rare_internal
-	.section .note.GNU-stack, ""
-# End
diff --git a/libm/x86_64/atanf_cout_avx2.S b/libm/x86_64/atanf_cout_avx2.S
deleted file mode 100644
index 7927f9bbe..000000000
--- a/libm/x86_64/atanf_cout_avx2.S
+++ /dev/null
@@ -1,865 +0,0 @@
-/*
-Copyright (C) 2019 The Android Open Source Project
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
- * Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
- * Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in
-   the documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-SUCH DAMAGE.
-*/
-
-# -- Machine type EM64t
-	.text
-..TXTST0:
-.L_2__routine_start___svml_satan_ha_cout_rare_internal_0:
-# -- Begin  __svml_satan_ha_cout_rare_internal
-	.text
-       .align    16,0x90
-	.hidden __svml_satan_ha_cout_rare_internal
-	.globl __svml_satan_ha_cout_rare_internal
-__svml_satan_ha_cout_rare_internal:
-# parameter 1: %rdi
-# parameter 2: %rsi
-..B1.1:
-	.cfi_startproc
-..L1:
-
-        movzwl    2(%rdi), %edx
-        andl      $32640, %edx
-        shrl      $7, %edx
-        cmpl      $255, %edx
-        je        ..B1.12
-..B1.2:
-        movss     (%rdi), %xmm1
-        pxor      %xmm0, %xmm0
-        cvtss2sd  %xmm1, %xmm0
-        movsd     %xmm0, -8(%rsp)
-        andb      $127, -1(%rsp)
-        movsd     -8(%rsp), %xmm0
-        movb      3(%rdi), %al
-        shrb      $7, %al
-        comisd    1888+_vmlsAtanHATab(%rip), %xmm0
-        movl      -4(%rsp), %ecx
-        jb        ..B1.6
-..B1.3:
-        movsd     1896+_vmlsAtanHATab(%rip), %xmm1
-        comisd    %xmm0, %xmm1
-        jbe       ..B1.5
-..B1.4:
-        movl      %ecx, %edx
-        movl      %ecx, %edi
-        andl      $-524288, %ecx
-        andl      $-1048576, %edi
-        addl      $262144, %ecx
-        movaps    %xmm0, %xmm8
-        andl      $1048575, %ecx
-        movaps    %xmm0, %xmm9
-        movsd     %xmm0, -40(%rsp)
-        orl       %ecx, %edi
-        movl      $0, -40(%rsp)
-        andl      $1048575, %edx
-        movl      %edi, -36(%rsp)
-        lea       _vmlsAtanHATab(%rip), %rcx
-        movsd     1928+_vmlsAtanHATab(%rip), %xmm3
-        movsd     -40(%rsp), %xmm14
-        movzwl    -2(%rsp), %r8d
-        mulsd     1928+_vmlsAtanHATab(%rip), %xmm9
-        andl      $32752, %r8d
-        subsd     -40(%rsp), %xmm8
-        shlb      $7, %al
-        mulsd     %xmm8, %xmm3
-        movsd     %xmm3, -32(%rsp)
-        movsd     -32(%rsp), %xmm4
-        shrl      $4, %r8d
-        subsd     %xmm8, %xmm4
-        movsd     %xmm4, -24(%rsp)
-        movsd     -32(%rsp), %xmm6
-        movsd     -24(%rsp), %xmm5
-        shll      $20, %r8d
-        subsd     %xmm5, %xmm6
-        movsd     %xmm6, -32(%rsp)
-        orl       %edx, %r8d
-        movsd     -32(%rsp), %xmm7
-        addl      $-1069547520, %r8d
-        movsd     1904+_vmlsAtanHATab(%rip), %xmm5
-        subsd     %xmm7, %xmm8
-        movsd     %xmm8, -24(%rsp)
-        movsd     -32(%rsp), %xmm1
-        movsd     -24(%rsp), %xmm2
-        movsd     %xmm9, -32(%rsp)
-        movsd     -32(%rsp), %xmm10
-        movsd     1904+_vmlsAtanHATab(%rip), %xmm7
-        sarl      $18, %r8d
-        subsd     -8(%rsp), %xmm10
-        movsd     %xmm10, -24(%rsp)
-        andl      $-2, %r8d
-        movsd     -32(%rsp), %xmm12
-        movsd     -24(%rsp), %xmm11
-        movslq    %r8d, %r8
-        subsd     %xmm11, %xmm12
-        movsd     %xmm12, -32(%rsp)
-        movsd     -32(%rsp), %xmm13
-        subsd     %xmm13, %xmm0
-        movsd     1904+_vmlsAtanHATab(%rip), %xmm13
-        movsd     %xmm0, -24(%rsp)
-        movsd     -32(%rsp), %xmm3
-        movsd     -24(%rsp), %xmm4
-        mulsd     %xmm14, %xmm3
-        mulsd     %xmm14, %xmm4
-        movaps    %xmm3, %xmm15
-        addsd     %xmm4, %xmm15
-        movsd     %xmm15, -32(%rsp)
-        movsd     -32(%rsp), %xmm0
-        subsd     %xmm0, %xmm3
-        addsd     %xmm3, %xmm4
-        movsd     %xmm4, -24(%rsp)
-        movsd     -32(%rsp), %xmm11
-        movsd     -24(%rsp), %xmm0
-        addsd     %xmm11, %xmm5
-        movsd     %xmm5, -32(%rsp)
-        movsd     -32(%rsp), %xmm6
-        movsd     1928+_vmlsAtanHATab(%rip), %xmm4
-        subsd     %xmm6, %xmm7
-        movsd     %xmm7, -24(%rsp)
-        movsd     -32(%rsp), %xmm9
-        movsd     -24(%rsp), %xmm8
-        addsd     %xmm8, %xmm9
-        movsd     1904+_vmlsAtanHATab(%rip), %xmm8
-        movsd     %xmm9, -16(%rsp)
-        movsd     -24(%rsp), %xmm10
-        addsd     %xmm10, %xmm11
-        movsd     %xmm11, -24(%rsp)
-        movsd     -16(%rsp), %xmm12
-        subsd     %xmm12, %xmm13
-        movsd     %xmm13, -16(%rsp)
-        movsd     -24(%rsp), %xmm3
-        movsd     -16(%rsp), %xmm14
-        addsd     %xmm14, %xmm3
-        movsd     %xmm3, -16(%rsp)
-        movsd     -32(%rsp), %xmm7
-        mulsd     %xmm7, %xmm4
-        movsd     -16(%rsp), %xmm15
-        movsd     %xmm4, -32(%rsp)
-        addsd     %xmm15, %xmm0
-        movsd     -32(%rsp), %xmm5
-        subsd     %xmm7, %xmm5
-        movsd     %xmm5, -24(%rsp)
-        movsd     -32(%rsp), %xmm6
-        movsd     -24(%rsp), %xmm15
-        subsd     %xmm15, %xmm6
-        movsd     %xmm6, -32(%rsp)
-        movsd     -32(%rsp), %xmm3
-        subsd     %xmm3, %xmm7
-        movsd     %xmm7, -24(%rsp)
-        movsd     -32(%rsp), %xmm13
-        divsd     %xmm13, %xmm8
-        movsd     -24(%rsp), %xmm3
-        addsd     %xmm0, %xmm3
-        movsd     1928+_vmlsAtanHATab(%rip), %xmm0
-        mulsd     %xmm8, %xmm0
-        movsd     %xmm0, -24(%rsp)
-        movsd     -24(%rsp), %xmm9
-        movsd     1904+_vmlsAtanHATab(%rip), %xmm0
-        subsd     %xmm8, %xmm9
-        movsd     %xmm9, -16(%rsp)
-        movsd     -24(%rsp), %xmm11
-        movsd     -16(%rsp), %xmm10
-        subsd     %xmm10, %xmm11
-        movsd     %xmm11, -16(%rsp)
-        movsd     -16(%rsp), %xmm12
-        mulsd     %xmm12, %xmm13
-        movsd     -16(%rsp), %xmm14
-        subsd     %xmm13, %xmm0
-        mulsd     %xmm14, %xmm3
-        movsd     %xmm3, -24(%rsp)
-        movsd     -24(%rsp), %xmm13
-        movsd     (%rcx,%r8,8), %xmm3
-        subsd     %xmm13, %xmm0
-        movsd     %xmm0, -24(%rsp)
-        movaps    %xmm3, %xmm0
-        movsd     -24(%rsp), %xmm7
-        movsd     -16(%rsp), %xmm6
-        movsd     -24(%rsp), %xmm4
-        movaps    %xmm6, %xmm9
-        movsd     -16(%rsp), %xmm5
-        mulsd     %xmm2, %xmm6
-        addsd     1904+_vmlsAtanHATab(%rip), %xmm7
-        mulsd     %xmm1, %xmm9
-        mulsd     %xmm4, %xmm7
-        mulsd     %xmm5, %xmm7
-        movaps    %xmm7, %xmm8
-        mulsd     %xmm2, %xmm8
-        mulsd     %xmm7, %xmm1
-        addsd     %xmm6, %xmm8
-        movsd     1872+_vmlsAtanHATab(%rip), %xmm4
-        addsd     %xmm1, %xmm8
-        movsd     %xmm8, -32(%rsp)
-        movaps    %xmm9, %xmm1
-        movsd     -32(%rsp), %xmm6
-        addsd     %xmm6, %xmm1
-        movsd     %xmm1, -32(%rsp)
-        movsd     -32(%rsp), %xmm2
-        subsd     %xmm2, %xmm9
-        addsd     %xmm6, %xmm9
-        movsd     %xmm9, -24(%rsp)
-        movsd     -32(%rsp), %xmm7
-        movaps    %xmm7, %xmm5
-        addsd     %xmm7, %xmm0
-        mulsd     %xmm7, %xmm5
-        mulsd     %xmm5, %xmm4
-        movsd     -24(%rsp), %xmm8
-        movsd     %xmm0, -32(%rsp)
-        movsd     -32(%rsp), %xmm1
-        addsd     1864+_vmlsAtanHATab(%rip), %xmm4
-        subsd     %xmm1, %xmm3
-        mulsd     %xmm5, %xmm4
-        addsd     %xmm7, %xmm3
-        addsd     1856+_vmlsAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        movsd     %xmm3, -24(%rsp)
-        movsd     -32(%rsp), %xmm11
-        movsd     -24(%rsp), %xmm10
-        addsd     1848+_vmlsAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        addsd     1840+_vmlsAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        addsd     1832+_vmlsAtanHATab(%rip), %xmm4
-        mulsd     %xmm5, %xmm4
-        addsd     1824+_vmlsAtanHATab(%rip), %xmm4
-        mulsd     %xmm4, %xmm5
-        mulsd     %xmm5, %xmm7
-        addsd     %xmm7, %xmm8
-        addsd     8(%rcx,%r8,8), %xmm8
-        addsd     %xmm8, %xmm10
-        addsd     %xmm10, %xmm11
-        movsd     %xmm11, -48(%rsp)
-        movb      -41(%rsp), %r9b
-        andb      $127, %r9b
-        orb       %al, %r9b
-        movb      %r9b, -41(%rsp)
-        movsd     -48(%rsp), %xmm2
-        cvtsd2ss  %xmm2, %xmm2
-        movss     %xmm2, (%rsi)
-        jmp       ..B1.11
-..B1.5:
-        movsd     1912+_vmlsAtanHATab(%rip), %xmm0
-        shlb      $7, %al
-        addsd     1920+_vmlsAtanHATab(%rip), %xmm0
-        movsd     %xmm0, -48(%rsp)
-        movb      -41(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -41(%rsp)
-        movsd     -48(%rsp), %xmm1
-        cvtsd2ss  %xmm1, %xmm1
-        movss     %xmm1, (%rsi)
-        jmp       ..B1.11
-..B1.6:
-        comisd    1880+_vmlsAtanHATab(%rip), %xmm0
-        jb        ..B1.8
-..B1.7:
-        movaps    %xmm0, %xmm2
-        mulsd     %xmm0, %xmm2
-        shlb      $7, %al
-        movsd     1872+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1864+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1856+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1848+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1840+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1832+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm2, %xmm1
-        addsd     1824+_vmlsAtanHATab(%rip), %xmm1
-        mulsd     %xmm1, %xmm2
-        mulsd     %xmm0, %xmm2
-        addsd     %xmm0, %xmm2
-        movsd     %xmm2, -48(%rsp)
-        movb      -41(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -41(%rsp)
-        movsd     -48(%rsp), %xmm0
-        cvtsd2ss  %xmm0, %xmm0
-        movss     %xmm0, (%rsi)
-        jmp       ..B1.11
-..B1.8:
-        testl     %edx, %edx
-        je        ..B1.10
-..B1.9:
-        movsd     1904+_vmlsAtanHATab(%rip), %xmm1
-        shlb      $7, %al
-        addsd     %xmm0, %xmm1
-        movsd     %xmm1, -32(%rsp)
-        movsd     -32(%rsp), %xmm0
-        mulsd     -8(%rsp), %xmm0
-        movsd     %xmm0, -48(%rsp)
-        movb      -41(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -41(%rsp)
-        movsd     -48(%rsp), %xmm2
-        cvtsd2ss  %xmm2, %xmm2
-        movss     %xmm2, (%rsi)
-        jmp       ..B1.11
-..B1.10:
-        mulss     %xmm1, %xmm1
-        shlb      $7, %al
-        movss     %xmm1, -56(%rsp)
-        movss     -56(%rsp), %xmm0
-        cvtss2sd  %xmm0, %xmm0
-        addsd     -8(%rsp), %xmm0
-        movsd     %xmm0, -48(%rsp)
-        movb      -41(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -41(%rsp)
-        movsd     -48(%rsp), %xmm1
-        cvtsd2ss  %xmm1, %xmm1
-        movss     %xmm1, (%rsi)
-..B1.11:
-        xorl      %eax, %eax
-        ret
-..B1.12:
-        testl     $8388607, (%rdi)
-        jne       ..B1.14
-..B1.13:
-        movsd     1912+_vmlsAtanHATab(%rip), %xmm0
-        movb      3(%rdi), %al
-        andb      $-128, %al
-        addsd     1920+_vmlsAtanHATab(%rip), %xmm0
-        movsd     %xmm0, -48(%rsp)
-        movb      -41(%rsp), %dl
-        andb      $127, %dl
-        orb       %al, %dl
-        movb      %dl, -41(%rsp)
-        movsd     -48(%rsp), %xmm1
-        cvtsd2ss  %xmm1, %xmm1
-        movss     %xmm1, (%rsi)
-        jmp       ..B1.11
-..B1.14:
-        movss     (%rdi), %xmm0
-        addss     %xmm0, %xmm0
-        movss     %xmm0, (%rsi)
-        jmp       ..B1.11
-        .align    16,0x90
-	.cfi_endproc
-	.type	__svml_satan_ha_cout_rare_internal,@function
-	.size	__svml_satan_ha_cout_rare_internal,.-__svml_satan_ha_cout_rare_internal
-..LN__svml_satan_ha_cout_rare_internal.0:
-	.data
-# -- End  __svml_satan_ha_cout_rare_internal
-	.section .rodata, "a"
-	.align 32
-	.align 32
-_vmlsAtanHATab:
-	.long	3892314112
-	.long	1069799150
-	.long	2332892550
-	.long	1039715405
-	.long	1342177280
-	.long	1070305495
-	.long	270726690
-	.long	1041535749
-	.long	939524096
-	.long	1070817911
-	.long	2253973841
-	.long	3188654726
-	.long	3221225472
-	.long	1071277294
-	.long	3853927037
-	.long	1043226911
-	.long	2818572288
-	.long	1071767563
-	.long	2677759107
-	.long	1044314101
-	.long	3355443200
-	.long	1072103591
-	.long	1636578514
-	.long	3191094734
-	.long	1476395008
-	.long	1072475260
-	.long	1864703685
-	.long	3188646936
-	.long	805306368
-	.long	1072747407
-	.long	192551812
-	.long	3192726267
-	.long	2013265920
-	.long	1072892781
-	.long	2240369452
-	.long	1043768538
-	.long	0
-	.long	1072999953
-	.long	3665168337
-	.long	3192705970
-	.long	402653184
-	.long	1073084787
-	.long	1227953434
-	.long	3192313277
-	.long	2013265920
-	.long	1073142981
-	.long	3853283127
-	.long	1045277487
-	.long	805306368
-	.long	1073187261
-	.long	1676192264
-	.long	3192868861
-	.long	134217728
-	.long	1073217000
-	.long	4290763938
-	.long	1042034855
-	.long	671088640
-	.long	1073239386
-	.long	994303084
-	.long	3189643768
-	.long	402653184
-	.long	1073254338
-	.long	1878067156
-	.long	1042652475
-	.long	1610612736
-	.long	1073265562
-	.long	670314820
-	.long	1045138554
-	.long	3221225472
-	.long	1073273048
-	.long	691126919
-	.long	3189987794
-	.long	3489660928
-	.long	1073278664
-	.long	1618990832
-	.long	3188194509
-	.long	1207959552
-	.long	1073282409
-	.long	2198872939
-	.long	1044806069
-	.long	3489660928
-	.long	1073285217
-	.long	2633982383
-	.long	1042307894
-	.long	939524096
-	.long	1073287090
-	.long	1059367786
-	.long	3189114230
-	.long	2281701376
-	.long	1073288494
-	.long	3158525533
-	.long	1044484961
-	.long	3221225472
-	.long	1073289430
-	.long	286581777
-	.long	1044893263
-	.long	4026531840
-	.long	1073290132
-	.long	2000245215
-	.long	3191647611
-	.long	134217728
-	.long	1073290601
-	.long	4205071590
-	.long	1045035927
-	.long	536870912
-	.long	1073290952
-	.long	2334392229
-	.long	1043447393
-	.long	805306368
-	.long	1073291186
-	.long	2281458177
-	.long	3188885569
-	.long	3087007744
-	.long	1073291361
-	.long	691611507
-	.long	1044733832
-	.long	3221225472
-	.long	1073291478
-	.long	1816229550
-	.long	1044363390
-	.long	2281701376
-	.long	1073291566
-	.long	1993843750
-	.long	3189837440
-	.long	134217728
-	.long	1073291625
-	.long	3654754496
-	.long	1044970837
-	.long	4026531840
-	.long	1073291668
-	.long	3224300229
-	.long	3191935390
-	.long	805306368
-	.long	1073291698
-	.long	2988777976
-	.long	3188950659
-	.long	536870912
-	.long	1073291720
-	.long	1030371341
-	.long	1043402665
-	.long	3221225472
-	.long	1073291734
-	.long	1524463765
-	.long	1044361356
-	.long	3087007744
-	.long	1073291745
-	.long	2754295320
-	.long	1044731036
-	.long	134217728
-	.long	1073291753
-	.long	3099629057
-	.long	1044970710
-	.long	2281701376
-	.long	1073291758
-	.long	962914160
-	.long	3189838838
-	.long	805306368
-	.long	1073291762
-	.long	3543908206
-	.long	3188950786
-	.long	4026531840
-	.long	1073291764
-	.long	1849909620
-	.long	3191935434
-	.long	3221225472
-	.long	1073291766
-	.long	1641333636
-	.long	1044361352
-	.long	536870912
-	.long	1073291768
-	.long	1373968792
-	.long	1043402654
-	.long	134217728
-	.long	1073291769
-	.long	2033191599
-	.long	1044970710
-	.long	3087007744
-	.long	1073291769
-	.long	4117947437
-	.long	1044731035
-	.long	805306368
-	.long	1073291770
-	.long	315378368
-	.long	3188950787
-	.long	2281701376
-	.long	1073291770
-	.long	2428571750
-	.long	3189838838
-	.long	3221225472
-	.long	1073291770
-	.long	1608007466
-	.long	1044361352
-	.long	4026531840
-	.long	1073291770
-	.long	1895711420
-	.long	3191935434
-	.long	134217728
-	.long	1073291771
-	.long	2031108713
-	.long	1044970710
-	.long	536870912
-	.long	1073291771
-	.long	1362518342
-	.long	1043402654
-	.long	805306368
-	.long	1073291771
-	.long	317461253
-	.long	3188950787
-	.long	939524096
-	.long	1073291771
-	.long	4117231784
-	.long	1044731035
-	.long	1073741824
-	.long	1073291771
-	.long	1607942376
-	.long	1044361352
-	.long	1207959552
-	.long	1073291771
-	.long	2428929577
-	.long	3189838838
-	.long	1207959552
-	.long	1073291771
-	.long	2031104645
-	.long	1044970710
-	.long	1342177280
-	.long	1073291771
-	.long	1895722602
-	.long	3191935434
-	.long	1342177280
-	.long	1073291771
-	.long	317465322
-	.long	3188950787
-	.long	1342177280
-	.long	1073291771
-	.long	1362515546
-	.long	1043402654
-	.long	1342177280
-	.long	1073291771
-	.long	1607942248
-	.long	1044361352
-	.long	1342177280
-	.long	1073291771
-	.long	4117231610
-	.long	1044731035
-	.long	1342177280
-	.long	1073291771
-	.long	2031104637
-	.long	1044970710
-	.long	1342177280
-	.long	1073291771
-	.long	1540251232
-	.long	1045150466
-	.long	1342177280
-	.long	1073291771
-	.long	2644671394
-	.long	1045270303
-	.long	1342177280
-	.long	1073291771
-	.long	2399244691
-	.long	1045360181
-	.long	1342177280
-	.long	1073291771
-	.long	803971124
-	.long	1045420100
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192879152
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192849193
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192826724
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192811744
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192800509
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192793019
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192787402
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192783657
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192780848
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192778976
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192777572
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192776635
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192775933
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192775465
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192775114
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774880
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192774704
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774587
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192774500
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774441
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192774397
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774368
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192774346
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774331
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192774320
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774313
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192774308
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774304
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192774301
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774299
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192774298
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774297
-	.long	1476395008
-	.long	1073291771
-	.long	3613709523
-	.long	3192774296
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774296
-	.long	1476395008
-	.long	1073291771
-	.long	177735686
-	.long	3192774296
-	.long	1476395008
-	.long	1073291771
-	.long	3490996172
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	2754716064
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	2263862659
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1895722605
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1650295902
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1466225875
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1343512524
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1251477510
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1190120835
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1144103328
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1113424990
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1090416237
-	.long	3192774295
-	.long	1476395008
-	.long	1073291771
-	.long	1075077068
-	.long	3192774295
-	.long	1431655765
-	.long	3218429269
-	.long	2576978363
-	.long	1070176665
-	.long	2453154343
-	.long	3217180964
-	.long	4189149139
-	.long	1069314502
-	.long	1775019125
-	.long	3216459198
-	.long	273199057
-	.long	1068739452
-	.long	874748308
-	.long	3215993277
-	.long	0
-	.long	1017118720
-	.long	0
-	.long	1069547520
-	.long	0
-	.long	1129316352
-	.long	0
-	.long	1072693248
-	.long	1413754136
-	.long	1073291771
-	.long	856972295
-	.long	1016178214
-	.long	33554432
-	.long	1101004800
-	.type	_vmlsAtanHATab,@object
-	.size	_vmlsAtanHATab,1936
-	.data
-	.section .note.GNU-stack, ""
-# End
diff --git a/libm/x86_64/atanf_data_avx2.S b/libm/x86_64/atanf_data_avx2.S
deleted file mode 100644
index b9102540c..000000000
--- a/libm/x86_64/atanf_data_avx2.S
+++ /dev/null
@@ -1,814 +0,0 @@
-/*
-Copyright (C) 2019 The Android Open Source Project
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
- * Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
- * Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in
-   the documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-SUCH DAMAGE.
-*/
-
-# -- Machine type EM64t
-	.section .rodata, "a"
-	.align 64
-	.align 64
-	.hidden __svml_satan_ha_data_internal_avx512
-	.globl __svml_satan_ha_data_internal_avx512
-__svml_satan_ha_data_internal_avx512:
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1241513984
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	1089994752
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	1333788672
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	0
-	.long	1048239024
-	.long	1055744824
-	.long	1059372157
-	.long	1061752795
-	.long	1063609315
-	.long	1065064543
-	.long	1065786489
-	.long	1066252045
-	.long	1066633083
-	.long	1066949484
-	.long	1067215699
-	.long	1067442363
-	.long	1067637412
-	.long	1067806856
-	.long	1067955311
-	.long	1068086373
-	.long	1068202874
-	.long	1068307075
-	.long	1068400798
-	.long	1068485529
-	.long	1068562486
-	.long	1068632682
-	.long	1068696961
-	.long	1068756035
-	.long	1068810506
-	.long	1068860887
-	.long	1068907620
-	.long	1068951084
-	.long	1068991608
-	.long	1069029480
-	.long	1069064949
-	.long	0
-	.long	2975494116
-	.long	833369962
-	.long	835299256
-	.long	2998648110
-	.long	2995239174
-	.long	3000492182
-	.long	860207626
-	.long	3008447516
-	.long	3005590622
-	.long	3000153675
-	.long	860754741
-	.long	859285590
-	.long	844944488
-	.long	2993069463
-	.long	858157665
-	.long	3006142000
-	.long	3007693206
-	.long	3009342234
-	.long	847469400
-	.long	3006114683
-	.long	852829553
-	.long	847325583
-	.long	860305056
-	.long	846145135
-	.long	2997638646
-	.long	855837703
-	.long	2979047222
-	.long	2995344192
-	.long	854092798
-	.long	3000498637
-	.long	859965578
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	1070141403
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3007036718
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	3188697310
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	1045219554
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.long	3198855850
-	.type	__svml_satan_ha_data_internal_avx512,@object
-	.size	__svml_satan_ha_data_internal_avx512,1024
-	.align 64
-	.hidden __svml_satan_ha_data_internal
-	.globl __svml_satan_ha_data_internal
-__svml_satan_ha_data_internal:
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	3212836864
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483648
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	2147483647
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1052770304
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1060655596
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1071644672
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1076625408
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1056964608
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1065353216
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1073741824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	1055744824
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	833369960
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	1061752792
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	875071576
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	1066252048
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	3034196096
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	1070141400
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	883460184
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	1034818345
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	3188674126
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	1045211707
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	3198855788
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	3758096384
-	.long	4294967295
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	0
-	.long	1072693248
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	2164260864
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.long	4227858432
-	.type	__svml_satan_ha_data_internal,@object
-	.size	__svml_satan_ha_data_internal,2048
-	.data
-	.section .note.GNU-stack, ""
-# End
diff --git a/libm/x86_64/dynamic_function_dispatch.cpp b/libm/x86_64/dynamic_function_dispatch.cpp
new file mode 100644
index 000000000..3710873a9
--- /dev/null
+++ b/libm/x86_64/dynamic_function_dispatch.cpp
@@ -0,0 +1,175 @@
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <stddef.h>
+
+#include <private/bionic_ifuncs.h>
+
+extern "C" {
+
+typedef double ceil_func(double __x);
+DEFINE_IFUNC_FOR(ceil) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(ceil_func, ceil_avx2);
+    RETURN_FUNC(ceil_func, ceil_generic);
+}
+
+typedef float ceilf_func(float __x);
+DEFINE_IFUNC_FOR(ceilf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(ceilf_func, ceilf_avx2);
+    RETURN_FUNC(ceilf_func, ceilf_generic);
+}
+
+typedef double floor_func(double __x);
+DEFINE_IFUNC_FOR(floor) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(floor_func, floor_avx2);
+    RETURN_FUNC(floor_func, floor_generic);
+}
+
+typedef float floorf_func(float __x);
+DEFINE_IFUNC_FOR(floorf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(floorf_func, floorf_avx2);
+    RETURN_FUNC(floorf_func, floorf_generic);
+}
+
+typedef double rint_func(double __x);
+DEFINE_IFUNC_FOR(rint) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(rint_func, rint_avx2);
+    RETURN_FUNC(rint_func, rint_generic);
+}
+
+typedef float rintf_func(float __x);
+DEFINE_IFUNC_FOR(rintf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(rintf_func, rintf_avx2);
+    RETURN_FUNC(rintf_func, rintf_generic);
+}
+
+typedef double hypot_func(double __x, double __y);
+DEFINE_IFUNC_FOR(hypot) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(hypot_func, hypot_avx2);
+    RETURN_FUNC(hypot_func, hypot_generic);
+}
+
+typedef double log10_func(double __x);
+DEFINE_IFUNC_FOR(log10) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(log10_func, log10_avx2);
+    RETURN_FUNC(log10_func, log10_generic);
+}
+
+typedef float log10f_func(float __x);
+DEFINE_IFUNC_FOR(log10f) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(log10f_func, log10f_avx2);
+    RETURN_FUNC(log10f_func, log10f_generic);
+}
+
+typedef double log1p_func(double __x);
+DEFINE_IFUNC_FOR(log1p) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(log1p_func, log1p_avx2);
+    RETURN_FUNC(log1p_func, log1p_generic);
+}
+
+typedef float log1pf_func(float __x);
+DEFINE_IFUNC_FOR(log1pf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(log1pf_func, log1pf_avx2);
+    RETURN_FUNC(log1pf_func, log1pf_generic);
+}
+
+typedef double cbrt_func(double __x);
+DEFINE_IFUNC_FOR(cbrt) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(cbrt_func, cbrt_avx2);
+    RETURN_FUNC(cbrt_func, cbrt_generic);
+}
+
+typedef float cbrtf_func(float __x);
+DEFINE_IFUNC_FOR(cbrtf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(cbrtf_func, cbrtf_avx2);
+    RETURN_FUNC(cbrtf_func, cbrtf_generic);
+}
+
+typedef double cos_func(double __x);
+DEFINE_IFUNC_FOR(cos) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(cos_func, cos_avx2);
+    RETURN_FUNC(cos_func, cos_generic);
+}
+
+typedef float cosf_func(float __x);
+DEFINE_IFUNC_FOR(cosf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(cosf_func, cosf_avx2);
+    RETURN_FUNC(cosf_func, cosf_generic);
+}
+
+typedef double sin_func(double __x);
+DEFINE_IFUNC_FOR(sin) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(sin_func, sin_avx2);
+    RETURN_FUNC(sin_func, sin_generic);
+}
+
+typedef float sinf_func(float __x);
+DEFINE_IFUNC_FOR(sinf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(sinf_func, sinf_avx2);
+    RETURN_FUNC(sinf_func, sinf_generic);
+}
+
+typedef double sinh_func(double __x);
+DEFINE_IFUNC_FOR(sinh) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(sinh_func, sinh_avx2);
+    RETURN_FUNC(sinh_func, sinh_generic);
+}
+
+typedef float sinhf_func(float __x);
+DEFINE_IFUNC_FOR(sinhf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(sinhf_func, sinhf_avx2);
+    RETURN_FUNC(sinhf_func, sinhf_generic);
+}
+
+typedef float expf_func(float __x);
+DEFINE_IFUNC_FOR(expf) {
+    __builtin_cpu_init();
+    if (__builtin_cpu_supports("avx2")) RETURN_FUNC(expf_func, expf_avx2);
+    RETURN_FUNC(expf_func, expf_generic);
+}
+
+}  // extern "C"
diff --git a/libm/x86_64/ceil.S b/libm/x86_64/generic/ceil.S
similarity index 97%
rename from libm/x86_64/ceil.S
rename to libm/x86_64/generic/ceil.S
index d4492c404..201749a65 100644
--- a/libm/x86_64/ceil.S
+++ b/libm/x86_64/generic/ceil.S
@@ -30,7 +30,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(ceil)
+
+ENTRY(ceil_generic)
 roundsd $0x2,%xmm0,%xmm0
 retq
-END(ceil)
+END(ceil_generic)
diff --git a/libm/x86_64/ceilf.S b/libm/x86_64/generic/ceilf.S
similarity index 97%
rename from libm/x86_64/ceilf.S
rename to libm/x86_64/generic/ceilf.S
index 0e1ca95dc..72f0364d9 100644
--- a/libm/x86_64/ceilf.S
+++ b/libm/x86_64/generic/ceilf.S
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(ceilf)
+ENTRY(ceilf_generic)
 roundss $0x2,%xmm0,%xmm0
 retq
-END(ceilf)
+END(ceilf_generic)
diff --git a/libm/x86_64/generic/cosf.c b/libm/x86_64/generic/cosf.c
new file mode 100644
index 000000000..e980df018
--- /dev/null
+++ b/libm/x86_64/generic/cosf.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define  cosf cosf_generic
+
+#include <../../external/arm-optimized-routines/math/cosf.c>
diff --git a/libm/x86_64/e_acos.S b/libm/x86_64/generic/e_acos.S
similarity index 100%
rename from libm/x86_64/e_acos.S
rename to libm/x86_64/generic/e_acos.S
diff --git a/libm/x86_64/e_asin.S b/libm/x86_64/generic/e_asin.S
similarity index 100%
rename from libm/x86_64/e_asin.S
rename to libm/x86_64/generic/e_asin.S
diff --git a/libm/x86_64/e_atan2.S b/libm/x86_64/generic/e_atan2.S
similarity index 100%
rename from libm/x86_64/e_atan2.S
rename to libm/x86_64/generic/e_atan2.S
diff --git a/libm/x86_64/e_cosh.S b/libm/x86_64/generic/e_cosh.S
similarity index 100%
rename from libm/x86_64/e_cosh.S
rename to libm/x86_64/generic/e_cosh.S
diff --git a/libm/x86_64/e_hypot.S b/libm/x86_64/generic/e_hypot.S
similarity index 99%
rename from libm/x86_64/e_hypot.S
rename to libm/x86_64/generic/e_hypot.S
index 089b2b47c..ec02b65b2 100644
--- a/libm/x86_64/e_hypot.S
+++ b/libm/x86_64/generic/e_hypot.S
@@ -65,7 +65,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  hypot
-ENTRY(hypot)
+ENTRY(hypot_generic)
 # parameter 1: %xmm0
 # parameter 2: %xmm1
 ..B1.1:
@@ -174,7 +174,7 @@ ENTRY(hypot)
         ret       
 ..B1.3:
 ..___tag_value_hypot.4:
-END(hypot)
+END(hypot_generic)
 # -- End  hypot
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/e_log10.S b/libm/x86_64/generic/e_log10.S
similarity index 99%
rename from libm/x86_64/e_log10.S
rename to libm/x86_64/generic/e_log10.S
index 4f43a36e5..90e545515 100644
--- a/libm/x86_64/e_log10.S
+++ b/libm/x86_64/generic/e_log10.S
@@ -55,7 +55,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  log10
-ENTRY(log10)
+ENTRY(log10_generic)
 # parameter 1: %xmm0
 ..B1.1:
 ..___tag_value_log10.1:
@@ -219,7 +219,7 @@ ENTRY(log10)
 ..___tag_value_log10.4:
         ret       
 ..___tag_value_log10.5:
-END(log10)
+END(log10_generic)
 # -- End  log10
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/generic/e_log10f.c b/libm/x86_64/generic/e_log10f.c
new file mode 100644
index 000000000..d03281253
--- /dev/null
+++ b/libm/x86_64/generic/e_log10f.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define  log10f log10f_generic
+
+#include <upstream-freebsd/lib/msun/src/e_log10f.c>
diff --git a/libm/x86_64/e_sinh.S b/libm/x86_64/generic/e_sinh.S
similarity index 99%
rename from libm/x86_64/e_sinh.S
rename to libm/x86_64/generic/e_sinh.S
index 4d8db630a..7d0775e62 100644
--- a/libm/x86_64/e_sinh.S
+++ b/libm/x86_64/generic/e_sinh.S
@@ -78,7 +78,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  sinh
-ENTRY(sinh)
+ENTRY(sinh_generic)
 # parameter 1: %xmm0
 ..B1.1:
 ..___tag_value_sinh.1:
@@ -300,7 +300,7 @@ ENTRY(sinh)
 ..___tag_value_sinh.4:
         ret       
 ..___tag_value_sinh.5:
-END(sinh)
+END(sinh_generic)
 # -- End  sinh
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/generic/e_sinhf.c b/libm/x86_64/generic/e_sinhf.c
new file mode 100644
index 000000000..48623406d
--- /dev/null
+++ b/libm/x86_64/generic/e_sinhf.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define  sinhf sinhf_generic
+
+#include <upstream-freebsd/lib/msun/src/e_sinhf.c>
diff --git a/libm/x86_64/generic/expf.c b/libm/x86_64/generic/expf.c
new file mode 100644
index 000000000..2e1aa26f0
--- /dev/null
+++ b/libm/x86_64/generic/expf.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define expf expf_generic
+#define FROM_LIBM 
+#include <../../external/arm-optimized-routines/math/expf.c>
diff --git a/libm/x86_64/floor.S b/libm/x86_64/generic/floor.S
similarity index 97%
rename from libm/x86_64/floor.S
rename to libm/x86_64/generic/floor.S
index dc80e88b7..c3e3ed429 100644
--- a/libm/x86_64/floor.S
+++ b/libm/x86_64/generic/floor.S
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(floor)
+ENTRY(floor_generic)
 roundsd $0x1,%xmm0,%xmm0
 retq
-END(floor)
+END(floor_generic)
diff --git a/libm/x86_64/floorf.S b/libm/x86_64/generic/floorf.S
similarity index 97%
rename from libm/x86_64/floorf.S
rename to libm/x86_64/generic/floorf.S
index 832f9c5fc..ae46602d1 100644
--- a/libm/x86_64/floorf.S
+++ b/libm/x86_64/generic/floorf.S
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(floorf)
+ENTRY(floorf_generic)
 roundss $0x1,%xmm0,%xmm0
 retq
-END(floorf)
+END(floorf_generic)
diff --git a/libm/x86_64/lrint.S b/libm/x86_64/generic/lrint.S
similarity index 100%
rename from libm/x86_64/lrint.S
rename to libm/x86_64/generic/lrint.S
diff --git a/libm/x86_64/lrintf.S b/libm/x86_64/generic/lrintf.S
similarity index 100%
rename from libm/x86_64/lrintf.S
rename to libm/x86_64/generic/lrintf.S
diff --git a/libm/x86_64/rint.S b/libm/x86_64/generic/rint.S
similarity index 97%
rename from libm/x86_64/rint.S
rename to libm/x86_64/generic/rint.S
index 9731daad6..9f50f8365 100644
--- a/libm/x86_64/rint.S
+++ b/libm/x86_64/generic/rint.S
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(rint)
+ENTRY(rint_generic)
   roundsd $0x4,%xmm0,%xmm0
   retq
-END(rint)
+END(rint_generic)
diff --git a/libm/x86_64/rintf.S b/libm/x86_64/generic/rintf.S
similarity index 97%
rename from libm/x86_64/rintf.S
rename to libm/x86_64/generic/rintf.S
index c3e98bf8c..8b8eaceae 100644
--- a/libm/x86_64/rintf.S
+++ b/libm/x86_64/generic/rintf.S
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(rintf)
+ENTRY(rintf_generic)
   roundss $0x4,%xmm0,%xmm0
   retq
-END(rintf)
+END(rintf_generic)
diff --git a/libm/x86_64/s_atan.S b/libm/x86_64/generic/s_atan.S
similarity index 100%
rename from libm/x86_64/s_atan.S
rename to libm/x86_64/generic/s_atan.S
diff --git a/libm/x86_64/s_cbrt.S b/libm/x86_64/generic/s_cbrt.S
similarity index 99%
rename from libm/x86_64/s_cbrt.S
rename to libm/x86_64/generic/s_cbrt.S
index 4aa4373e4..5a648f325 100644
--- a/libm/x86_64/s_cbrt.S
+++ b/libm/x86_64/generic/s_cbrt.S
@@ -49,7 +49,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  cbrt
-ENTRY(cbrt)
+ENTRY(cbrt_generic)
 # parameter 1: %xmm0
 ..B1.1:
 ..___tag_value_cbrt.1:
@@ -198,7 +198,7 @@ ENTRY(cbrt)
 ..___tag_value_cbrt.4:
         ret       
 ..___tag_value_cbrt.5:
-END(cbrt)
+END(cbrt_generic)
 # -- End  cbrt
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/generic/s_cbrtf.c b/libm/x86_64/generic/s_cbrtf.c
new file mode 100644
index 000000000..a431ecc87
--- /dev/null
+++ b/libm/x86_64/generic/s_cbrtf.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define  cbrtf cbrtf_generic
+
+#include <upstream-freebsd/lib/msun/src/s_cbrtf.c>
diff --git a/libm/x86_64/s_cos.S b/libm/x86_64/generic/s_cos.S
similarity index 99%
rename from libm/x86_64/s_cos.S
rename to libm/x86_64/generic/s_cos.S
index ab5a0e1b7..cde8596d2 100644
--- a/libm/x86_64/s_cos.S
+++ b/libm/x86_64/generic/s_cos.S
@@ -173,7 +173,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  cos
-ENTRY(cos)
+ENTRY(cos_generic)
 # parameter 1: %xmm0
 ..B1.1:
 ..___tag_value_cos.1:
@@ -589,7 +589,7 @@ ENTRY(cos)
 ..___tag_value_cos.8:
         ret       
 ..___tag_value_cos.9:
-END(cos)
+END(cos_generic)
 # -- End  cos
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/s_expm1.S b/libm/x86_64/generic/s_expm1.S
similarity index 100%
rename from libm/x86_64/s_expm1.S
rename to libm/x86_64/generic/s_expm1.S
diff --git a/libm/x86_64/s_log1p.S b/libm/x86_64/generic/s_log1p.S
similarity index 99%
rename from libm/x86_64/s_log1p.S
rename to libm/x86_64/generic/s_log1p.S
index 1ff2d3965..d0e3e9825 100644
--- a/libm/x86_64/s_log1p.S
+++ b/libm/x86_64/generic/s_log1p.S
@@ -55,7 +55,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  log1p
-ENTRY(log1p)
+ENTRY(log1p_generic)
 # parameter 1: %xmm0
 ..B1.1:
 ..___tag_value_log1p.1:
@@ -241,7 +241,7 @@ ENTRY(log1p)
 ..___tag_value_log1p.4:
         ret       
 ..___tag_value_log1p.5:
-END(log1p)
+END(log1p_generic)
 # -- End  log1p
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/generic/s_log1pf.c b/libm/x86_64/generic/s_log1pf.c
new file mode 100644
index 000000000..31fa03f11
--- /dev/null
+++ b/libm/x86_64/generic/s_log1pf.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define  log1pf log1pf_generic
+
+#include <upstream-freebsd/lib/msun/src/s_log1pf.c>
diff --git a/libm/x86_64/s_sin.S b/libm/x86_64/generic/s_sin.S
similarity index 99%
rename from libm/x86_64/s_sin.S
rename to libm/x86_64/generic/s_sin.S
index 2f93a34bb..ec2058fda 100644
--- a/libm/x86_64/s_sin.S
+++ b/libm/x86_64/generic/s_sin.S
@@ -174,7 +174,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  sin
-ENTRY(sin)
+ENTRY(sin_generic)
 # parameter 1: %xmm0
 ..B1.1:
 ..___tag_value_sin.1:
@@ -596,7 +596,7 @@ ENTRY(sin)
 ..___tag_value_sin.8:
         ret       
 ..___tag_value_sin.9:
-END(sin)
+END(sin_generic)
 # -- End  sin
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/s_tan.S b/libm/x86_64/generic/s_tan.S
similarity index 100%
rename from libm/x86_64/s_tan.S
rename to libm/x86_64/generic/s_tan.S
diff --git a/libm/x86_64/s_tanh.S b/libm/x86_64/generic/s_tanh.S
similarity index 100%
rename from libm/x86_64/s_tanh.S
rename to libm/x86_64/generic/s_tanh.S
diff --git a/libm/x86_64/generic/sinf.c b/libm/x86_64/generic/sinf.c
new file mode 100644
index 000000000..6b004c7e7
--- /dev/null
+++ b/libm/x86_64/generic/sinf.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+#define  sinf sinf_generic
+
+#include <../../external/arm-optimized-routines/math/sinf.c>
diff --git a/libm/x86_64/sqrt.S b/libm/x86_64/generic/sqrt.S
similarity index 100%
rename from libm/x86_64/sqrt.S
rename to libm/x86_64/generic/sqrt.S
diff --git a/libm/x86_64/sqrtf.S b/libm/x86_64/generic/sqrtf.S
similarity index 100%
rename from libm/x86_64/sqrtf.S
rename to libm/x86_64/generic/sqrtf.S
diff --git a/libm/x86_64/trunc.S b/libm/x86_64/generic/trunc.S
similarity index 100%
rename from libm/x86_64/trunc.S
rename to libm/x86_64/generic/trunc.S
diff --git a/libm/x86_64/truncf.S b/libm/x86_64/generic/truncf.S
similarity index 100%
rename from libm/x86_64/truncf.S
rename to libm/x86_64/generic/truncf.S
diff --git a/libm/x86_64/cbrt_avx2.S b/libm/x86_64/kabylake/cbrt_avx2.S
similarity index 99%
rename from libm/x86_64/cbrt_avx2.S
rename to libm/x86_64/kabylake/cbrt_avx2.S
index a37ef81cf..a00b833d3 100644
--- a/libm/x86_64/cbrt_avx2.S
+++ b/libm/x86_64/kabylake/cbrt_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  cbrt
-ENTRY(cbrt)
+ENTRY(cbrt_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -159,7 +159,7 @@ ENTRY(cbrt)
         lea       64(%rsp), %rsi
         call      __svml_dcbrt_ha_cout_rare_internal
         jmp       ..B1.4
-END(cbrt)
+END(cbrt_avx2)
 	.hidden __svml_dcbrt_ha_data_internal
 	.hidden __svml_dcbrt_ha_cout_rare_internal
 	.section .note.GNU-stack, ""
diff --git a/libm/x86_64/cbrt_cout_avx2.S b/libm/x86_64/kabylake/cbrt_cout_avx2.S
similarity index 100%
rename from libm/x86_64/cbrt_cout_avx2.S
rename to libm/x86_64/kabylake/cbrt_cout_avx2.S
diff --git a/libm/x86_64/cbrt_data_avx2.S b/libm/x86_64/kabylake/cbrt_data_avx2.S
similarity index 100%
rename from libm/x86_64/cbrt_data_avx2.S
rename to libm/x86_64/kabylake/cbrt_data_avx2.S
diff --git a/libm/x86_64/cbrtf_avx2.S b/libm/x86_64/kabylake/cbrtf_avx2.S
similarity index 99%
rename from libm/x86_64/cbrtf_avx2.S
rename to libm/x86_64/kabylake/cbrtf_avx2.S
index 350e0f9b2..aff038d85 100644
--- a/libm/x86_64/cbrtf_avx2.S
+++ b/libm/x86_64/kabylake/cbrtf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(cbrtf)
+ENTRY(cbrtf_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -152,7 +152,7 @@ ENTRY(cbrtf)
         lea       64(%rsp), %rsi
         call      __svml_scbrt_ha_cout_rare_internal
         jmp       ..B1.4
-END(cbrtf)
+END(cbrtf_avx2)
 	.data
 # -- End  __svml_cbrtf1_ha_l9
 	.data
diff --git a/libm/x86_64/cbrtf_cout_avx2.S b/libm/x86_64/kabylake/cbrtf_cout_avx2.S
similarity index 100%
rename from libm/x86_64/cbrtf_cout_avx2.S
rename to libm/x86_64/kabylake/cbrtf_cout_avx2.S
diff --git a/libm/x86_64/cbrtf_data_avx2.S b/libm/x86_64/kabylake/cbrtf_data_avx2.S
similarity index 100%
rename from libm/x86_64/cbrtf_data_avx2.S
rename to libm/x86_64/kabylake/cbrtf_data_avx2.S
diff --git a/libm/x86_64/ceil_avx2.S b/libm/x86_64/kabylake/ceil_avx2.S
similarity index 97%
rename from libm/x86_64/ceil_avx2.S
rename to libm/x86_64/kabylake/ceil_avx2.S
index 32aaea132..8c4bcf1c5 100644
--- a/libm/x86_64/ceil_avx2.S
+++ b/libm/x86_64/kabylake/ceil_avx2.S
@@ -27,7 +27,7 @@ SUCH DAMAGE.
 */
 #include <private/bionic_asm.h>
 
-ENTRY(ceil)
+ENTRY(ceil_avx2)
         vroundpd  $2, %xmm0, %xmm0
         ret
-END(ceil)
+END(ceil_avx2)
diff --git a/libm/x86_64/ceilf_avx2.S b/libm/x86_64/kabylake/ceilf_avx2.S
similarity index 97%
rename from libm/x86_64/ceilf_avx2.S
rename to libm/x86_64/kabylake/ceilf_avx2.S
index fc3df2174..0917d1049 100644
--- a/libm/x86_64/ceilf_avx2.S
+++ b/libm/x86_64/kabylake/ceilf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(ceilf)
+ENTRY(ceilf_avx2)
         vroundps  $2, %xmm0, %xmm0
         ret
-END(ceilf)
+END(ceilf_avx2)
diff --git a/libm/x86_64/cos_avx2.S b/libm/x86_64/kabylake/cos_avx2.S
similarity index 99%
rename from libm/x86_64/cos_avx2.S
rename to libm/x86_64/kabylake/cos_avx2.S
index f6b21ac7a..5cafd4a06 100644
--- a/libm/x86_64/cos_avx2.S
+++ b/libm/x86_64/kabylake/cos_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(cos)
+ENTRY(cos_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -306,7 +306,7 @@ ENTRY(cos)
         vmovups   48(%rsp), %xmm13
 	.cfi_restore 30
         jmp       ..B1.2
-END(cos)
+END(cos_avx2)
 # -- End  __svml_cos1_ha_l9
 	.section .rodata, "a"
 	.align 16
diff --git a/libm/x86_64/cos_cout_avx2.S b/libm/x86_64/kabylake/cos_cout_avx2.S
similarity index 100%
rename from libm/x86_64/cos_cout_avx2.S
rename to libm/x86_64/kabylake/cos_cout_avx2.S
diff --git a/libm/x86_64/cos_data_avx2.S b/libm/x86_64/kabylake/cos_data_avx2.S
similarity index 100%
rename from libm/x86_64/cos_data_avx2.S
rename to libm/x86_64/kabylake/cos_data_avx2.S
diff --git a/libm/x86_64/cosf_avx2.S b/libm/x86_64/kabylake/cosf_avx2.S
similarity index 99%
rename from libm/x86_64/cosf_avx2.S
rename to libm/x86_64/kabylake/cosf_avx2.S
index b8d6b967f..ba30845ea 100644
--- a/libm/x86_64/cosf_avx2.S
+++ b/libm/x86_64/kabylake/cosf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  asin
-ENTRY(cosf)
+ENTRY(cosf_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -292,7 +292,7 @@ ENTRY(cosf)
         vmovups   32(%rsp), %xmm14
 	.cfi_restore 31
         jmp       ..B1.2
-END(cosf)
+END(cosf_avx2)
 	.data
 # -- End  __svml_cosf1_ha_l9
 	.section .rodata, "a"
diff --git a/libm/x86_64/cosf_cout_avx2.S b/libm/x86_64/kabylake/cosf_cout_avx2.S
similarity index 100%
rename from libm/x86_64/cosf_cout_avx2.S
rename to libm/x86_64/kabylake/cosf_cout_avx2.S
diff --git a/libm/x86_64/cosf_data_avx2.S b/libm/x86_64/kabylake/cosf_data_avx2.S
similarity index 100%
rename from libm/x86_64/cosf_data_avx2.S
rename to libm/x86_64/kabylake/cosf_data_avx2.S
diff --git a/libm/x86_64/exp_cout_avx2.S b/libm/x86_64/kabylake/exp_cout_avx2.S
similarity index 100%
rename from libm/x86_64/exp_cout_avx2.S
rename to libm/x86_64/kabylake/exp_cout_avx2.S
diff --git a/libm/x86_64/exp_data_avx2.S b/libm/x86_64/kabylake/exp_data_avx2.S
similarity index 100%
rename from libm/x86_64/exp_data_avx2.S
rename to libm/x86_64/kabylake/exp_data_avx2.S
diff --git a/libm/x86_64/expf_avx2.S b/libm/x86_64/kabylake/expf_avx2.S
similarity index 99%
rename from libm/x86_64/expf_avx2.S
rename to libm/x86_64/kabylake/expf_avx2.S
index c2b8e106a..995b21f2a 100644
--- a/libm/x86_64/expf_avx2.S
+++ b/libm/x86_64/kabylake/expf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(expf)
+ENTRY(expf_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -131,7 +131,7 @@ ENTRY(expf)
         lea       64(%rsp), %rsi
         call      __svml_sexp_ha_cout_rare_internal
         jmp       ..B1.5
-END(expf)
+END(expf_avx2)
 	.section .rodata, "a"
 	.align 16
 	.align 16
diff --git a/libm/x86_64/floor_avx2.S b/libm/x86_64/kabylake/floor_avx2.S
similarity index 97%
rename from libm/x86_64/floor_avx2.S
rename to libm/x86_64/kabylake/floor_avx2.S
index 9428c6170..b02dd770a 100644
--- a/libm/x86_64/floor_avx2.S
+++ b/libm/x86_64/kabylake/floor_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(floor)
+ENTRY(floor_avx2)
 vroundpd  $1, %ymm0, %ymm0
 ret
-END(floor)
+END(floor_avx2)
diff --git a/libm/x86_64/floorf_avx2.S b/libm/x86_64/kabylake/floorf_avx2.S
similarity index 97%
rename from libm/x86_64/floorf_avx2.S
rename to libm/x86_64/kabylake/floorf_avx2.S
index 05866c837..56c36f250 100644
--- a/libm/x86_64/floorf_avx2.S
+++ b/libm/x86_64/kabylake/floorf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(floorf)
+ENTRY(floorf_avx2)
 vroundps  $1, %xmm0, %xmm0
 ret
-END(floorf)
\ No newline at end of file
+END(floorf_avx2)
diff --git a/libm/x86_64/hypot_avx2.S b/libm/x86_64/kabylake/hypot_avx2.S
similarity index 99%
rename from libm/x86_64/hypot_avx2.S
rename to libm/x86_64/kabylake/hypot_avx2.S
index 5ed035475..40464a845 100644
--- a/libm/x86_64/hypot_avx2.S
+++ b/libm/x86_64/kabylake/hypot_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  hypot
-ENTRY(hypot)
+ENTRY(hypot_avx2)
 # parameter 1: %xmm0
 # parameter 2: %xmm1
 
@@ -153,7 +153,7 @@ ENTRY(hypot)
         lea       128(%rsp), %rdx
         call      __svml_dhypot_ha_cout_rare_internal
         jmp       ..B1.4
-END(hypot)
+END(hypot_avx2)
 	.data
 	.hidden __svml_dhypot_ha_data_internal
 	.hidden __svml_dhypot_ha_cout_rare_internal
diff --git a/libm/x86_64/hypot_cout_avx2.S b/libm/x86_64/kabylake/hypot_cout_avx2.S
similarity index 100%
rename from libm/x86_64/hypot_cout_avx2.S
rename to libm/x86_64/kabylake/hypot_cout_avx2.S
diff --git a/libm/x86_64/hypot_data_avx2.S b/libm/x86_64/kabylake/hypot_data_avx2.S
similarity index 100%
rename from libm/x86_64/hypot_data_avx2.S
rename to libm/x86_64/kabylake/hypot_data_avx2.S
diff --git a/libm/x86_64/log10_avx2.S b/libm/x86_64/kabylake/log10_avx2.S
similarity index 99%
rename from libm/x86_64/log10_avx2.S
rename to libm/x86_64/kabylake/log10_avx2.S
index 3ddbadb53..fb9504502 100644
--- a/libm/x86_64/log10_avx2.S
+++ b/libm/x86_64/kabylake/log10_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(log10)
+ENTRY(log10_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -139,7 +139,7 @@ ENTRY(log10)
         lea       64(%rsp), %rsi
         call      __svml_dlog10_ha_cout_rare_internal
         jmp       ..B1.4
-END(log10)
+END(log10_avx2)
 	.data
 	.hidden __svml_dlog10_ha_data_internal
 	.hidden __svml_dlog10_ha_cout_rare_internal
diff --git a/libm/x86_64/log10_cout_avx2.S b/libm/x86_64/kabylake/log10_cout_avx2.S
similarity index 100%
rename from libm/x86_64/log10_cout_avx2.S
rename to libm/x86_64/kabylake/log10_cout_avx2.S
diff --git a/libm/x86_64/log10_data_avx2.S b/libm/x86_64/kabylake/log10_data_avx2.S
similarity index 100%
rename from libm/x86_64/log10_data_avx2.S
rename to libm/x86_64/kabylake/log10_data_avx2.S
diff --git a/libm/x86_64/log10f_avx2.S b/libm/x86_64/kabylake/log10f_avx2.S
similarity index 99%
rename from libm/x86_64/log10f_avx2.S
rename to libm/x86_64/kabylake/log10f_avx2.S
index 64e1e16a8..a377c17ad 100644
--- a/libm/x86_64/log10f_avx2.S
+++ b/libm/x86_64/kabylake/log10f_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  asin
-ENTRY(log10f)
+ENTRY(log10f_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -128,7 +128,7 @@ ENTRY(log10f)
         lea       64(%rsp), %rsi
         call      __svml_slog10_ha_cout_rare_internal
         jmp       ..B1.4
-END(log10f)
+END(log10f_avx2)
 	.data
 	.hidden __svml_slog10_ha_data_internal
 	.hidden __svml_slog10_ha_cout_rare_internal
diff --git a/libm/x86_64/log10f_cout_avx2.S b/libm/x86_64/kabylake/log10f_cout_avx2.S
similarity index 100%
rename from libm/x86_64/log10f_cout_avx2.S
rename to libm/x86_64/kabylake/log10f_cout_avx2.S
diff --git a/libm/x86_64/log10f_data_avx2.S b/libm/x86_64/kabylake/log10f_data_avx2.S
similarity index 100%
rename from libm/x86_64/log10f_data_avx2.S
rename to libm/x86_64/kabylake/log10f_data_avx2.S
diff --git a/libm/x86_64/log1p_avx2.S b/libm/x86_64/kabylake/log1p_avx2.S
similarity index 99%
rename from libm/x86_64/log1p_avx2.S
rename to libm/x86_64/kabylake/log1p_avx2.S
index 056e1115f..a89336f56 100644
--- a/libm/x86_64/log1p_avx2.S
+++ b/libm/x86_64/kabylake/log1p_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(log1p)
+ENTRY(log1p_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -159,7 +159,7 @@ ENTRY(log1p)
         lea       64(%rsp), %rsi
         call      __svml_dlog1p_ha_cout_rare_internal
         jmp       ..B1.4
-END(log1p)
+END(log1p_avx2)
 	.data
 	.hidden __svml_dlog1p_ha_data_internal
 	.hidden __svml_dlog1p_ha_cout_rare_internal
diff --git a/libm/x86_64/log1p_cout_avx2.S b/libm/x86_64/kabylake/log1p_cout_avx2.S
similarity index 100%
rename from libm/x86_64/log1p_cout_avx2.S
rename to libm/x86_64/kabylake/log1p_cout_avx2.S
diff --git a/libm/x86_64/log1p_data_avx2.S b/libm/x86_64/kabylake/log1p_data_avx2.S
similarity index 100%
rename from libm/x86_64/log1p_data_avx2.S
rename to libm/x86_64/kabylake/log1p_data_avx2.S
diff --git a/libm/x86_64/log1pf_avx2.S b/libm/x86_64/kabylake/log1pf_avx2.S
similarity index 99%
rename from libm/x86_64/log1pf_avx2.S
rename to libm/x86_64/kabylake/log1pf_avx2.S
index 1f803176a..49ec87966 100644
--- a/libm/x86_64/log1pf_avx2.S
+++ b/libm/x86_64/kabylake/log1pf_avx2.S
@@ -29,7 +29,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  asin
-ENTRY(log1pf)
+ENTRY(log1pf_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -153,7 +153,7 @@ ENTRY(log1pf)
         lea       64(%rsp), %rsi
         call      __svml_slog1p_ha_cout_rare_internal
         jmp       ..B1.4
-END(log1pf)
+END(log1pf_avx2)
 # -- End  __svml_log1pf1_ha_l9
 	.data
 	.hidden __svml_slog1p_ha_data_internal
diff --git a/libm/x86_64/log1pf_cout_avx2.S b/libm/x86_64/kabylake/log1pf_cout_avx2.S
similarity index 100%
rename from libm/x86_64/log1pf_cout_avx2.S
rename to libm/x86_64/kabylake/log1pf_cout_avx2.S
diff --git a/libm/x86_64/log1pf_data_avx2.S b/libm/x86_64/kabylake/log1pf_data_avx2.S
similarity index 100%
rename from libm/x86_64/log1pf_data_avx2.S
rename to libm/x86_64/kabylake/log1pf_data_avx2.S
diff --git a/libm/x86_64/rint_avx2.S b/libm/x86_64/kabylake/rint_avx2.S
similarity index 97%
rename from libm/x86_64/rint_avx2.S
rename to libm/x86_64/kabylake/rint_avx2.S
index f1dfcff55..b260beac3 100644
--- a/libm/x86_64/rint_avx2.S
+++ b/libm/x86_64/kabylake/rint_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(rint)
+ENTRY(rint_avx2)
 vroundpd  $4, %ymm0, %ymm0
 ret
-END(rint)
+END(rint_avx2)
diff --git a/libm/x86_64/rintf_avx2.S b/libm/x86_64/kabylake/rintf_avx2.S
similarity index 97%
rename from libm/x86_64/rintf_avx2.S
rename to libm/x86_64/kabylake/rintf_avx2.S
index 5ddc4415c..c2af10dab 100644
--- a/libm/x86_64/rintf_avx2.S
+++ b/libm/x86_64/kabylake/rintf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 
-ENTRY(rintf)
+ENTRY(rintf_avx2)
 vroundps  $4, %xmm0, %xmm0
 ret
-END(rintf)
\ No newline at end of file
+END(rintf_avx2)
diff --git a/libm/x86_64/sin_avx2.S b/libm/x86_64/kabylake/sin_avx2.S
similarity index 99%
rename from libm/x86_64/sin_avx2.S
rename to libm/x86_64/kabylake/sin_avx2.S
index 78b4657f6..2e83b2d0c 100644
--- a/libm/x86_64/sin_avx2.S
+++ b/libm/x86_64/kabylake/sin_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(sin)
+ENTRY(sin_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -312,7 +312,7 @@ ENTRY(sin)
         vxorpd    96(%rsp), %xmm1, %xmm1
         vblendvpd %xmm2, %xmm1, %xmm3, %xmm3
         jmp       ..B1.2
-END(sin) 
+END(sin_avx2) 
 	.data
 # -- End  __svml_sin1_ha_l9
 	.section .rodata, "a"
diff --git a/libm/x86_64/sin_cout_avx2.S b/libm/x86_64/kabylake/sin_cout_avx2.S
similarity index 100%
rename from libm/x86_64/sin_cout_avx2.S
rename to libm/x86_64/kabylake/sin_cout_avx2.S
diff --git a/libm/x86_64/sin_data_avx2.S b/libm/x86_64/kabylake/sin_data_avx2.S
similarity index 100%
rename from libm/x86_64/sin_data_avx2.S
rename to libm/x86_64/kabylake/sin_data_avx2.S
diff --git a/libm/x86_64/sinf_avx2.S b/libm/x86_64/kabylake/sinf_avx2.S
similarity index 99%
rename from libm/x86_64/sinf_avx2.S
rename to libm/x86_64/kabylake/sinf_avx2.S
index de6082219..0942e2e27 100644
--- a/libm/x86_64/sinf_avx2.S
+++ b/libm/x86_64/kabylake/sinf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  sin
-ENTRY(sinf)
+ENTRY(sinf_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -293,7 +293,7 @@ ENTRY(sinf)
         vmovups   32(%rsp), %xmm14
 	.cfi_restore 31
         jmp       ..B1.2
-END(sinf)
+END(sinf_avx2)
 	.section .rodata, "a"
 	.align 16
 	.align 16
diff --git a/libm/x86_64/sinf_cout_avx2.S b/libm/x86_64/kabylake/sinf_cout_avx2.S
similarity index 100%
rename from libm/x86_64/sinf_cout_avx2.S
rename to libm/x86_64/kabylake/sinf_cout_avx2.S
diff --git a/libm/x86_64/sinf_data_avx2.S b/libm/x86_64/kabylake/sinf_data_avx2.S
similarity index 100%
rename from libm/x86_64/sinf_data_avx2.S
rename to libm/x86_64/kabylake/sinf_data_avx2.S
diff --git a/libm/x86_64/sinh_avx2.S b/libm/x86_64/kabylake/sinh_avx2.S
similarity index 99%
rename from libm/x86_64/sinh_avx2.S
rename to libm/x86_64/kabylake/sinh_avx2.S
index 323e381f1..7cb2f9340 100644
--- a/libm/x86_64/sinh_avx2.S
+++ b/libm/x86_64/kabylake/sinh_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  sin
-ENTRY(sinh)
+ENTRY(sinh_avx2)
 # parameter 1: %ymm0
 ..B1.1:
 ..L1:
@@ -187,7 +187,7 @@ ENTRY(sinh)
         lea       256(%rsp,%r12,8), %rsi
         call      __svml_dsinh_ha_cout_rare_internal
         jmp       ..B1.8
-END(sinh)
+END(sinh_avx2)
 	.data
 	.hidden __svml_dsinh_ha_data_internal
 	.hidden __svml_dsinh_ha_cout_rare_internal
diff --git a/libm/x86_64/sinh_cout_avx2.S b/libm/x86_64/kabylake/sinh_cout_avx2.S
similarity index 100%
rename from libm/x86_64/sinh_cout_avx2.S
rename to libm/x86_64/kabylake/sinh_cout_avx2.S
diff --git a/libm/x86_64/sinh_data_avx2.S b/libm/x86_64/kabylake/sinh_data_avx2.S
similarity index 100%
rename from libm/x86_64/sinh_data_avx2.S
rename to libm/x86_64/kabylake/sinh_data_avx2.S
diff --git a/libm/x86_64/sinhf_avx2.S b/libm/x86_64/kabylake/sinhf_avx2.S
similarity index 99%
rename from libm/x86_64/sinhf_avx2.S
rename to libm/x86_64/kabylake/sinhf_avx2.S
index d057ade91..5b3b18de9 100644
--- a/libm/x86_64/sinhf_avx2.S
+++ b/libm/x86_64/kabylake/sinhf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  sin
-ENTRY(sinhf)
+ENTRY(sinhf_avx2)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -167,7 +167,7 @@ ENTRY(sinhf)
         lea       192(%rsp,%r12,4), %rsi
         call      __svml_ssinh_ha_cout_rare_internal
         jmp       ..B1.8
-END(sinhf)
+END(sinhf_avx2)
         .data
 	.hidden __svml_ssinh_ha_data_internal
 	.hidden __svml_ssinh_ha_cout_rare_internal
diff --git a/libm/x86_64/sinhf_cout_avx2.S b/libm/x86_64/kabylake/sinhf_cout_avx2.S
similarity index 100%
rename from libm/x86_64/sinhf_cout_avx2.S
rename to libm/x86_64/kabylake/sinhf_cout_avx2.S
diff --git a/libm/x86_64/sinhf_data_avx2.S b/libm/x86_64/kabylake/sinhf_data_avx2.S
similarity index 100%
rename from libm/x86_64/sinhf_data_avx2.S
rename to libm/x86_64/kabylake/sinhf_data_avx2.S
diff --git a/libm/x86_64/static_function_dispatch.S b/libm/x86_64/static_function_dispatch.S
new file mode 100644
index 000000000..a4e8edab5
--- /dev/null
+++ b/libm/x86_64/static_function_dispatch.S
@@ -0,0 +1,55 @@
+/*
+ * Copyright (C) 2018 The Android Open Source Project
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <private/bionic_asm.h>
+
+#define FUNCTION_DELEGATE(name, impl) \
+ENTRY(name); \
+    jmp impl; \
+END(name)
+
+FUNCTION_DELEGATE(ceil, ceil_generic)
+FUNCTION_DELEGATE(ceilf, ceilf_generic)
+FUNCTION_DELEGATE(floor, floor_generic)
+FUNCTION_DELEGATE(floorf, floorf_generic)
+FUNCTION_DELEGATE(rint, rint_generic)
+FUNCTION_DELEGATE(rintf, rintf_generic)
+FUNCTION_DELEGATE(hypot, hypot_generic)
+FUNCTION_DELEGATE(log10, log10_generic)
+FUNCTION_DELEGATE(log10f, log10f_generic)
+FUNCTION_DELEGATE(log1p, log1p_generic)
+FUNCTION_DELEGATE(log1pf, log1pf_generic)
+FUNCTION_DELEGATE(cbrt, cbrt_generic)
+FUNCTION_DELEGATE(cbrtf, cbrtf_generic)
+FUNCTION_DELEGATE(sin, sin_generic)
+FUNCTION_DELEGATE(sinf, sinf_generic)
+FUNCTION_DELEGATE(sinh, sinh_generic)
+FUNCTION_DELEGATE(sinhf, sinhf_generic)
+FUNCTION_DELEGATE(cos, cos_generic)
+FUNCTION_DELEGATE(cosf, cosf_generic)
+FUNCTION_DELEGATE(expf, expf_generic)
-- 
2.17.1

