From 20240d11b48427024a0c811bd1c94552cefb2b1d Mon Sep 17 00:00:00 2001
From: Muhammad Aksar <muhammad.aksar@intel.com>
Date: Tue, 3 Dec 2019 19:07:36 +0530
Subject: [PATCH] Fix: Avoid Open Camera failure during enumeration

- Sometime opening of camera device node fd is
  failing during enumeration the device
- To avoid this failure by trying to get the
  device node fd though a loop trying 5 times at least

Tracked-On: OAM-88936
Signed-off-by: Muhammad Aksar <muhammad.aksar@intel.com>
---
 .../2.4/default/ExternalCameraProviderImpl_2_4.cpp        | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/camera/provider/2.4/default/ExternalCameraProviderImpl_2_4.cpp b/camera/provider/2.4/default/ExternalCameraProviderImpl_2_4.cpp
index f776e6f..ec3132c 100644
--- a/camera/provider/2.4/default/ExternalCameraProviderImpl_2_4.cpp
+++ b/camera/provider/2.4/default/ExternalCameraProviderImpl_2_4.cpp
@@ -216,10 +216,21 @@ void ExternalCameraProviderImpl_2_4::addExternalCamera(const char* devName) {
 
 void ExternalCameraProviderImpl_2_4::deviceAdded(const char* devName) {
     {
+
+        int tryV4l2Device = 0;
+retry:
         base::unique_fd fd(::open(devName, O_RDWR));
         if (fd.get() < 0) {
-            ALOGE("%s open v4l2 device %s failed:%s", __FUNCTION__, devName, strerror(errno));
-            return;
+            if (tryV4l2Device < 5) {
+                ALOGE("%s open v4l2 device %s failed - but trying again..", __FUNCTION__, devName);
+                tryV4l2Device++;
+                //wait for 10ms before each try
+                usleep(10000);
+                goto retry;
+            } else {
+                ALOGE("%s open v4l2 device %s failed:%s", __FUNCTION__, devName, strerror(errno));
+                return;
+            }
         }
 
         struct v4l2_capability capability;
-- 
2.7.4

