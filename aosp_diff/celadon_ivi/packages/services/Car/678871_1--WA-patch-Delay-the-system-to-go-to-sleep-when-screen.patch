From 47bc6fdb6b06a4aef1c6823bc11aeea0114b2f04 Mon Sep 17 00:00:00 2001
From: Ting Li <ting.li@intel.com>
Date: Mon, 26 Aug 2019 10:43:17 +0800
Subject: [PATCH] [WA patch]Delay the system to go to sleep when screen off

Some CTS tests need turn off the screen via send KEY code SLEEP,
but because of the NUC don't support doze mode, receive SLEEP KEY
will cause the system to go to sleep immediately and make the test fail.
So, add a 30 seconds wakelock to delay the system to go to sleep when screen off
for these CTS tests.

Change-Id: I26e5a59dfb33e97692aafa7c8795a61cba802153
Tracked-On:
Signed-off-by: Ting Li <ting.li@intel.com>
---
 .../com/android/car/CarPowerManagementService.java |  7 ++++++-
 .../car/systeminterface/DisplayInterface.java      |  1 +
 .../car/systeminterface/SystemInterface.java       | 10 ++++++++++
 .../car/systeminterface/WakeLockInterface.java     | 22 ++++++++++++++++++++++
 4 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/service/src/com/android/car/CarPowerManagementService.java b/service/src/com/android/car/CarPowerManagementService.java
index c1341da..3468448 100644
--- a/service/src/com/android/car/CarPowerManagementService.java
+++ b/service/src/com/android/car/CarPowerManagementService.java
@@ -567,7 +567,12 @@ public class CarPowerManagementService extends ICarPower.Stub implements
     }
 
     private void doHandleMainDisplayStateChange(boolean on) {
-        Log.w(CarLog.TAG_POWER, "Unimplemented:  doHandleMainDisplayStateChange() - on = " + on);
+        Log.w(CarLog.TAG_POWER, "doHandleMainDisplayStateChange() - on = " + on);
+        if (on) {
+                mSystemInterface.releaseDealySleepWakeLockIfNeeded();
+        } else {
+                mSystemInterface.acquireDelaySleepWakeLock();
+        }
     }
 
     public void handleMainDisplayChanged(boolean on) {
diff --git a/service/src/com/android/car/systeminterface/DisplayInterface.java b/service/src/com/android/car/systeminterface/DisplayInterface.java
index 4d8f180..ba3fcfa 100644
--- a/service/src/com/android/car/systeminterface/DisplayInterface.java
+++ b/service/src/com/android/car/systeminterface/DisplayInterface.java
@@ -149,6 +149,7 @@ public interface DisplayInterface {
                     return;
                 }
                 service = mService;
+                mDisplayStateSet = isOn;
             }
             service.handleMainDisplayChanged(isOn);
         }
diff --git a/service/src/com/android/car/systeminterface/SystemInterface.java b/service/src/com/android/car/systeminterface/SystemInterface.java
index 8e7f863..4d1fd6c 100644
--- a/service/src/com/android/car/systeminterface/SystemInterface.java
+++ b/service/src/com/android/car/systeminterface/SystemInterface.java
@@ -88,6 +88,16 @@ public class SystemInterface implements DisplayInterface, IOInterface,
     }
 
     @Override
+    public void acquireDelaySleepWakeLock() {
+        mWakeLockInterface.acquireDelaySleepWakeLock();
+    }
+
+    @Override
+    public void releaseDealySleepWakeLockIfNeeded() {
+        mWakeLockInterface.releaseDealySleepWakeLockIfNeeded();
+    }
+
+    @Override
     public long getUptime() {
         return mTimeInterface.getUptime();
     }
diff --git a/service/src/com/android/car/systeminterface/WakeLockInterface.java b/service/src/com/android/car/systeminterface/WakeLockInterface.java
index cde6e5b..5af8bb4 100644
--- a/service/src/com/android/car/systeminterface/WakeLockInterface.java
+++ b/service/src/com/android/car/systeminterface/WakeLockInterface.java
@@ -28,10 +28,15 @@ public interface WakeLockInterface {
     void releaseAllWakeLocks();
     void switchToPartialWakeLock();
     void switchToFullWakeLock();
+    void acquireDelaySleepWakeLock();
+    void releaseDealySleepWakeLockIfNeeded();
 
     class DefaultImpl implements WakeLockInterface {
         private final WakeLock mPartialWakeLock;
         private final WakeLock mFullWakeLock;
+        private static final long DELAY_SLEEP_TIME = 30 * 1000;
+        private final WakeLock mDelaySleepWakeLock;
+
 
         DefaultImpl(Context context) {
             PowerManager powerManager =
@@ -40,6 +45,8 @@ public interface WakeLockInterface {
                 CarLog.TAG_POWER);
             mPartialWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
                 CarLog.TAG_POWER);
+            mDelaySleepWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
+                "DelaySleepWakeLock");
         }
 
         @Override
@@ -71,5 +78,20 @@ public interface WakeLockInterface {
                 mFullWakeLock.release();
             }
         }
+
+        @Override
+        public void acquireDelaySleepWakeLock() {
+            if (mDelaySleepWakeLock.isHeld()) {
+                mDelaySleepWakeLock.release();
+            }
+            mDelaySleepWakeLock.acquire(DELAY_SLEEP_TIME);
+        }
+
+        @Override
+        public void releaseDealySleepWakeLockIfNeeded() {
+            if (mDelaySleepWakeLock.isHeld()) {
+                mDelaySleepWakeLock.release();
+            }
+        }
     }
 }
-- 
1.9.1

