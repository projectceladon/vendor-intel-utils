From a622942fc3ff9967f051865e0babc184b3c29727 Mon Sep 17 00:00:00 2001
From: Ankit Agrawal <ankit.agarwal@intel.com>
Date: Mon, 24 Apr 2023 12:40:20 +0530
Subject: [PATCH] Experiment of Multi-User Multi-Display Car Feature.

Added Seconadry launcher for passenger user.
it will be launched at boot time for all avaiable passenger.
Also in this launcher added navigation key.
Also fixed passenger user unlock issue and proper
mapping & assignment of zone id for passengers.

Tracked-On: OAM-108950
Signed-off-by: Ankit Agrawal <ankit.agarwal@intel.com>
---
 .../car/pm/VendorServiceController.java       | 11 +++
 .../com/android/car/user/CarUserService.java  |  6 ++
 .../Android.bp                                |  6 +-
 .../AndroidManifest.xml                       |  5 +-
 .../res/drawable/ic_back_key.xml              | 26 ++++++
 .../res/layout/navigation_keys.xml            | 12 +++
 .../res/values/colors.xml                     |  2 +
 .../launcher/LauncherActivity.java            | 84 ++++++++++++++++++-
 8 files changed, 147 insertions(+), 5 deletions(-)
 create mode 100644 tests/MultiDisplaySecondaryHomeTestLauncher/res/drawable/ic_back_key.xml
 create mode 100644 tests/MultiDisplaySecondaryHomeTestLauncher/res/layout/navigation_keys.xml

diff --git a/service/src/com/android/car/pm/VendorServiceController.java b/service/src/com/android/car/pm/VendorServiceController.java
index 0575034f7..e7dcfd81a 100644
--- a/service/src/com/android/car/pm/VendorServiceController.java
+++ b/service/src/com/android/car/pm/VendorServiceController.java
@@ -180,6 +180,17 @@ class VendorServiceController implements UserLifecycleListener {
             Slog.i(TAG, "onUserLockedChanged, user: " + userId
                     + ", unlocked: " + unlocked + ", currentUser: " + currentUserId);
         }
+	if(userId != UserHandle.USER_SYSTEM && userId != currentUserId && unlocked) {
+            Intent appIntent = new Intent();
+            appIntent.setComponent(new ComponentName("com.android.car.multidisplay", "com.android.car.multidisplay.launcher.LauncherActivity"));
+            appIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            List<UserHandle> profileUsers = mContext.createContextAsUser(UserHandle.of(currentUserId), 0).getSystemService(UserManager.class).getEnabledProfiles();
+            for (UserHandle profiles : profileUsers) {
+                if (profiles.getIdentifier() != currentUserId) {
+                    mContext.startActivityAsUser(appIntent, UserHandle.of(profiles.getIdentifier()));
+                }
+            }
+        }
         if (unlocked && (userId == currentUserId || userId == UserHandle.USER_SYSTEM)) {
             startOrBindServicesForUser(UserHandle.of(userId));
         } else if (!unlocked && userId != UserHandle.USER_SYSTEM) {
diff --git a/service/src/com/android/car/user/CarUserService.java b/service/src/com/android/car/user/CarUserService.java
index 1fde509c2..40f8bb0c7 100644
--- a/service/src/com/android/car/user/CarUserService.java
+++ b/service/src/com/android/car/user/CarUserService.java
@@ -2074,6 +2074,12 @@ public final class CarUserService extends ICarUserService.Stub implements CarSer
             onUserSwitching(fromUserId, toUserId);
         } else if (eventType == CarUserManager.USER_LIFECYCLE_EVENT_TYPE_UNLOCKED) {
             onUserUnlocked(userId);
+	    if(userId == ActivityManager.getCurrentUser() && userId != UserHandle.USER_SYSTEM) {
+		if (mLastPassengerId != UserHandle.USER_NULL && !mUserManager.isUserUnlocked(UserHandle.of(mLastPassengerId))) {
+                    stopPassengerInternal(mLastPassengerId, false);
+		    startFirstPassenger(userId);
+                 }
+            }
         }
 
         // ...then notify listeners.
diff --git a/tests/MultiDisplaySecondaryHomeTestLauncher/Android.bp b/tests/MultiDisplaySecondaryHomeTestLauncher/Android.bp
index 1cc82c065..e9e6b9d91 100644
--- a/tests/MultiDisplaySecondaryHomeTestLauncher/Android.bp
+++ b/tests/MultiDisplaySecondaryHomeTestLauncher/Android.bp
@@ -30,5 +30,9 @@ android_app {
         "androidx.lifecycle_lifecycle-viewmodel",
     ],
 
-    sdk_version: "current",
+    libs: ["android.car"],
+
+    platform_apis: true,
+
+    certificate: "platform",
 }
diff --git a/tests/MultiDisplaySecondaryHomeTestLauncher/AndroidManifest.xml b/tests/MultiDisplaySecondaryHomeTestLauncher/AndroidManifest.xml
index 2d41d04e9..0026d758e 100644
--- a/tests/MultiDisplaySecondaryHomeTestLauncher/AndroidManifest.xml
+++ b/tests/MultiDisplaySecondaryHomeTestLauncher/AndroidManifest.xml
@@ -16,9 +16,12 @@
   -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-     package="com.android.car.multidisplay">
+	package="com.android.car.multidisplay"
+	android:sharedUserId="android.uid.system">
 
     <uses-sdk android:minSdkVersion="17"/>
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
+    <uses-permission android:name="android.permission.INJECT_EVENTS"/>
 
     <application android:label="@string/app_name">
         <activity android:name=".launcher.LauncherActivity"
diff --git a/tests/MultiDisplaySecondaryHomeTestLauncher/res/drawable/ic_back_key.xml b/tests/MultiDisplaySecondaryHomeTestLauncher/res/drawable/ic_back_key.xml
new file mode 100644
index 000000000..e9464dffb
--- /dev/null
+++ b/tests/MultiDisplaySecondaryHomeTestLauncher/res/drawable/ic_back_key.xml
@@ -0,0 +1,26 @@
+<!--
+Copyright (C) 2014 The Android Open Source Project
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="28dp"
+    android:height="28dp"
+    android:autoMirrored="true"
+    android:viewportWidth="28"
+    android:viewportHeight="28">
+
+    <path
+        android:fillColor="@color/gray"
+        android:pathData="M6.49,14.86c-0.66-0.39-0.66-1.34,0-1.73l6.02-3.53l5.89-3.46C19.11,5.73,20,6.26,20,7.1V14v6.9 c0,0.84-0.89,1.37-1.6,0.95l-5.89-3.46L6.49,14.86z" />
+</vector>
diff --git a/tests/MultiDisplaySecondaryHomeTestLauncher/res/layout/navigation_keys.xml b/tests/MultiDisplaySecondaryHomeTestLauncher/res/layout/navigation_keys.xml
new file mode 100644
index 000000000..0f9a720c8
--- /dev/null
+++ b/tests/MultiDisplaySecondaryHomeTestLauncher/res/layout/navigation_keys.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+
+    <Button
+        android:id="@+id/back_button"
+        android:layout_width="wrap_content"
+	android:layout_height="wrap_content"
+        android:background="@drawable/ic_back_key"/>
+</LinearLayout>
diff --git a/tests/MultiDisplaySecondaryHomeTestLauncher/res/values/colors.xml b/tests/MultiDisplaySecondaryHomeTestLauncher/res/values/colors.xml
index 4c317f769..4e05e0ec2 100644
--- a/tests/MultiDisplaySecondaryHomeTestLauncher/res/values/colors.xml
+++ b/tests/MultiDisplaySecondaryHomeTestLauncher/res/values/colors.xml
@@ -18,4 +18,6 @@
 <resources>
     <color name="mtrl_background_scrim">#76000000</color>
     <color name="launcher_bg_color">#884e8391</color>
+    <color name="white">#FFFFFFFF</color>
+    <color name="gray">#808080</color>
 </resources>
diff --git a/tests/MultiDisplaySecondaryHomeTestLauncher/src/com/android/car/multidisplay/launcher/LauncherActivity.java b/tests/MultiDisplaySecondaryHomeTestLauncher/src/com/android/car/multidisplay/launcher/LauncherActivity.java
index 582122cf0..4712b5968 100644
--- a/tests/MultiDisplaySecondaryHomeTestLauncher/src/com/android/car/multidisplay/launcher/LauncherActivity.java
+++ b/tests/MultiDisplaySecondaryHomeTestLauncher/src/com/android/car/multidisplay/launcher/LauncherActivity.java
@@ -23,23 +23,36 @@ import android.animation.AnimatorListenerAdapter;
 import android.app.ActivityOptions;
 import android.app.AlertDialog;
 import android.app.Application;
+import android.car.Car;
+import android.car.CarOccupantZoneManager;
+import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
+import android.graphics.PixelFormat;
 import android.hardware.display.DisplayManager;
+import android.hardware.input.InputManager;
 import android.os.Bundle;
+import android.os.SystemClock;
+import android.util.Log;
 import android.view.Display;
+import android.view.Gravity;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewAnimationUtils;
+import android.view.WindowManager;
 import android.view.inputmethod.InputMethodManager;
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemSelectedListener;
 import android.widget.ArrayAdapter;
+import android.widget.Button;
 import android.widget.CheckBox;
 import android.widget.GridView;
 import android.widget.ImageButton;
+import android.widget.LinearLayout;
 import android.widget.PopupMenu;
 import android.widget.Spinner;
 
@@ -55,6 +68,7 @@ import com.google.android.material.floatingactionbutton.FloatingActionButton;
 
 import java.util.ArrayList;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Set;
 
 /**
@@ -78,6 +92,13 @@ public class LauncherActivity extends FragmentActivity implements AppPickedCallb
 
     private boolean mAppDrawerShown;
 
+    private InputManager mInputManager;
+    private CarOccupantZoneManager mZoneManager;
+    private Car mCar;
+    private int mDisplayId;
+    private LinearLayout mOverlay;
+    private Button mBackKey;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -86,10 +107,12 @@ public class LauncherActivity extends FragmentActivity implements AppPickedCallb
         mRootView = findViewById(R.id.RootView);
         mScrimView = findViewById(R.id.Scrim);
         mAppDrawerView = findViewById(R.id.FloatingSheet);
+        mInputManager = (InputManager) getSystemService(Context.INPUT_SERVICE);
+        mCar = Car.createCar(getApplicationContext());
+	mZoneManager = (CarOccupantZoneManager) mCar.getCarManager(Car.CAR_OCCUPANT_ZONE_SERVICE);
+        mDisplayId = getLauncherDisplayId();
+        createNavigationKeysOverlay(mOverlay != null);
 
-        // get system insets and apply padding accordingly to the content view
-        mRootView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
-                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
         mRootView.setOnApplyWindowInsetsListener((view, insets) -> {
             mRootView.setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
             mAppDrawerHeader = findViewById(R.id.FloatingSheetHeader);
@@ -164,6 +187,61 @@ public class LauncherActivity extends FragmentActivity implements AppPickedCallb
         });
     }
 
+    private int getLauncherDisplayId() {
+        List<CarOccupantZoneManager.OccupantZoneInfo> zonelist = mZoneManager.getAllOccupantZones();
+        for (CarOccupantZoneManager.OccupantZoneInfo zone : zonelist) {
+            int passengerUserId = android.os.Process.myUserHandle().getIdentifier();
+            if (passengerUserId == mZoneManager.getUserForOccupant(zone)) {
+                Display display = mZoneManager.getDisplayForOccupant(zone, CarOccupantZoneManager.DISPLAY_TYPE_MAIN);
+                if (display != null)
+                    return display.getDisplayId();
+            }
+        }
+        return Display.INVALID_DISPLAY;
+    }
+
+    private void createNavigationKeysOverlay(boolean isCreated) {
+        if (isCreated) return;
+
+        // Create System overlay navigation key
+        WindowManager.LayoutParams params = new WindowManager.LayoutParams(
+                WindowManager.LayoutParams.WRAP_CONTENT,
+                WindowManager.LayoutParams.WRAP_CONTENT,
+                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,
+                WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL |
+                        WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH |
+                        WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,
+                PixelFormat.TRANSLUCENT);
+        params.gravity = Gravity.BOTTOM;
+
+        LayoutInflater inflater = (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);
+        mOverlay = (LinearLayout) inflater.inflate(R.layout.navigation_keys, null);
+        mBackKey = mOverlay.findViewById(R.id.back_button);
+
+        WindowManager wm = (WindowManager) this.getSystemService(WINDOW_SERVICE);
+        wm.addView(mOverlay, params);
+
+        mBackKey.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                injectInputEvent(KeyEvent.KEYCODE_BACK);
+            }
+        });
+
+    }
+
+    void injectInputEvent(int keycode) {
+        mDisplayId = getLauncherDisplayId();
+        long downTime = SystemClock.uptimeMillis();
+        KeyEvent keyEvent_down = new KeyEvent(downTime, downTime, KeyEvent.ACTION_DOWN, keycode, 0);
+        keyEvent_down.setDisplayId(mDisplayId);
+        mInputManager.injectInputEvent(keyEvent_down, InputManager.INJECT_INPUT_EVENT_MODE_ASYNC);
+        long upTime = SystemClock.uptimeMillis();
+        KeyEvent keyEvent_up = new KeyEvent(upTime, upTime, KeyEvent.ACTION_UP, keycode, 0);
+        keyEvent_up.setDisplayId(mDisplayId);
+        mInputManager.injectInputEvent(keyEvent_up, InputManager.INJECT_INPUT_EVENT_MODE_ASYNC);
+    }
+
     @Override
     public boolean onMenuItemClick(MenuItem item) {
         // Respond to picking one of the popup menu items.
-- 
2.17.1

