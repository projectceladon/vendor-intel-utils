From c7ae1944f0d9a06aec86d5b03118b119e4ed7fb7 Mon Sep 17 00:00:00 2001
From: jizhenlo <zhenlong.z.ji@intel.com>
Date: Tue, 7 Feb 2023 14:25:08 +0800
Subject: [PATCH] Fix the user switch loading issue

Signed-off-by: jizhenlo <zhenlong.z.ji@intel.com>
---
 .../UserSwitchTransitionViewController.java   | 30 ++++++++++++-------
 1 file changed, 20 insertions(+), 10 deletions(-)

diff --git a/src/com/android/systemui/car/userswitcher/UserSwitchTransitionViewController.java b/src/com/android/systemui/car/userswitcher/UserSwitchTransitionViewController.java
index 1e604bd7..80cf52a7 100644
--- a/src/com/android/systemui/car/userswitcher/UserSwitchTransitionViewController.java
+++ b/src/com/android/systemui/car/userswitcher/UserSwitchTransitionViewController.java
@@ -104,35 +104,45 @@ public class UserSwitchTransitionViewController extends OverlayViewController {
      * showing.
      */
     void handleShow(@UserIdInt int newUserId) {
+		if (mPreviousUserId == newUserId || mShowing) return;
+		mShowing = true;
         mMainExecutor.execute(() -> {
-            if (mPreviousUserId == newUserId || mShowing) return;
-            mShowing = true;
             try {
+                Thread.sleep(50);
+            } catch (Exception e) {
+                Log.e(TAG, "Sleep exception");
+            }
+            /*try {
                 mWindowManagerService.setSwitchingUser(true);
                 mWindowManagerService.lockNow(null);
             } catch (RemoteException e) {
                 Log.e(TAG, "unable to notify window manager service regarding user switch");
-            }
+            }*/
 
-            start();
-            populateDialog(mPreviousUserId, newUserId);
+            //start();
+            //populateDialog(mPreviousUserId, newUserId);
             // next time a new user is selected, this current new user will be the previous user.
             mPreviousUserId = newUserId;
             // In case the window is still showing after WINDOW_SHOWN_TIMEOUT_MS, then hide the
             // window and log a warning message.
-            mCancelRunnable = mMainExecutor.executeDelayed(mWindowShownTimeoutCallback,
-                    mWindowShownTimeoutMs);
+            //mCancelRunnable = mMainExecutor.executeDelayed(mWindowShownTimeoutCallback,
+            //        mWindowShownTimeoutMs);
         });
     }
 
     void handleHide() {
         if (!mShowing) return;
+		mShowing = false;
         mMainExecutor.execute(() -> {
-            mShowing = false;
-            stop();
+            try {
+                Thread.sleep(50);
+            } catch (Exception e) {
+                Log.e(TAG, "Sleep exception");
+            }
+            /*stop();
             if (mCancelRunnable != null) {
                 mCancelRunnable.run();
-            }
+            }*/
         });
     }
 
-- 
2.25.1

