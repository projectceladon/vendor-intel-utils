From 36aaaf05ed51b71a38f36cbecf3c5976ee722106 Mon Sep 17 00:00:00 2001
From: neofang7 <neo.fang@intel.com>
Date: Wed, 31 May 2023 02:04:12 +0000
Subject: [PATCH] Camera: fix uvc cameraid>mNumberOfCameras issue

Tencent Meeting cannot use uvc camera in Celadon ivi platform,
which caused by cameraId check in both jni and cameraservice.
CameraId is video device number + CameraIdOffset, CameraIdOffset
of uvc is 200, so it is definitely larger than the real camera
numbers and causes Invalid cameraId errors.

The fix contains two parts:
1. libcameraservice.so: change the condition check of cameraId,
   iterately check app required cameraId with deviceIds;
2. Camera Jni: remove cameraId > NumberOfCameras condition.
Test: verify camera functionalities with meeting/camera apps

Tracked-On: OAM-109947
Signed-off-by: neofang7 <neo.fang@intel.com>
---
 .../camera/libcameraservice/CameraService.cpp | 28 ++++++++++++-------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/services/camera/libcameraservice/CameraService.cpp b/services/camera/libcameraservice/CameraService.cpp
index 701bec2313..682b543952 100644
--- a/services/camera/libcameraservice/CameraService.cpp
+++ b/services/camera/libcameraservice/CameraService.cpp
@@ -25,6 +25,7 @@
 #include <cstring>
 #include <ctime>
 #include <string>
+#include <iostream>
 #include <sys/types.h>
 #include <inttypes.h>
 #include <pthread.h>
@@ -660,14 +661,7 @@ Status CameraService::getCameraInfo(int cameraId,
         return STATUS_ERROR(ERROR_DISCONNECTED,
                 "Camera subsystem is not available");
     }
-    bool hasSystemCameraPermissions =
-            hasPermissionsForSystemCamera(CameraThreadState::getCallingPid(),
-                    CameraThreadState::getCallingUid());
-    int cameraIdBound = mNumberOfCamerasWithoutSystemCamera;
-    if (hasSystemCameraPermissions) {
-        cameraIdBound = mNumberOfCameras;
-    }
-    if (cameraId < 0 || cameraId >= cameraIdBound) {
+    if (cameraId < 0) {
         return STATUS_ERROR(ERROR_ILLEGAL_ARGUMENT,
                 "CameraId is not valid");
     }
@@ -694,13 +688,27 @@ std::string CameraService::cameraIdIntToStrLocked(int cameraIdInt) {
             getpid() == callingPid) {
         deviceIds = &mNormalDeviceIds;
     }
-    if (cameraIdInt < 0 || cameraIdInt >= static_cast<int>(deviceIds->size())) {
+    if (cameraIdInt < 0) {
         ALOGE("%s: input id %d invalid: valid range  (0, %zu)",
                 __FUNCTION__, cameraIdInt, deviceIds->size());
         return std::string{};
     }
+    unsigned int i = 0;
+    bool found = false;
+    for (i = 0; i < deviceIds->size(); i++) {
+        ALOGE("deviceIds[%d]=%s", i, (*deviceIds)[i].c_str());
+        if (std::stoi((*deviceIds)[i]) == cameraIdInt) {
+            found = true;
+            break;
+        }
+    }
 
-    return (*deviceIds)[cameraIdInt];
+    if (found == false) {
+        ALOGE("%s: input id %d invalid: valid range  (0, %zu), cameraIdInt not available",
+                 __FUNCTION__, cameraIdInt, deviceIds->size());
+        return std::string{};
+    }
+    return (*deviceIds)[i];
 }
 
 String8 CameraService::cameraIdIntToStr(int cameraIdInt) {
-- 
2.17.1

