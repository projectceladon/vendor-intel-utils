From e24baba4d7b8fbe6ab03cb77c0ababee038c1745 Mon Sep 17 00:00:00 2001
From: Brian Delwiche <delwiche@google.com>
Date: Mon, 6 May 2024 17:49:09 +0000
Subject: [PATCH] Fix permission bypasses to multiple methods

Researcher reports that some BT calls across Binder are validating only
BT's own permissions and not the calling app's permissions.  On
investigation this seems to be due to a missing null check in several BT
permissions checks, which allows a malicious app to pass in a null
AttributionSource and therefore produce a stub AttributionSource chain
which does not properly check for the caller's permissions.

Add null checks.

Bug: 242996380
Test: atest UtilsTest
Test: researcher POC
Tag: #security
Ignore-AOSP-First: Security
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:244e4734d1ed316e8725b0f33e18d8eb709554f1)
Merged-In: I57d80cfa07bd6d3fd410a01764b3db2db9b41b81
Change-Id: I57d80cfa07bd6d3fd410a01764b3db2db9b41b81
---
 src/com/android/bluetooth/Utils.java | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/src/com/android/bluetooth/Utils.java b/src/com/android/bluetooth/Utils.java
index f1e8e0f10..ab30c3e55 100644
--- a/src/com/android/bluetooth/Utils.java
+++ b/src/com/android/bluetooth/Utils.java
@@ -79,6 +79,7 @@ import java.nio.charset.CharsetDecoder;
 import java.time.Instant;
 import java.time.ZoneId;
 import java.time.format.DateTimeFormatter;
+import java.util.Objects;
 import java.util.UUID;
 import java.util.concurrent.TimeUnit;
 
@@ -451,7 +452,8 @@ public final class Utils {
         // attributionSource.enforceCallingUid();
         final int result = PermissionChecker.checkPermissionForDataDeliveryFromDataSource(
                 context, permission, PID_UNKNOWN,
-                new AttributionSource(context.getAttributionSource(), attributionSource), message);
+                new AttributionSource(context.getAttributionSource(),
+                                      Objects.requireNonNull(attributionSource)), message);
         if (result == PERMISSION_GRANTED) {
             return true;
         }
@@ -693,7 +695,8 @@ public final class Utils {
         // attributionSource.enforceCallingUid();
         if (PermissionChecker.checkPermissionForDataDeliveryFromDataSource(
                 context, ACCESS_COARSE_LOCATION, PID_UNKNOWN,
-                new AttributionSource(context.getAttributionSource(), attributionSource),
+                new AttributionSource(context.getAttributionSource(),
+                                      Objects.requireNonNull(attributionSource)),
                 "Bluetooth location check") == PERMISSION_GRANTED) {
             return true;
         }
@@ -721,14 +724,16 @@ public final class Utils {
         // attributionSource.enforceCallingUid();
         if (PermissionChecker.checkPermissionForDataDeliveryFromDataSource(
                 context, ACCESS_FINE_LOCATION, PID_UNKNOWN,
-                new AttributionSource(context.getAttributionSource(), attributionSource),
+                new AttributionSource(context.getAttributionSource(),
+                                      Objects.requireNonNull(attributionSource)),
                 "Bluetooth location check") == PERMISSION_GRANTED) {
             return true;
         }
 
         if (PermissionChecker.checkPermissionForDataDeliveryFromDataSource(
                 context, ACCESS_COARSE_LOCATION, PID_UNKNOWN,
-                new AttributionSource(context.getAttributionSource(), attributionSource),
+                new AttributionSource(context.getAttributionSource(),
+                                      Objects.requireNonNull(attributionSource)),
                 "Bluetooth location check") == PERMISSION_GRANTED) {
             return true;
         }
@@ -755,7 +760,8 @@ public final class Utils {
         // attributionSource.enforceCallingUid();
         if (PermissionChecker.checkPermissionForDataDeliveryFromDataSource(
                 context, ACCESS_FINE_LOCATION, PID_UNKNOWN,
-                new AttributionSource(context.getAttributionSource(), attributionSource),
+                new AttributionSource(context.getAttributionSource(),
+                                      Objects.requireNonNull(attributionSource)),
                 "Bluetooth location check") == PERMISSION_GRANTED) {
             return true;
         }
-- 
2.46.1.824.gd892dcdcdd-goog

