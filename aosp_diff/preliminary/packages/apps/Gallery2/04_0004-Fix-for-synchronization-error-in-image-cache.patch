From e8fc4ddb2a1a6de5326efc161134eb01ef8313aa Mon Sep 17 00:00:00 2001
From: Tanuj Tekriwal <tanuj.tekriwal@intel.com>
Date: Fri, 1 Sep 2023 17:18:20 +0000
Subject: [PATCH] Fix for synchronization error in image cache

The patch handles the cache null condition and avoids
the synchronize call if its null.

Tracked-On: OAM-112051
Change-Id: Ieabcf8a3061869fd87d1393f11674076450706de
Signed-off-by: Tanuj Tekriwal <tanuj.tekriwal@intel.com>
---
 .../gallery3d/data/ImageCacheService.java     | 33 ++++++++++---------
 1 file changed, 18 insertions(+), 15 deletions(-)

diff --git a/src/com/android/gallery3d/data/ImageCacheService.java b/src/com/android/gallery3d/data/ImageCacheService.java
index 1c7cb8c5e..e537107c0 100644
--- a/src/com/android/gallery3d/data/ImageCacheService.java
+++ b/src/com/android/gallery3d/data/ImageCacheService.java
@@ -62,9 +62,10 @@ public class ImageCacheService {
             LookupRequest request = new LookupRequest();
             request.key = cacheKey;
             request.buffer = buffer.data;
-            synchronized (mCache) {
-                if (!mCache.lookup(request)) return false;
-            }
+            if(mCache != null)
+                synchronized (mCache) {
+                    if (!mCache.lookup(request)) return false;
+                }
             if (isSameKey(key, request.buffer)) {
                 buffer.data = request.buffer;
                 buffer.offset = key.length;
@@ -83,25 +84,27 @@ public class ImageCacheService {
         ByteBuffer buffer = ByteBuffer.allocate(key.length + value.length);
         buffer.put(key);
         buffer.put(value);
-        synchronized (mCache) {
-            try {
-                mCache.insert(cacheKey, buffer.array());
-            } catch (IOException ex) {
-                // ignore.
+        if(mCache != null)
+            synchronized (mCache) {
+                try {
+                    mCache.insert(cacheKey, buffer.array());
+                } catch (IOException ex) {
+                    // ignore.
+                }
             }
-        }
     }
 
     public void clearImageData(Path path, long timeModified, int type) {
         byte[] key = makeKey(path, timeModified, type);
         long cacheKey = Utils.crc64Long(key);
-        synchronized (mCache) {
-            try {
-                mCache.clearEntry(cacheKey);
-            } catch (IOException ex) {
-                // ignore.
+        if(mCache != null)
+            synchronized (mCache) {
+                try {
+                    mCache.clearEntry(cacheKey);
+                } catch (IOException ex) {
+                    // ignore.
+                }
             }
-        }
     }
 
     private static byte[] makeKey(Path path, long timeModified, int type) {
-- 
2.39.2

