From 1f71c7ebc395e7777bf9e021a706fd6d5e20f44b Mon Sep 17 00:00:00 2001
From: user189 <shiva.kumara.rudrappa@intel.com>
Date: Wed, 17 Mar 2021 19:18:17 +0530
Subject: [PATCH] aosp camera record debug

Signed-off-by: user189 <shiva.kumara.rudrappa@intel.com>
---
 AndroidManifest.xml                        |  2 ++
 src/com/android/camera/CameraActivity.java |  5 ++++-
 src/com/android/camera/VideoModule.java    | 12 +++++++++---
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index dfdcbb2f9..88b1a76de 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -29,6 +29,7 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.WRITE_SETTINGS" />
     <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
+    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE"/>
 
     <supports-screens
         android:anyDensity="true"
@@ -46,6 +47,7 @@
         android:restoreAnyVersion="true"
         android:supportsRtl="true"
         android:theme="@style/Theme.Camera"
+        android:requestLegacyExternalStorage="true"
         android:usesCleartextTraffic="false" >
         <activity
             android:name="com.android.camera.CameraActivity"
diff --git a/src/com/android/camera/CameraActivity.java b/src/com/android/camera/CameraActivity.java
index 18d87bf24..b6885bf1a 100644
--- a/src/com/android/camera/CameraActivity.java
+++ b/src/com/android/camera/CameraActivity.java
@@ -160,7 +160,7 @@ import com.bumptech.glide.MemoryCategory;
 import com.bumptech.glide.load.DecodeFormat;
 import com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;
 import com.android.camera.exif.ExifInterface;
-
+import android.os.StrictMode;
 import com.google.common.base.Optional;
 import com.google.common.logging.eventprotos;
 import com.google.common.logging.eventprotos.ForegroundEvent.ForegroundSource;
@@ -1439,6 +1439,9 @@ public class CameraActivity extends QuickActivity
         mSoundPlayer = new SoundPlayer(mAppContext);
         mFeatureConfig = OneCameraFeatureConfigCreator.createDefault(getContentResolver(),
                 getServices().getMemoryManager());
+        StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
+        StrictMode.setVmPolicy(builder.build());
+
         mFatalErrorHandler = new FatalErrorHandlerImpl(this);
         checkPermissions();
         if (!mHasCriticalPermissions) {
diff --git a/src/com/android/camera/VideoModule.java b/src/com/android/camera/VideoModule.java
index a1d4ff62b..764ec6f79 100644
--- a/src/com/android/camera/VideoModule.java
+++ b/src/com/android/camera/VideoModule.java
@@ -1101,7 +1101,7 @@ public class VideoModule extends CameraModule
 
     // Prepares media recorder.
     private void initializeRecorder() {
-        Log.i(TAG, "initializeRecorder: " + Thread.currentThread());
+        Log.i(TAG, "shiva initializeRecorder: " + Thread.currentThread());
         // If the mCameraDevice is null, then this activity is going to finish
         if (mCameraDevice == null) {
             Log.w(TAG, "null camera proxy, not recording");
@@ -1120,6 +1120,7 @@ public class VideoModule extends CameraModule
                     mVideoFileDescriptor =
                             mContentResolver.openFileDescriptor(saveUri, "rw");
                     mCurrentVideoUri = saveUri;
+Log.i(TAG,"shiva mCurrentVideoUri"+mCurrentVideoUri);
                 } catch (java.io.FileNotFoundException ex) {
                     // invalid uri
                     Log.e(TAG, ex.toString());
@@ -1158,11 +1159,11 @@ public class VideoModule extends CameraModule
             mAudioManager.getDevices(AudioManager.GET_DEVICES_INPUTS);
         for (AudioDeviceInfo audioDeviceInfo : deviceList) {
             if (audioDeviceInfo.getType() == AudioDeviceInfo.TYPE_USB_DEVICE) {
-                Log.d(TAG, "Setting preferred device to USB_DEVIVE");
+                Log.d(TAG, "shiva Setting preferred device to USB_DEVIVE");
                 mMediaRecorder.setPreferredDevice(audioDeviceInfo);
                 break;
             } else if (audioDeviceInfo.getType() == AudioDeviceInfo.TYPE_USB_HEADSET) {
-                Log.d(TAG, "Setting preferred device to TYPE_USB_HEADSET");
+                Log.d(TAG, "shiva Setting preferred device to TYPE_USB_HEADSET");
                 mMediaRecorder.setPreferredDevice(audioDeviceInfo);
                 break;
             }
@@ -1172,9 +1173,14 @@ public class VideoModule extends CameraModule
         // Try Uri in the intent first. If it doesn't exist, use our own
         // instead.
         if (mVideoFileDescriptor != null) {
+Log.i(TAG,"shiva mVideoFileDesc NULL");
             mMediaRecorder.setOutputFile(mVideoFileDescriptor.getFileDescriptor());
         } else {
+Log.i(TAG," shiva mVideoFileDesc not null"+mVideoFilename);
             generateVideoFilename(mProfile.fileFormat);
+Uri videoUri = Uri.fromFile(new File( mVideoFilename));
+Log.i(TAG," shiva mVideoFileDesc not null "+videoUri);
+
             mMediaRecorder.setOutputFile(mVideoFilename);
         }
 
-- 
2.17.1

