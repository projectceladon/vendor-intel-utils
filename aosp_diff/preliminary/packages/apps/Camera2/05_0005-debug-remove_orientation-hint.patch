From 30e599edfe4a76e727af950987b6e1efe3c47dec Mon Sep 17 00:00:00 2001
From: shivasku82 <shiva.kumara.rudrappa@intel.com>
Date: Sat, 23 Jul 2022 10:01:56 +0530
Subject: [PATCH] debug removed orientation hint

Signed-off-by: shivasku82 <shiva.kumara.rudrappa@intel.com>
---
 src/com/android/camera/CaptureModule.java |  4 +++-
 src/com/android/camera/Exif.java          |  4 +++-
 src/com/android/camera/PhotoModule.java   | 14 ++++++++------
 src/com/android/camera/VideoModule.java   |  3 ++-
 4 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/src/com/android/camera/CaptureModule.java b/src/com/android/camera/CaptureModule.java
index 1068bcf52..7577abf03 100644
--- a/src/com/android/camera/CaptureModule.java
+++ b/src/com/android/camera/CaptureModule.java
@@ -412,6 +412,7 @@ public class CaptureModule extends CameraModule implements
             Log.e(TAG, "Unable to provide a OneCameraManager. ", e);
         }
         mDisplayRotation = CameraUtil.getDisplayRotation(activity);
+Log.e(TAG,"Shiva mDisplayRotation "+mDisplayRotation);
         mCameraFacing = getFacingFromCameraId(
               mSettingsManager.getInteger(mAppController.getModuleScope(), Keys.KEY_CAMERA_ID));
         mShowErrorAndFinish = !updateCameraCharacteristics();
@@ -536,7 +537,8 @@ public class CaptureModule extends CameraModule implements
         CaptureSession session = createAndStartCaptureSession();
         int orientation = mAppController.getOrientationManager().getDeviceOrientation()
                 .getDegrees();
-
+orientation = 0;
+Log.e(TAG, "Shiva take pictue now "+orientation);
         // TODO: This should really not use getExternalCacheDir and instead use
         // the SessionStorage API. Need to sync with gcam if that's OK.
         PhotoCaptureParameters params = new PhotoCaptureParameters(
diff --git a/src/com/android/camera/Exif.java b/src/com/android/camera/Exif.java
index fba1d0f0d..d15e5eba2 100644
--- a/src/com/android/camera/Exif.java
+++ b/src/com/android/camera/Exif.java
@@ -37,10 +37,12 @@ public class Exif {
     // Returns the degrees in clockwise. Values are 0, 90, 180, or 270.
     public static int getOrientation(ExifInterface exif) {
         Integer val = exif.getTagIntValue(ExifInterface.TAG_ORIENTATION);
+Log.e(TAG, "Shiva exif info ger orientation "+val);
         if (val == null) {
             return 0;
         } else {
-            return ExifInterface.getRotationForOrientationValue(val.shortValue());
+//            return ExifInterface.getRotationForOrientationValue(val.shortValue());
+return 0;
         }
     }
 
diff --git a/src/com/android/camera/PhotoModule.java b/src/com/android/camera/PhotoModule.java
index 7f42aaac7..edb9ec741 100644
--- a/src/com/android/camera/PhotoModule.java
+++ b/src/com/android/camera/PhotoModule.java
@@ -287,6 +287,7 @@ public class PhotoModule
         if (mPaused) {
             return;
         }
+
         // Set the display orientation if display rotation has changed.
         // Sometimes this happens when the device is held upside
         // down and camera app is opened. Rotation animation will
@@ -294,6 +295,7 @@ public class PhotoModule
         // wrong. Framework does not have a callback for this now.
         if (CameraUtil.getDisplayRotation(mActivity) != mDisplayRotation) {
             setDisplayOrientation();
+Log.e(TAG, "Shiva setDisplayOrientation");
         }
         if (SystemClock.uptimeMillis() - mOnResumeTime < 5000) {
             mHandler.postDelayed(new Runnable() {
@@ -931,7 +933,7 @@ public class PhotoModule
         void saveFinalPhoto(final byte[] jpegData, NamedEntity name, final ExifInterface exif,
                 CameraProxy camera) {
             int orientation = Exif.getOrientation(exif);
-
+Log.e(TAG, "Shiva saveFinalPhoto "+orientation);
             float zoomValue = 1.0f;
             if (mCameraCapabilities.supports(CameraCapabilities.Feature.ZOOM)) {
                 zoomValue = mCameraSettings.getCurrentZoomRatio();
@@ -1010,7 +1012,7 @@ public class PhotoModule
             } else {
                 mJpegImageData = jpegData;
                 if (!mQuickCapture) {
-                    Log.v(TAG, "showing UI");
+                    Log.e(TAG, "Shiva showing UI");
                     mUI.showCapturedImageForReview(jpegData, orientation, mMirror);
                 } else {
                     onCaptureDone();
@@ -1111,7 +1113,7 @@ public class PhotoModule
 
     @Override
     public boolean capture() {
-        Log.i(TAG, "capture");
+        Log.e(TAG, "Shiva capture");
         // If we are already in the middle of taking a snapshot or the image
         // save request is full then ignore.
         if (mCameraDevice == null || mCameraState == SNAPSHOT_IN_PROGRESS
@@ -1146,7 +1148,7 @@ public class PhotoModule
         mJpegRotation =
                 CameraUtil.getImageRotation(sensorOrientation, deviceOrientation, isFrontCamera);
         mCameraDevice.setJpegOrientation(mJpegRotation);
-
+Log.e(TAG,"Shiva in capture "+mJpegRotation);
         mCameraDevice.takePicture(mHandler,
                 new ShutterCallback(!animateBefore),
                 mRawPictureCallback, mPostViewPictureCallback,
@@ -1295,7 +1297,7 @@ public class PhotoModule
                 int orientation = Exif.getOrientation(exif);
                 Bitmap bitmap = CameraUtil.makeBitmap(data, 50 * 1024);
                 bitmap = CameraUtil.rotate(bitmap, orientation);
-                Log.v(TAG, "inlined bitmap into capture intent result");
+                Log.e(TAG, "Shiva inlined bitmap into capture intent result");
                 mActivity.setResultEx(Activity.RESULT_OK,
                         new Intent("inline-data").putExtra("data", bitmap));
                 mActivity.finish();
@@ -1735,7 +1737,7 @@ public class PhotoModule
         if (mCameraDevice != null) {
             mCameraDevice.setDisplayOrientation(mDisplayRotation);
         }
-        Log.v(TAG, "setDisplayOrientation (screen:preview) " +
+        Log.e(TAG, "Shiva setDisplayOrientation (screen:preview) " +
                 mDisplayRotation + ":" + mDisplayOrientation);
     }
 
diff --git a/src/com/android/camera/VideoModule.java b/src/com/android/camera/VideoModule.java
index 33ba43c40..46050148c 100644
--- a/src/com/android/camera/VideoModule.java
+++ b/src/com/android/camera/VideoModule.java
@@ -1200,7 +1200,8 @@ public class VideoModule extends CameraModule
                 mAppController.getOrientationManager().getDeviceOrientation().getDegrees();
         int rotation = CameraUtil.getImageRotation(
                 sensorOrientation, deviceOrientation, isCameraFrontFacing());
-        mMediaRecorder.setOrientationHint(rotation);
+        Log.e(TAG,"Shiva rotation in app "+rotation); 
+        //mMediaRecorder.setOrientationHint(rotation);
 
         try {
             mMediaRecorder.prepare();
-- 
2.17.1

