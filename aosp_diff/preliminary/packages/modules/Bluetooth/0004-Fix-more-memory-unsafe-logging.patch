From 9f96ec4a5c2b324bb1ebbd4c7e4b7d5ae47b84e4 Mon Sep 17 00:00:00 2001
From: Brian Delwiche <delwiche@google.com>
Date: Sat, 2 Nov 2024 02:29:10 +0000
Subject: [PATCH] Fix more memory-unsafe logging

In various locations around the stack, log statements use structures that
may, in exceptional cases, have been freed by preceding calls.  This can
lead to use after free and potentially to security vulnerabilities.

Use local variables instead, or store the length before the call if no
local variable is already convenient.

Bug: 375404242
Bug: 375398779
Bug: 375397720
Bug: 375397164
Bug: 375397370
Bug: 375396810
Bug: 375159652
Bug: 375160214
Bug: 375159480
Test: m libbluetooth
Test: researcher POC
Flag: EXEMPT trivial logic fix
Ignore-AOSP-First: security
Tag: #security
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:43cfd234de9ba9557118b0014513269cc1aeefda)
Merged-In: I6289907e86786eb2e10a163f7fb5d2557eab00bc
Change-Id: I6289907e86786eb2e10a163f7fb5d2557eab00bc
---
 system/stack/avct/avct_lcb_act.cc    | 3 ++-
 system/stack/bnep/bnep_main.cc       | 5 ++---
 system/stack/bnep/bnep_utils.cc      | 3 ++-
 system/stack/hid/hidd_conn.cc        | 4 ++--
 system/stack/rfcomm/rfc_ts_frames.cc | 4 +++-
 system/stack/rfcomm/rfc_utils.cc     | 3 ++-
 system/stack/sdp/sdp_discovery.cc    | 2 +-
 system/stack/sdp/sdp_server.cc       | 4 ++--
 8 files changed, 16 insertions(+), 12 deletions(-)

diff --git a/system/stack/avct/avct_lcb_act.cc b/system/stack/avct/avct_lcb_act.cc
index e06bf57634..edb04dfa17 100644
--- a/system/stack/avct/avct_lcb_act.cc
+++ b/system/stack/avct/avct_lcb_act.cc
@@ -725,10 +725,11 @@ void avct_lcb_msg_ind(tAVCT_LCB* p_lcb, tAVCT_LCB_EVT* p_data) {
     p = (uint8_t*)(p_buf + 1) + p_buf->offset;
     AVCT_BUILD_HDR(p, label, AVCT_PKT_TYPE_SINGLE, AVCT_REJ);
     UINT16_TO_BE_STREAM(p, pid);
+    uint16_t len = p_buf->len;
     if (stack::l2cap::get_interface().L2CA_DataWrite(p_lcb->ch_lcid, p_buf) !=
         tL2CAP_DW_RESULT::SUCCESS) {
       log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_lcb->peer_addr,
-                p_lcb->ch_lcid, p_buf->len);
+                p_lcb->ch_lcid, len);
     }
   }
 }
diff --git a/system/stack/bnep/bnep_main.cc b/system/stack/bnep/bnep_main.cc
index e0e3c4540c..004d39453c 100644
--- a/system/stack/bnep/bnep_main.cc
+++ b/system/stack/bnep/bnep_main.cc
@@ -294,11 +294,10 @@ static void bnep_congestion_ind(uint16_t l2cap_cid, bool is_congested) {
       if (!p_buf) {
         break;
       }
-
+      uint16_t len = p_buf->len;
       if (stack::l2cap::get_interface().L2CA_DataWrite(l2cap_cid, p_buf) !=
           tL2CAP_DW_RESULT::SUCCESS) {
-        log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_bcb->rem_bda, l2cap_cid,
-                  p_buf->len);
+        log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_bcb->rem_bda, l2cap_cid, len);
       }
     }
   }
diff --git a/system/stack/bnep/bnep_utils.cc b/system/stack/bnep/bnep_utils.cc
index 06566d85b3..5521440a93 100644
--- a/system/stack/bnep/bnep_utils.cc
+++ b/system/stack/bnep/bnep_utils.cc
@@ -408,10 +408,11 @@ void bnepu_check_send_packet(tBNEP_CONN* p_bcb, BT_HDR* p_buf) {
       fixed_queue_enqueue(p_bcb->xmit_q, p_buf);
     }
   } else {
+    uint16_t len = p_buf->len;
     if (stack::l2cap::get_interface().L2CA_DataWrite(p_bcb->l2cap_cid, p_buf) !=
         tL2CAP_DW_RESULT::SUCCESS) {
       log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_bcb->rem_bda,
-                p_bcb->l2cap_cid, p_buf->len);
+                p_bcb->l2cap_cid, len);
     }
   }
 }
diff --git a/system/stack/hid/hidd_conn.cc b/system/stack/hid/hidd_conn.cc
index c64a7b9104..695e5d6c84 100644
--- a/system/stack/hid/hidd_conn.cc
+++ b/system/stack/hid/hidd_conn.cc
@@ -88,10 +88,10 @@ static void hidd_check_config_done() {
 
     // send outstanding data on intr
     if (hd_cb.pending_data) {
+      uint16_t len = hd_cb.pending_data->len;
       if (stack::l2cap::get_interface().L2CA_DataWrite(p_hcon->intr_cid, hd_cb.pending_data) !=
           tL2CAP_DW_RESULT::SUCCESS) {
-        log::warn("Unable to write L2CAP data cid:{} len:{}", p_hcon->intr_cid,
-                  hd_cb.pending_data->len);
+        log::warn("Unable to write L2CAP data cid:{} len:{}", p_hcon->intr_cid, len);
       }
       hd_cb.pending_data = NULL;
     }
diff --git a/system/stack/rfcomm/rfc_ts_frames.cc b/system/stack/rfcomm/rfc_ts_frames.cc
index b0b4b1c143..e24e398f14 100644
--- a/system/stack/rfcomm/rfc_ts_frames.cc
+++ b/system/stack/rfcomm/rfc_ts_frames.cc
@@ -198,10 +198,12 @@ void rfc_send_buf_uih(tRFC_MCB* p_mcb, uint8_t dlci, BT_HDR* p_buf) {
   if (dlci == RFCOMM_MX_DLCI) {
     rfc_check_send_cmd(p_mcb, p_buf);
   } else {
+    uint16_t len = p_buf->len;
+
     if (stack::l2cap::get_interface().L2CA_DataWrite(p_mcb->lcid, p_buf) !=
         tL2CAP_DW_RESULT::SUCCESS) {
       log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_mcb->bd_addr, p_mcb->lcid,
-                p_buf->len);
+                len);
     }
   }
 }
diff --git a/system/stack/rfcomm/rfc_utils.cc b/system/stack/rfcomm/rfc_utils.cc
index 23420892cb..0c5074db76 100644
--- a/system/stack/rfcomm/rfc_utils.cc
+++ b/system/stack/rfcomm/rfc_utils.cc
@@ -428,9 +428,10 @@ void rfc_check_send_cmd(tRFC_MCB* p_mcb, BT_HDR* p_buf) {
     if (p == NULL) {
       break;
     }
+    uint16_t len = p->len;
     if (stack::l2cap::get_interface().L2CA_DataWrite(p_mcb->lcid, p) != tL2CAP_DW_RESULT::SUCCESS) {
       log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_mcb->bd_addr, p_mcb->lcid,
-                p->len);
+                len);
     }
   }
 }
diff --git a/system/stack/sdp/sdp_discovery.cc b/system/stack/sdp/sdp_discovery.cc
index 251d2fc94e..43b77c737e 100644
--- a/system/stack/sdp/sdp_discovery.cc
+++ b/system/stack/sdp/sdp_discovery.cc
@@ -877,7 +877,7 @@ static void process_service_attr_rsp(tCONN_CB* p_ccb, uint8_t* p_reply, uint8_t*
     if (stack::l2cap::get_interface().L2CA_DataWrite(p_ccb->connection_id, p_msg) !=
         tL2CAP_DW_RESULT::SUCCESS) {
       log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_ccb->device_address,
-                p_ccb->connection_id, p_msg->len);
+                p_ccb->connection_id, p - p_start);
     }
 
     /* Start inactivity timer */
diff --git a/system/stack/sdp/sdp_server.cc b/system/stack/sdp/sdp_server.cc
index 7566e7e3d2..4c7b6df4d1 100644
--- a/system/stack/sdp/sdp_server.cc
+++ b/system/stack/sdp/sdp_server.cc
@@ -300,7 +300,7 @@ static void process_service_search(tCONN_CB* p_ccb, uint16_t trans_num, uint16_t
   if (stack::l2cap::get_interface().L2CA_DataWrite(p_ccb->connection_id, p_buf) !=
       tL2CAP_DW_RESULT::SUCCESS) {
     log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_ccb->device_address,
-              p_ccb->connection_id, p_buf->len);
+              p_ccb->connection_id, p_rsp - p_rsp_start);
   }
 }
 
@@ -921,7 +921,7 @@ static void process_service_search_attr_req(tCONN_CB* p_ccb, uint16_t trans_num,
   if (stack::l2cap::get_interface().L2CA_DataWrite(p_ccb->connection_id, p_buf) !=
       tL2CAP_DW_RESULT::SUCCESS) {
     log::warn("Unable to write L2CAP data peer:{} cid:{} len:{}", p_ccb->device_address,
-              p_ccb->connection_id, p_buf->len);
+              p_ccb->connection_id, p_rsp - p_rsp_start);
   }
 }
 
-- 
2.34.1

