From 495d32429fd801c6cd7fe5e568b9c805f47fb4ed Mon Sep 17 00:00:00 2001
From: Billy Huang <billyhuang@google.com>
Date: Tue, 25 Feb 2025 14:16:28 -0800
Subject: [PATCH] parse userId from authority in opp in the same way as
 ContentProvider

Ensures that userId determination is consistent with ContentProvider

Bug: 395647005
Bug: 395643490
Flag: EXEMPT fix for vulnerability
Test: m com.google.android.bt
Test: atest BluetoothJavaUnitTests:com.android.bluetooth.opp.BluetoothOppSendFileInfoTest
Ignore-AOSP-First: fix for undisclosed vulnerability
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:bb8a03783901dc92738fdd9af6f3ca88feda4bcf)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:230fa5b83f10c34983cbf7637faef6c060b8ef25)
Merged-In: I7b6affec5dada7c9f0319fbdb35a6e977e51990f
Change-Id: I7b6affec5dada7c9f0319fbdb35a6e977e51990f
---
 .../opp/BluetoothOppSendFileInfo.java         | 24 ++++++++++++++++++-
 .../opp/BluetoothOppSendFileInfoTest.java     | 20 +++++++++-------
 2 files changed, 35 insertions(+), 9 deletions(-)

diff --git a/android/app/src/com/android/bluetooth/opp/BluetoothOppSendFileInfo.java b/android/app/src/com/android/bluetooth/opp/BluetoothOppSendFileInfo.java
index 2d727f9fdf..df128da24e 100644
--- a/android/app/src/com/android/bluetooth/opp/BluetoothOppSendFileInfo.java
+++ b/android/app/src/com/android/bluetooth/opp/BluetoothOppSendFileInfo.java
@@ -36,6 +36,7 @@ import static android.os.UserHandle.myUserId;
 
 import android.bluetooth.BluetoothProfile;
 import android.bluetooth.BluetoothProtoEnums;
+import android.content.ContentProvider;
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.res.AssetFileDescriptor;
@@ -367,8 +368,29 @@ public class BluetoothOppSendFileInfo {
         return new BluetoothOppSendFileInfo(fileName, contentType, length, is, 0);
     }
 
+    /**
+     * Determine if the given {@link Uri} is a content uri for another user.
+     *
+     * <p>RFC 2396 s.3.2. states that <tt>'@'</tt> is reserved in the authority component. Its
+     * encoded form should be interpreted as data within the authority component. However,
+     * ContentProvider APIs use the decoded {@link Uri#getAuthority()} with {@link
+     * ContentProvider#getUserIdFromAuthority(String, int)} to determine the <tt>userId</tt> in the
+     * userInfo, rather than {@link Uri#getUserInfo()}. An encoded <tt>'@'</tt>, which is
+     * <tt>'%40'</tt>, is interpreted by ContentProvider as the separator for userInfo and host.
+     *
+     * <p>As an unbundled module, Bluetooth cannot access ContentProvider#getUserIdFromAuthority, so
+     * parse userInfo here from the authority.
+     */
     private static boolean isContentUriForOtherUser(Uri uri) {
-        String uriUserId = uri.getUserInfo();
+        String authority = uri.getAuthority();
+        if (authority == null) {
+            return false;
+        }
+        int atIndex = authority.lastIndexOf('@');
+        if (atIndex == -1) {
+            return false;
+        }
+        String uriUserId = authority.substring(0, atIndex);
         return !TextUtils.isEmpty(uriUserId)
                 && !Objects.equals(uriUserId, String.valueOf(myUserId()));
     }
diff --git a/android/app/tests/unit/src/com/android/bluetooth/opp/BluetoothOppSendFileInfoTest.java b/android/app/tests/unit/src/com/android/bluetooth/opp/BluetoothOppSendFileInfoTest.java
index aad8a31170..90d2a17645 100644
--- a/android/app/tests/unit/src/com/android/bluetooth/opp/BluetoothOppSendFileInfoTest.java
+++ b/android/app/tests/unit/src/com/android/bluetooth/opp/BluetoothOppSendFileInfoTest.java
@@ -34,10 +34,12 @@ import android.net.Uri;
 import android.provider.OpenableColumns;
 
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
 
 import com.android.bluetooth.BluetoothMethodProxy;
 
+import com.google.testing.junit.testparameterinjector.TestParameter;
+import com.google.testing.junit.testparameterinjector.TestParameterInjector;
+
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
@@ -50,7 +52,7 @@ import org.mockito.junit.MockitoRule;
 import java.io.FileInputStream;
 import java.io.IOException;
 
-@RunWith(AndroidJUnit4.class)
+@RunWith(TestParameterInjector.class)
 public class BluetoothOppSendFileInfoTest {
     Context mContext;
     MatrixCursor mCursor;
@@ -122,10 +124,11 @@ public class BluetoothOppSendFileInfoTest {
     }
 
     @Test
-    public void generateFileInfo_withContentUriForOtherUser_returnsSendFileInfoError()
-            throws Exception {
+    public void generateFileInfo_withContentUriForOtherUser_returnsSendFileInfoError(
+            @TestParameter boolean encodedAt) throws Exception {
         String type = "image/jpeg";
-        Uri uri = buildContentUriWithEncodedAuthority((myUserId() + 1) + "@media");
+        String authoritySuffix = encodedAt ? "%40media" : "@media";
+        Uri uri = buildContentUriWithEncodedAuthority((myUserId() + 1) + authoritySuffix);
 
         long fileLength = 1000;
         String fileName = "pic.jpg";
@@ -185,10 +188,11 @@ public class BluetoothOppSendFileInfoTest {
     }
 
     @Test
-    public void generateFileInfo_withContentUriForSameUser_returnsInfoWithCorrectLength()
-            throws Exception {
+    public void generateFileInfo_withContentUriForSameUser_returnsInfoWithCorrectLength(
+            @TestParameter boolean encodedAt) throws Exception {
         String type = "image/jpeg";
-        Uri uri = buildContentUriWithEncodedAuthority(myUserId() + "@media");
+        String authoritySuffix = encodedAt ? "%40media" : "@media";
+        Uri uri = buildContentUriWithEncodedAuthority(myUserId() + authoritySuffix);
 
         long fileLength = 1000;
         String fileName = "pic.jpg";
-- 
2.49.0.1077.gc0e912fd4c-goog

