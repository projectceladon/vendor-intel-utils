From b9240c987e91dcf21c5a8b3c75b6bf43f848f2e4 Mon Sep 17 00:00:00 2001
From: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Date: Thu, 23 Jun 2022 17:37:05 +0530
Subject: [PATCH] [Patch] Fix bluetooth crash

1. Fix for crash during SDP due to garbage memory access
Issue: Crash is seen when repeated connection and disconnection
is made for OPP file transfer. crash happens during SDP result parsing
Root cause: tSDP_PROTOCOL_ELEM pe is not initialized

2. Fix bluetooth crash when stack unable to start HCI_MODULE
When BT is in Host controlled mode for CIV, if user tries
to turn ON, Bluetooth crashes continously. Added fix in
stack to gracefully shutdown HCI_MODULE if it is unable to
start it.

Signed-off-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Change-Id: I4a0e62f36bb834c7c8af2a68533190320500ca07
---
 system/bta/ag/bta_ag_sdp.cc               | 4 +++-
 system/bta/dm/bta_dm_act.cc               | 8 ++++++--
 system/bta/hf_client/bta_hf_client_sdp.cc | 5 +++--
 system/bta/jv/bta_jv_act.cc               | 4 +++-
 system/btcore/src/module.cc               | 2 +-
 5 files changed, 16 insertions(+), 7 deletions(-)

diff --git a/system/bta/ag/bta_ag_sdp.cc b/system/bta/ag/bta_ag_sdp.cc
index e9af15c918..1359404b2e 100644
--- a/system/bta/ag/bta_ag_sdp.cc
+++ b/system/bta/ag/bta_ag_sdp.cc
@@ -326,9 +326,11 @@ bool bta_ag_sdp_find_attr(tBTA_AG_SCB* p_scb, tBTA_SERVICE_MASK service) {
         break;
     }
 
+    memset(&pe, 0, sizeof(tSDP_PROTOCOL_ELEM));
     /* get scn from proto desc list if initiator */
     if (p_scb->role == BTA_AG_INT) {
-      if (SDP_FindProtocolListElemInRec(p_rec, UUID_PROTOCOL_RFCOMM, &pe)) {
+      if ((SDP_FindProtocolListElemInRec(p_rec, UUID_PROTOCOL_RFCOMM, &pe))
+         && (pe.num_params != 0)) {
         p_scb->peer_scn = (uint8_t)pe.params[0];
       } else {
         continue;
diff --git a/system/bta/dm/bta_dm_act.cc b/system/bta/dm/bta_dm_act.cc
index 52bb6448f0..0fa56823c1 100644
--- a/system/bta/dm/bta_dm_act.cc
+++ b/system/bta/dm/bta_dm_act.cc
@@ -1095,11 +1095,15 @@ void bta_dm_sdp_result(tBTA_DM_MSG* p_data) {
     do {
       p_sdp_rec = NULL;
       if (bta_dm_search_cb.service_index == (BTA_USER_SERVICE_ID + 1)) {
-        if (p_sdp_rec && SDP_FindProtocolListElemInRec(
-                             p_sdp_rec, UUID_PROTOCOL_RFCOMM, &pe)) {
+        memset(&pe, 0, sizeof(tSDP_PROTOCOL_ELEM));
+        if (p_sdp_rec && (SDP_FindProtocolListElemInRec(
+                             p_sdp_rec, UUID_PROTOCOL_RFCOMM, &pe))
+                             && (pe.num_params != 0)) {
           bta_dm_search_cb.peer_scn = (uint8_t)pe.params[0];
           scn_found = true;
         }
+        if (pe.num_params == 0)
+          APPL_TRACE_ERROR("%s pe.num_params = 0", __func__);
       } else {
         service =
             bta_service_id_to_uuid_lkup_tbl[bta_dm_search_cb.service_index - 1];
diff --git a/system/bta/hf_client/bta_hf_client_sdp.cc b/system/bta/hf_client/bta_hf_client_sdp.cc
index 96b7a6d14b..8fc232ab06 100755
--- a/system/bta/hf_client/bta_hf_client_sdp.cc
+++ b/system/bta/hf_client/bta_hf_client_sdp.cc
@@ -226,7 +226,7 @@ bool bta_hf_client_sdp_find_attr(tBTA_HF_CLIENT_CB* client_cb) {
   bool result = false;
 
   client_cb->peer_version = HFP_VERSION_1_1; /* Default version */
-
+  memset(&pe, 0, sizeof(tSDP_PROTOCOL_ELEM));
   /* loop through all records we found */
   while (true) {
     /* get next record; if none found, we're done */
@@ -238,7 +238,8 @@ bool bta_hf_client_sdp_find_attr(tBTA_HF_CLIENT_CB* client_cb) {
 
     /* get scn from proto desc list if initiator */
     if (client_cb->role == BTA_HF_CLIENT_INT) {
-      if (SDP_FindProtocolListElemInRec(p_rec, UUID_PROTOCOL_RFCOMM, &pe)) {
+      if ((SDP_FindProtocolListElemInRec(p_rec, UUID_PROTOCOL_RFCOMM, &pe))
+          && (pe.num_params != 0)) {
         client_cb->peer_scn = (uint8_t)pe.params[0];
       } else {
         continue;
diff --git a/system/bta/jv/bta_jv_act.cc b/system/bta/jv/bta_jv_act.cc
index 6f50077f9c..3993868637 100644
--- a/system/bta/jv/bta_jv_act.cc
+++ b/system/bta/jv/bta_jv_act.cc
@@ -766,12 +766,14 @@ static void bta_jv_start_discovery_cback(tSDP_RESULT result,
     if (result == SDP_SUCCESS || result == SDP_DB_FULL) {
       tSDP_DISC_REC* p_sdp_rec = NULL;
       tSDP_PROTOCOL_ELEM pe;
+      memset(&pe, 0, sizeof(tSDP_PROTOCOL_ELEM));
       VLOG(2) << __func__ << ": bta_jv_cb.uuid=" << bta_jv_cb.uuid;
       p_sdp_rec = SDP_FindServiceUUIDInDb(p_bta_jv_cfg->p_sdp_db,
                                           bta_jv_cb.uuid, p_sdp_rec);
       VLOG(2) << __func__ << ": p_sdp_rec=" << p_sdp_rec;
       if (p_sdp_rec &&
-          SDP_FindProtocolListElemInRec(p_sdp_rec, UUID_PROTOCOL_RFCOMM, &pe)) {
+          (SDP_FindProtocolListElemInRec(p_sdp_rec, UUID_PROTOCOL_RFCOMM, &pe))
+         && (pe.num_params != 0)) {
         dcomp.scn = (uint8_t)pe.params[0];
         status = BTA_JV_SUCCESS;
       }
diff --git a/system/btcore/src/module.cc b/system/btcore/src/module.cc
index f0d643d63f..8df9defceb 100644
--- a/system/btcore/src/module.cc
+++ b/system/btcore/src/module.cc
@@ -100,7 +100,7 @@ void module_shut_down(const module_t* module) {
   CHECK(state <= MODULE_STATE_STARTED);
 
   // Only something to do if the module was actually started
-  if (state < MODULE_STATE_STARTED) return;
+  if (state < MODULE_STATE_STARTED && strcmp(module->name, "hci_module")) return;
 
   LOG_INFO("%s Shutting down module \"%s\"", __func__, module->name);
   if (!call_lifecycle_function(module->shut_down)) {
-- 
2.35.1

