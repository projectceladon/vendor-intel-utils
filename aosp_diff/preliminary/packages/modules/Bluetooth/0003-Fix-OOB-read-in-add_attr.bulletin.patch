From 5e3953251ab50bcdb6058f5e5afc82d6271c6e1e Mon Sep 17 00:00:00 2001
From: Brian Delwiche <delwiche@google.com>
Date: Wed, 9 Oct 2024 18:05:49 +0000
Subject: [PATCH] Fix OOB read in add_attr

It is possible in exceptional cases for add_attr to be passed a p
pointer one byte short of its p_end pointer, which leads to an OOB read
as it attempts to read the type of the next attribute.

Add a check for this.

Bug: 367274727
Test: m libbluetooth
Ignore-AOSP-First: security
Tag: security
Flag: EXEMPT trivial validity check
(cherry picked from commit a1dee2afab2b7e422e0f763cdcf3b7ee9fcddd12)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:655ceaa67a408f37c8e432e97bea0bcedeb8f478)
Merged-In: I4b5fcbce3c0f6a767356593aade7d7d871da974c
Change-Id: I4b5fcbce3c0f6a767356593aade7d7d871da974c
---
 system/stack/sdp/sdp_discovery.cc | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/system/stack/sdp/sdp_discovery.cc b/system/stack/sdp/sdp_discovery.cc
index 3a8529ed93..229186af08 100644
--- a/system/stack/sdp/sdp_discovery.cc
+++ b/system/stack/sdp/sdp_discovery.cc
@@ -304,6 +304,11 @@ static uint8_t* add_attr(uint8_t* p, uint8_t* p_end, tSDP_DISCOVERY_DB* p_db,
 
   nest_level &= ~(SDP_ADDITIONAL_LIST_MASK);
 
+  if (p + sizeof(uint8_t) > p_end) {
+    log::warn("bad arguments to add_addr");
+    return NULL;
+  }
+
   type = *p++;
   p = sdpu_get_len_from_type(p, p_end, type, &attr_len);
   if (p == NULL || (p + attr_len) > p_end) {
-- 
2.49.0.1077.gc0e912fd4c-goog

