From 4b81907ce942dfe3422de75a3ab5f163ec089a8a Mon Sep 17 00:00:00 2001
From: Brian Delwiche <delwiche@google.com>
Date: Thu, 13 Feb 2025 18:08:30 +0000
Subject: [PATCH] Fix OOB read in add_attr

It is possible in exceptional cases for add_attr to be passed a p
pointer one byte short of its p_end pointer, which leads to an OOB read
as it attempts to read the type of the next attribute.

Add a check for this.

Bug: 367274727
Test: m libbluetooth
Ignore-AOSP-First: security
Tag: security
Flag: EXEMPT trivial validity check
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:319bb08af014e30654548c679f5e1cb2721c0c60)
Merged-In: Ic3079c4c2d6933355cf4e8444e8f25ebedeafefe
Change-Id: Ic3079c4c2d6933355cf4e8444e8f25ebedeafefe
---
 system/stack/sdp/sdp_discovery.cc | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/system/stack/sdp/sdp_discovery.cc b/system/stack/sdp/sdp_discovery.cc
index 85d3dd3c24..970e9461ae 100644
--- a/system/stack/sdp/sdp_discovery.cc
+++ b/system/stack/sdp/sdp_discovery.cc
@@ -855,6 +855,11 @@ static uint8_t* add_attr(uint8_t* p, uint8_t* p_end, tSDP_DISCOVERY_DB* p_db,
 
   nest_level &= ~(SDP_ADDITIONAL_LIST_MASK);
 
+  if (p + sizeof(uint8_t) > p_end) {
+    SDP_TRACE_WARNING("bad arguments to add_addr", __func__);
+    return NULL;
+  }
+
   type = *p++;
   p = sdpu_get_len_from_type(p, p_end, type, &attr_len);
   if (p == NULL || (p + attr_len) > p_end) {
-- 
2.49.0.1077.gc0e912fd4c-goog

