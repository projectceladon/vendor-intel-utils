From d69f0639b9cc057546378bf0c9b481ae393126c4 Mon Sep 17 00:00:00 2001
From: Pawan Wagh <waghpawan@google.com>
Date: Wed, 28 Jun 2023 23:11:01 +0000
Subject: [PATCH] Make log reader thread a class member

pushedEventThread references class members after detaching. Making
pushedEventThread as class member and joining in statsService
destructor. Adding a method to stop readLogs thread.

Ignore-AOSP-First: Bug is in still security triage and fuzzer is
crashing on startup.
Test: atest statsd_test
Test: m statsd_service_fuzzer && adb sync data && adb shell
/data/fuzz/arm64/statsd_service_fuzzer/statsd_service_fuzzer -runs=10000
Bug: 285645039
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:3937ea3cdcf531a14cdba4ef176d8aa89d9d6066)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:e67695fae80d3164f5cd5237ebf1b7a0dbfed6f4)
Merged-In: I91dadeaf8a14d2e41d272c0ebfac618bff255998
Change-Id: I91dadeaf8a14d2e41d272c0ebfac618bff255998
---
 statsd/src/StatsService.cpp | 23 +++++++++++++++++++++--
 statsd/src/StatsService.h   |  9 +++++++++
 2 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/statsd/src/StatsService.cpp b/statsd/src/StatsService.cpp
index 3ecb8532..f17f93bb 100644
--- a/statsd/src/StatsService.cpp
+++ b/statsd/src/StatsService.cpp
@@ -159,12 +159,15 @@ StatsService::StatsService(const sp<Looper>& handlerLooper, shared_ptr<LogEventQ
     init_system_properties();
 
     if (mEventQueue != nullptr) {
-        std::thread pushedEventThread([this] { readLogs(); });
-        pushedEventThread.detach();
+        mLogsReaderThread = std::make_unique<std::thread>([this] { readLogs(); });
     }
 }
 
 StatsService::~StatsService() {
+    if (mEventQueue != nullptr) {
+        stopReadingLogs();
+        mLogsReaderThread->join();
+    }
 }
 
 /* Runs on a dedicated thread to process pushed events. */
@@ -173,6 +176,13 @@ void StatsService::readLogs() {
     while (1) {
         // Block until an event is available.
         auto event = mEventQueue->waitPop();
+
+        // Below flag will be set when statsd is exiting and log event will be pushed to break
+        // out of waitPop.
+        if (mIsStopRequested) {
+            break;
+        }
+
         // Pass it to StatsLogProcess to all configs/metrics
         // At this point, the LogEventQueue is not blocked, so that the socketListener
         // can read events from the socket and write to buffer to avoid data drop.
@@ -1315,6 +1325,15 @@ void StatsService::statsCompanionServiceDiedImpl() {
     mPullerManager->SetStatsCompanionService(nullptr);
 }
 
+void StatsService::stopReadingLogs() {
+    mIsStopRequested = true;
+    // Push this event so that readLogs will process and break out of the loop
+    // after the stop is requested.
+    int64_t timeStamp;
+    std::unique_ptr<LogEvent> logEvent = std::make_unique<LogEvent>(/*uid=*/0, /*pid=*/0);
+    mEventQueue->push(std::move(logEvent), &timeStamp);
+}
+
 }  // namespace statsd
 }  // namespace os
 }  // namespace android
diff --git a/statsd/src/StatsService.h b/statsd/src/StatsService.h
index 3d5ec2c6..ae23c41e 100644
--- a/statsd/src/StatsService.h
+++ b/statsd/src/StatsService.h
@@ -338,6 +338,13 @@ private:
      */
     void statsCompanionServiceDiedImpl();
 
+    /**
+     *  This method is used to stop log reader thread.
+     */
+    void stopReadingLogs();
+
+    std::atomic<bool> mIsStopRequested = false;
+
     /**
      * Tracks the uid <--> package name mapping.
      */
@@ -381,6 +388,8 @@ private:
     mutable mutex mShellSubscriberMutex;
     std::shared_ptr<LogEventQueue> mEventQueue;
 
+    std::unique_ptr<std::thread> mLogsReaderThread;
+
     MultiConditionTrigger mBootCompleteTrigger;
     static const inline string kBootCompleteTag = "BOOT_COMPLETE";
     static const inline string kUidMapReceivedTag = "UID_MAP";
-- 
2.42.0.515.g380fc7ccd1-goog

