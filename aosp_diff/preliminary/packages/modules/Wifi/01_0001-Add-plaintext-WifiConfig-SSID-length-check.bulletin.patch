From debc548ac085ba1ab0582172b97d965e9a1ea43a Mon Sep 17 00:00:00 2001
From: Quang Anh Luong <qal@google.com>
Date: Thu, 13 Jun 2024 20:45:34 +0900
Subject: [PATCH] Add plaintext WifiConfig SSID length check

Plaintext WifiConfiguration SSIDs need a length check or else an
arbitrary length may be set. Set the max length to 32 characters, as
the minimum length for any SSID encoding is 1-byte per character.

Bug: 343714914
Test: atest WifiConfigurationUtilTest
Change-In: I88994f6c022f7b427aceab3fac6cc876a0ecb4c9
(cherry picked from commit 4a7564305147e97cbd6f8df706c78bf2714eb200)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:3b2ff7586f6961e5f6394b821f926a34942f0f94)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:96f6cc1a875a255c7587946cb6563220ff0b3e19)
Merged-In: I88994f6c022f7b427aceab3fac6cc876a0ecb4c9
Change-Id: I88994f6c022f7b427aceab3fac6cc876a0ecb4c9
---
 .../server/wifi/WifiConfigurationUtil.java      | 17 +++++++++++------
 .../server/wifi/WifiConfigurationUtilTest.java  | 17 ++++++++++++++++-
 2 files changed, 27 insertions(+), 7 deletions(-)

diff --git a/service/java/com/android/server/wifi/WifiConfigurationUtil.java b/service/java/com/android/server/wifi/WifiConfigurationUtil.java
index d5de4191b0..4f636cbbed 100644
--- a/service/java/com/android/server/wifi/WifiConfigurationUtil.java
+++ b/service/java/com/android/server/wifi/WifiConfigurationUtil.java
@@ -62,9 +62,7 @@ public class WifiConfigurationUtil {
      * Constants used for validating external config objects.
      */
     private static final int ENCLOSING_QUOTES_LEN = 2;
-    private static final int SSID_UTF_8_MIN_LEN = 1 + ENCLOSING_QUOTES_LEN;
-    private static final int SSID_UTF_8_MAX_LEN = 32 + ENCLOSING_QUOTES_LEN;
-    private static final int SSID_HEX_MIN_LEN = 2;
+    private static final int SSID_PLAINTEXT_MAX_LEN = 32 + ENCLOSING_QUOTES_LEN;
     private static final int SSID_HEX_MAX_LEN = 64;
     private static final int PSK_ASCII_MIN_LEN = 8 + ENCLOSING_QUOTES_LEN;
     private static final int SAE_ASCII_MIN_LEN = 1 + ENCLOSING_QUOTES_LEN;
@@ -426,9 +424,16 @@ public class WifiConfigurationUtil {
             Log.e(TAG, "validateSsid failed: empty string");
             return false;
         }
-        if (!ssid.startsWith("\"") && ssid.length() > SSID_HEX_MAX_LEN) {
-            Log.e(TAG, "validateSsid failed: hex ssid " + ssid + " longer than 32 bytes");
-            return false;
+        if (ssid.startsWith("\"")) {
+            if (ssid.length() > SSID_PLAINTEXT_MAX_LEN) {
+                Log.e(TAG, "validateSsid failed: plaintext ssid " + ssid + " longer than 32 chars");
+                return false;
+            }
+        } else {
+            if (ssid.length() > SSID_HEX_MAX_LEN) {
+                Log.e(TAG, "validateSsid failed: hex ssid " + ssid + " longer than 32 bytes");
+                return false;
+            }
         }
         WifiSsid wifiSsid;
         try {
diff --git a/service/tests/wifitests/src/com/android/server/wifi/WifiConfigurationUtilTest.java b/service/tests/wifitests/src/com/android/server/wifi/WifiConfigurationUtilTest.java
index 0c62816213..0722d3e7f1 100644
--- a/service/tests/wifitests/src/com/android/server/wifi/WifiConfigurationUtilTest.java
+++ b/service/tests/wifitests/src/com/android/server/wifi/WifiConfigurationUtilTest.java
@@ -314,7 +314,7 @@ public class WifiConfigurationUtilTest extends WifiBaseTest {
      * string.
      */
     @Test
-    public void testValidateNegativeCases_MalformedAsciiSsidString() {
+    public void testValidateNegativeCases_MalformedPlaintextSsidString() {
         WifiConfiguration config = WifiConfigurationTestUtil.createOpenNetwork();
         assertTrue(WifiConfigurationUtil.validate(config, SUPPORTED_FEATURES_ALL,
                 WifiConfigurationUtil.VALIDATE_FOR_ADD));
@@ -324,6 +324,21 @@ public class WifiConfigurationUtilTest extends WifiBaseTest {
                 WifiConfigurationUtil.VALIDATE_FOR_ADD));
     }
 
+    /**
+     * Verify that the validate method fails to validate WifiConfiguration with a too-long ssid
+     * string.
+     */
+    @Test
+    public void testValidateNegativeCases_TooLongPlaintextSsidString() {
+        WifiConfiguration config = WifiConfigurationTestUtil.createOpenNetwork();
+        assertTrue(WifiConfigurationUtil.validate(config, SUPPORTED_FEATURES_ALL,
+                WifiConfigurationUtil.VALIDATE_FOR_ADD));
+
+        config.SSID = "\"012345678901234567890123456789012\"";
+        assertFalse(WifiConfigurationUtil.validate(config, SUPPORTED_FEATURES_ALL,
+                WifiConfigurationUtil.VALIDATE_FOR_ADD));
+    }
+
     /**
      * Verify that the validate method fails to validate WifiConfiguration with bad ssid length.
      */
-- 
2.46.0.469.g59c65b2a67-goog

