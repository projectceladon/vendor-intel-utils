From 95e97e4dd02cf57cb47363ed7ba7aa628c8c8b74 Mon Sep 17 00:00:00 2001
From: "Yan, Shaopu" <shaopu.yan@intel.com>
Date: Mon, 7 Jan 2019 13:06:59 +0800
Subject: [PATCH] [Google-Diff] make the app/keymaster build pass

Change-Id: Icc4c1a5390fd1122ed8dcb67a506250d73779d49
Tracked-On:
Signed-off-by: Yan, Shaopu <shaopu.yan@intel.com>
---
 ipc/keymaster_ipc.cpp            |  2 ++
 ipc/rules.mk                     |  2 +-
 rules.mk                         | 25 +++++++++++++++----------
 secure_storage.cpp               |  4 ++--
 trusty_keymaster_enforcement.cpp |  2 +-
 5 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/ipc/keymaster_ipc.cpp b/ipc/keymaster_ipc.cpp
index 274bb44..4edb8a3 100644
--- a/ipc/keymaster_ipc.cpp
+++ b/ipc/keymaster_ipc.cpp
@@ -29,6 +29,8 @@
 
 #include "trusty_keymaster.h"
 #include "trusty_logger.h"
+#include <trusty_std.h>
+#include <trusty_uuid.h>
 
 using namespace keymaster;
 
diff --git a/ipc/rules.mk b/ipc/rules.mk
index a8226e6..a74428d 100644
--- a/ipc/rules.mk
+++ b/ipc/rules.mk
@@ -17,6 +17,6 @@ CUR_DIR := $(GET_LOCAL_DIR)
 
 MODULE_SRCS += $(CUR_DIR)/keymaster_ipc.cpp
 
-MODULE_DEPS += trusty/user/base/interface/keymaster
+MODULE_DEPS += interface/keymaster
 
 CUR_DIR =
diff --git a/rules.mk b/rules.mk
index 79fd14f..01b707a 100644
--- a/rules.mk
+++ b/rules.mk
@@ -17,7 +17,8 @@ LOCAL_DIR := $(GET_LOCAL_DIR)
 
 MODULE := $(LOCAL_DIR)
 
-KEYMASTER_ROOT := $(TRUSTY_TOP)/system/keymaster
+ANDROID_ROOT := $(LOCAL_DIR)/../../..
+KEYMASTER_ROOT := $(ANDROID_ROOT)/system/keymaster
 
 MODULE_SRCS += \
 	$(KEYMASTER_ROOT)/android_keymaster/android_keymaster.cpp \
@@ -65,10 +66,10 @@ MODULE_SRCS += \
 MODULE_INCLUDES := \
 	$(KEYMASTER_ROOT)/include \
 	$(KEYMASTER_ROOT) \
-	$(TRUSTY_TOP)/hardware/libhardware/include \
+	$(ANDROID_ROOT)/hardware/libhardware/include \
 	$(LOCAL_DIR)
 
-MODULE_CPPFLAGS := -std=c++14 -fno-short-enums
+MODULE_CPPFLAGS := -std=c++14 -fno-short-enums -Wno-defaulted-function-deleted
 
 MODULE_COMPILEFLAGS := -U__ANDROID__ -D__TRUSTY__
 
@@ -77,17 +78,21 @@ MODULE_COMPILEFLAGS := -U__ANDROID__ -D__TRUSTY__
 # trust from bootloader.
 #
 #MODULE_COMPILEFLAGS += -DKEYMASTER_DEBUG
+MODULE_COMPILEFLAGS += -DDISABLE_ATAP_SUPPORT
 
 MODULE_DEPS += \
-	trusty/user/base/lib/libc-trusty \
-	trusty/user/base/lib/libstdc++-trusty \
-	trusty/user/base/lib/rng \
-	trusty/user/base/lib/hwkey \
-	trusty/user/base/lib/storage \
-	external/boringssl \
+	app/trusty \
+	lib/libc-trusty \
+	lib/libstdc++-trusty \
+	lib/rng \
+	lib/storage \
+	lib/hwkey \
+	lib/tinyxml2 \
+	lib/lzma \
+	lib/trusty_syscall_x86 \
 	lib/hwkey_crypt
 
-include $(LOCAL_DIR)/atap/rules.mk
+#include $(LOCAL_DIR)/atap/rules.mk
 include $(LOCAL_DIR)/ipc/rules.mk
 include $(LOCAL_DIR)/provision/rules.mk
 
diff --git a/secure_storage.cpp b/secure_storage.cpp
index 2ceb57b..6ce5606 100644
--- a/secure_storage.cpp
+++ b/secure_storage.cpp
@@ -291,7 +291,7 @@ keymaster_error_t ReadCertChainFromStorage(AttestationKeySlot key_slot,
            sizeof(cert_chain->entries[0]) * cert_chain_length);
 
     // Read |cert_chain_length| certs from storage
-    for (size_t i = 0; i < cert_chain_length; i++) {
+    for (uint32_t i = 0; i < cert_chain_length; i++) {
         snprintf(cert_file.get(), kStorageIdLengthMax, "%s.%s.%d",
                  kAttestCertPrefix, GetKeySlotStr(key_slot), i);
         if (!SecureStorageGetFileSize(cert_file.get(), &cert_size) ||
@@ -401,7 +401,7 @@ keymaster_error_t DeleteCertChain(AttestationKeySlot key_slot) {
     if (ReadCertChainLength(key_slot, &cert_chain_length) != KM_ERROR_OK) {
         return KM_ERROR_UNKNOWN_ERROR;
     }
-    for (size_t i = 0; i < cert_chain_length; ++i) {
+    for (uint32_t i = 0; i < cert_chain_length; ++i) {
         snprintf(cert_file.get(), kStorageIdLengthMax, "%s.%s.%d",
                  kAttestCertPrefix, GetKeySlotStr(key_slot), i);
         if (!SecureStorageDeleteFile(cert_file.get())) {
diff --git a/trusty_keymaster_enforcement.cpp b/trusty_keymaster_enforcement.cpp
index 6560132..77c1df9 100644
--- a/trusty_keymaster_enforcement.cpp
+++ b/trusty_keymaster_enforcement.cpp
@@ -23,7 +23,7 @@
 #include <keymaster/km_openssl/openssl_err.h>
 
 #include "trusty_keymaster_context.h"
-
+#include <trusty_std.h>
 namespace keymaster {
 
 keymaster_security_level_t TrustyKeymasterEnforcement::SecurityLevel() const {
-- 
2.22.0

