From df175ca529340a9c9f6da9abe69ecae143fbedc8 Mon Sep 17 00:00:00 2001
From: Linus Tufvesson <lus@google.com>
Date: Fri, 5 Aug 2022 15:14:16 +0200
Subject: [PATCH] DO NOT MERGE - Exclude TYPE_PRIVATE_PRESENTATION app
 visiblity

These windows can only be placed on private virtual displays, and as
such they should not be considered when deciding if an application has
any visible windows or not.

Bug:205130886
Test:Manually verified that sample from 205130886 no longer allows
background activity launches
Test: atest CtsActivityManagerBackgroundActivityTestCases

Change-Id: I76208722bbb7a407ba1f2dc4305a28226166414d
Merged-In: I76208722bbb7a407ba1f2dc4305a28226166414d
(cherry picked from commit 778191bdf21661b41030f9308e095c0445dec33c)
Merged-In: I76208722bbb7a407ba1f2dc4305a28226166414d
---
 .../android/server/wm/RootWindowContainer.java |  5 +++--
 .../com/android/server/wm/WindowState.java     | 18 +++++++++++-------
 2 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/services/core/java/com/android/server/wm/RootWindowContainer.java b/services/core/java/com/android/server/wm/RootWindowContainer.java
index 145b1bd426db..19ff791f65d3 100644
--- a/services/core/java/com/android/server/wm/RootWindowContainer.java
+++ b/services/core/java/com/android/server/wm/RootWindowContainer.java
@@ -564,8 +564,9 @@ class RootWindowContainer extends WindowContainer<DisplayContent>
     /**
      * Returns {@code true} if the callingUid has any non-toast window currently visible to the
      * user. Also ignores {@link android.view.WindowManager.LayoutParams#TYPE_APPLICATION_STARTING},
-     * since those windows don't belong to apps.
-     * @see WindowState#isNonToastOrStarting()
+     * and{@link android.view.WindowManager.LayoutParams#TYPE_PRIVATE_PRESENTATION}, as they
+     * should not count towards the apps visibility
+     * @see WindowState#isNonToastOrStartingOrPrivatePresentation()
      */
     boolean isAnyNonToastWindowVisibleForUid(int callingUid) {
         final PooledPredicate p = PooledLambda.obtainPredicate(
diff --git a/services/core/java/com/android/server/wm/WindowState.java b/services/core/java/com/android/server/wm/WindowState.java
index f357d7be53fd..a7aae97332a3 100644
--- a/services/core/java/com/android/server/wm/WindowState.java
+++ b/services/core/java/com/android/server/wm/WindowState.java
@@ -5804,20 +5804,24 @@ class WindowState extends WindowContainer<WindowState> implements WindowManagerP
     }
 
     /**
-     * Returns {@code true} if this window is not {@link WindowManager.LayoutParams#TYPE_TOAST}
-     * or {@link WindowManager.LayoutParams#TYPE_APPLICATION_STARTING},
-     * since this window doesn't belong to apps.
+     * Returns {@code true} if this window is not {@link WindowManager.LayoutParams#TYPE_TOAST},
+     * {@link WindowManager.LayoutParams#TYPE_APPLICATION_STARTING} or
+     * {@link WindowManager.LayoutParams#TYPE_PRIVATE_PRESENTATION},
+     * since those windows should not count towards the apps visibility.
      */
-    boolean isNonToastOrStarting() {
-        return mAttrs.type != TYPE_TOAST && mAttrs.type != TYPE_APPLICATION_STARTING;
+    boolean isNonToastOrStartingOrPrivatePresentation() {
+        return mAttrs.type != TYPE_TOAST && mAttrs.type != TYPE_APPLICATION_STARTING
+                && mAttrs.type != TYPE_PRIVATE_PRESENTATION;
     }
 
     boolean isNonToastWindowVisibleForUid(int callingUid) {
-        return getOwningUid() == callingUid && isNonToastOrStarting() && isVisibleNow();
+        return getOwningUid() == callingUid && isNonToastOrStartingOrPrivatePresentation()
+                && isVisibleNow();
     }
 
     boolean isNonToastWindowVisibleForPid(int pid) {
-        return mSession.mPid == pid && isNonToastOrStarting() && isVisibleNow();
+        return mSession.mPid == pid && isNonToastOrStartingOrPrivatePresentation()
+                && isVisibleNow();
     }
 
     void setViewVisibility(int viewVisibility) {
-- 
2.37.2.789.g6183377224-goog

