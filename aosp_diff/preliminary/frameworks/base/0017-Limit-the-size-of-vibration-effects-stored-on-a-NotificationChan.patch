From 8949e1ea261a8ffe7d5c736808b1e3fa36ee3731 Mon Sep 17 00:00:00 2001
From: Yuri Lin <yurilin@google.com>
Date: Thu, 22 Aug 2024 18:18:43 -0400
Subject: [PATCH] Limit the size of vibration effects stored on a
 NotificationChannel

This change adds a cropToLengthOrNull() @hide method to the VibrationEffect interface, implemented only by compositions, to provide a best-effort crop of the number of segments involved in a vibration effect.

For notification channels, changes the max vibration length to 500 from 1000. We probably don't need that much space, and serializing vibration effects means that the data ends up taking up a lot more space than just the array for the vibration pattern.

Adds android.app.notif_channel_crop_vibration_effects bugfix flag that limits when we attempt to crop the vibration effects.

Bug: 345881518
Test: manual with flag on/off; NotificationChannelTest; VibrationEffectTest
Flag: android.app.notif_channel_crop_vibration_effects (inlined for security backport)
(cherry picked from commit 1181fd1b6769e6f093cd409e2b9f7aa0f91d7ed9)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:dd6c8b4b334af950f7c26d7b8be2e052b2667ea6)
Merged-In: I885f733112af89fe9f255db626fcdc297b1a18c8
Change-Id: I885f733112af89fe9f255db626fcdc297b1a18c8
---
 .../android/app/NotificationChannelTest.java  | 26 +++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/core/tests/coretests/src/android/app/NotificationChannelTest.java b/core/tests/coretests/src/android/app/NotificationChannelTest.java
index e19f887c1284..87b22e089ef0 100644
--- a/core/tests/coretests/src/android/app/NotificationChannelTest.java
+++ b/core/tests/coretests/src/android/app/NotificationChannelTest.java
@@ -279,6 +279,32 @@ public class NotificationChannelTest {
                 .isEqualTo(result.getVibrationPattern());
     }
 
+    @Test
+    @EnableFlags(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API)
+    public void testLongVibrationFields_canWriteToXml() throws Exception {
+        NotificationChannel channel = new NotificationChannel("id", "name", 3);
+        // populate pattern with contents
+        long[] pattern = new long[65550 / 2];
+        for (int i = 0; i < pattern.length; i++) {
+            pattern[i] = 100;
+        }
+        channel.setVibrationPattern(pattern);  // with flag on, also sets effect
+
+        // Send it through parceling & unparceling to simulate being passed through a binder call
+        NotificationChannel fromParcel = writeToAndReadFromParcel(channel);
+        assertThat(fromParcel.getVibrationPattern().length).isEqualTo(
+                NotificationChannel.MAX_VIBRATION_LENGTH);
+
+        // Confirm that this also survives writing to & restoring from XML
+        NotificationChannel result = backUpAndRestore(fromParcel);
+        assertThat(result.getVibrationPattern().length).isEqualTo(
+                NotificationChannel.MAX_VIBRATION_LENGTH);
+        assertThat(result.getVibrationEffect()).isNotNull();
+        assertThat(result.getVibrationEffect()
+                .computeCreateWaveformOffOnTimingsOrNull())
+                .isEqualTo(result.getVibrationPattern());
+    }
+
     @Test
     public void testRestoreSoundUri_customLookup() throws Exception {
         Uri uriToBeRestoredUncanonicalized = Uri.parse("content://media/1");
-- 
2.34.1

