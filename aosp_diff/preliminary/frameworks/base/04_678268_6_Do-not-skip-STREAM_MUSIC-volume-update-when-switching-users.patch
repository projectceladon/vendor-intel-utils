From 02802a85a19978122725195b413e82633179559e Mon Sep 17 00:00:00 2001
From: shellyxx <shellyx.xie@intel.com>
Date: Mon, 19 Aug 2019 15:23:50 +0800
Subject: [PATCH] Do not skip STREAM_MUSIC volume update when switching users.

As the patch of fa9a69805b001034aa04c3b33989a7ac21522371, when
switching users, all media playback players will lose media audio
focus, so we do not need to ensure media playback volume continuity.

Change-Id: I1c66425fa2c324723fffb69c50c4c6f8d6682208
Tracked-On: OAM-84701
Signed-off-by: Xie, Shellyx <shellyx.xie@intel.com>
---

diff --git a/services/core/java/com/android/server/audio/AudioService.java b/services/core/java/com/android/server/audio/AudioService.java
index 4b08db6..3e5480d 100644
--- a/services/core/java/com/android/server/audio/AudioService.java
+++ b/services/core/java/com/android/server/audio/AudioService.java
@@ -3588,10 +3588,6 @@

     /** @see AudioManager#reloadAudioSettings() */
     public void reloadAudioSettings() {
-        readAudioSettings(false /*userSwitch*/);
-    }
-
-    private void readAudioSettings(boolean userSwitch) {
         // restore ringer mode, ringer mode affected streams, mute affected streams and vibrate settings
         readPersistedSettings();
         readUserRestrictions();
@@ -3600,10 +3596,6 @@
         int numStreamTypes = AudioSystem.getNumStreamTypes();
         for (int streamType = 0; streamType < numStreamTypes; streamType++) {
             VolumeStreamState streamState = mStreamStates[streamType];
-
-            if (userSwitch && mStreamVolumeAlias[streamType] == AudioSystem.STREAM_MUSIC) {
-                continue;
-            }

             streamState.readSettings();
             synchronized (VolumeStreamState.class) {
@@ -5673,7 +5665,8 @@
                 mMediaFocusControl.discardAudioFocusOwner();

                 // load volume settings for new user
-                readAudioSettings(true /*userSwitch*/);
+                reloadAudioSettings();
+
                 // preserve STREAM_MUSIC volume from one user to the next.
                 sendMsg(mAudioHandler,
                         MSG_SET_ALL_VOLUMES,
