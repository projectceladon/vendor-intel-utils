From 2a0ff1ca0b3c1a9adcb14319658597c486f3b9ad Mon Sep 17 00:00:00 2001
From: gkdeepa <g.k.deepa@intel.com>
Date: Tue, 28 Jun 2022 13:34:30 +0530
Subject: [PATCH] get camera info with camera id

Tracked-On:
---
 core/jni/android_hardware_Camera.cpp | 23 +++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/core/jni/android_hardware_Camera.cpp b/core/jni/android_hardware_Camera.cpp
index 365a18d174c9..21a8b1ae8b56 100644
--- a/core/jni/android_hardware_Camera.cpp
+++ b/core/jni/android_hardware_Camera.cpp
@@ -15,7 +15,7 @@
 ** limitations under the License.
 */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "Camera-JNI"
 #include <utils/Log.h>
 
@@ -532,7 +532,17 @@ static jint android_hardware_Camera_getNumberOfCameras(JNIEnv *env, jobject thiz
 static void android_hardware_Camera_getCameraInfo(JNIEnv *env, jobject thiz,
     jint cameraId, jobject info_obj)
 {
-    CameraInfo cameraInfo;
+    CameraInfo cameraInfo; 
+    if(cameraId == 100){
+        ALOGE("%s: 100 camera ID %d", __FUNCTION__, cameraId);
+        cameraId =0;
+    }
+    else if(cameraId ==101){
+        ALOGE("%s: 101 camera ID %d", __FUNCTION__, cameraId);
+        cameraId =1;   
+    }
+     
+    ALOGE("%s: get number of  %d", __FUNCTION__, Camera::getNumberOfCameras());
     if (cameraId >= Camera::getNumberOfCameras() || cameraId < 0) {
         ALOGE("%s: Unknown camera ID %d", __FUNCTION__, cameraId);
         jniThrowRuntimeException(env, "Unknown camera ID");
@@ -558,6 +568,14 @@ static void android_hardware_Camera_getCameraInfo(JNIEnv *env, jobject thiz,
 static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
     jobject weak_this, jint cameraId, jstring clientPackageName)
 {
+    if(cameraId == 100){
+        ALOGE("%s:  camera ID %d", __FUNCTION__, cameraId);
+        cameraId =0;
+    }
+    else if(cameraId ==101){
+        ALOGE("%s: camera ID %d", __FUNCTION__, cameraId);
+        cameraId =1;   
+    }
     // Convert jstring to String16
     const char16_t *rawClientName = reinterpret_cast<const char16_t*>(
         env->GetStringChars(clientPackageName, NULL));
@@ -596,6 +614,7 @@ static jint android_hardware_Camera_native_setup(JNIEnv *env, jobject thiz,
 
     // Update default display orientation in case the sensor is reverse-landscape
     CameraInfo cameraInfo;
+    ALOGE("%s: get camera info with ID %d", __FUNCTION__, cameraId);
     status_t rc = Camera::getCameraInfo(cameraId, &cameraInfo);
     if (rc != NO_ERROR) {
         ALOGE("%s: getCameraInfo error: %d", __FUNCTION__, rc);
-- 
2.17.1

