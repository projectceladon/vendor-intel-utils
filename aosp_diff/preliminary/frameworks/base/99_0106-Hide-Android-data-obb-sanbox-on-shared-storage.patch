From f7012e1629f9bf293d4dfbb3280f0e8dfee4027b Mon Sep 17 00:00:00 2001
From: Sergey Nikolaienkov <sergeynv@google.com>
Date: Sat, 1 Jul 2023 16:03:56 +0200
Subject: [PATCH] "Hide" /Android/data|obb|sanbox/ on shared storage

Implement shouldHideDocument() in the ExternalStorageProvider so that it
resitcts access to 'Android/data/', 'Android/obb/' and 'Android/sandbox'
on the integrated shared storage along with all their content and
subdirectories.

Clean up the abstract FileSystemProvider, specifically all variants of
queryChildDocuments().

Bug: 200034476
Bug: 220066255
Bug: 283962634
Test: make & flash systemimage, run manually
Test: atest ExternalStorageProviderTests
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:7f5667bfafbd9b1b4d59c2cb15f9a3e07a559318)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:cf28630a3e286629ed7b13badd4fb0412564c0fd)
Merged-In: I48c2ce7ff2d7fc067961ea2af0ea63818316f086
Change-Id: I48c2ce7ff2d7fc067961ea2af0ea63818316f086
---
 .../ExternalStorageProvider.java              | 28 +++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java b/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java
index defbc1142adb..0efe394f0c88 100644
--- a/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java
+++ b/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java
@@ -16,6 +16,8 @@
 
 package com.android.externalstorage;
 
+import static java.util.regex.Pattern.CASE_INSENSITIVE;
+
 import android.annotation.NonNull;
 import android.annotation.Nullable;
 import android.app.usage.StorageStatsManager;
@@ -68,6 +70,7 @@ import java.util.Locale;
 import java.util.Objects;
 import java.util.UUID;
 import java.util.stream.Collectors;
+import java.util.regex.Pattern;
 
 /**
  * Presents content of the shared (a.k.a. "external") storage.
@@ -94,6 +97,13 @@ public class ExternalStorageProvider extends FileSystemProvider {
 
     private static final String STORAGE_PATH = "/storage/";
 
+    /**
+     * Regex for detecting {@code /Android/data/}, {@code /Android/obb/} and
+     * {@code /Android/sandbox/} along with all their subdirectories and content.
+     */
+    private static final Pattern PATTERN_RESTRICTED_ANDROID_SUBTREES =
+            Pattern.compile("^Android/(?:data|obb|sandbox)(?:/.+)?", CASE_INSENSITIVE);
+
     private static final String[] DEFAULT_ROOT_PROJECTION = new String[] {
             Root.COLUMN_ROOT_ID, Root.COLUMN_FLAGS, Root.COLUMN_ICON, Root.COLUMN_TITLE,
             Root.COLUMN_DOCUMENT_ID, Root.COLUMN_AVAILABLE_BYTES, Root.COLUMN_QUERY_ARGS
@@ -307,13 +317,16 @@ public class ExternalStorageProvider extends FileSystemProvider {
             return false;
         }
 
-        try {
+	final String path = getPathFromDocId(documentId);
+        return PATTERN_RESTRICTED_ANDROID_SUBTREES.matcher(path).matches();
+
+        /*try {
             final RootInfo root = getRootFromDocId(documentId);
             final String canonicalPath = getPathFromDocId(documentId);
             return isRestrictedPath(root.rootId, canonicalPath);
         } catch (Exception e) {
             return true;
-        }
+        }*/
     }
 
     /**
@@ -634,6 +647,13 @@ public class ExternalStorageProvider extends FileSystemProvider {
         return result;
     }
 
+    /**
+     * Print the state into the given stream.
+     * Gets invoked when you run:
+     * <pre>
+     * adb shell dumpsys activity provider com.android.externalstorage/.ExternalStorageProvider
+     * </pre>
+     */
     @Override
     public Path findDocumentPath(@Nullable String parentDocId, String childDocId)
             throws FileNotFoundException {
@@ -835,4 +855,8 @@ public class ExternalStorageProvider extends FileSystemProvider {
     private static boolean equalIgnoringCase(@NonNull String a, @NonNull String b) {
         return TextUtils.equals(a.toLowerCase(Locale.ROOT), b.toLowerCase(Locale.ROOT));
     }
+
+    private static boolean equalIgnoringCase(@NonNull String a, @NonNull String b) {
+        return TextUtils.equals(a.toLowerCase(Locale.ROOT), b.toLowerCase(Locale.ROOT));
+    }
 }
-- 
2.34.1

