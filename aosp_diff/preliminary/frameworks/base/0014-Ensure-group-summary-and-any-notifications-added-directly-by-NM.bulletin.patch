From 92b1da4e4c657d73ad10fdf21ad1729f654be1a8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Mat=C3=ADas=20Hern=C3=A1ndez?= <matiashe@google.com>
Date: Mon, 24 Jun 2024 18:43:59 +0200
Subject: [PATCH] Ensure group summary (and any notifications added directly by
 NMS) have the correct token

All notifications must have the same token so that their serialization works as intended.

Bug: 328254922
Bug: 305695605
Bug: 346360609
Flag: android.app.secure_allowlist_token
Test: atest NotificationManagerServiceTest
(cherry picked from commit c18c614aec9e5345caab70446f058d8706185776)
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:faba96efff401d77243a3f257fb12512a8efe379)
Merged-In: I26784a729506169b3fe8481094cc4f5ab7b8a92b
Change-Id: I26784a729506169b3fe8481094cc4f5ab7b8a92b
---
 .../NotificationManagerService.java           | 10 ++++----
 .../NotificationManagerServiceTest.java       | 23 +++++++++++++++++++
 2 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/services/core/java/com/android/server/notification/NotificationManagerService.java b/services/core/java/com/android/server/notification/NotificationManagerService.java
index b15fcc917588..d289c50dff41 100644
--- a/services/core/java/com/android/server/notification/NotificationManagerService.java
+++ b/services/core/java/com/android/server/notification/NotificationManagerService.java
@@ -8863,10 +8863,12 @@ public class NotificationManagerService extends SystemService {
          */
         private boolean enqueueNotification() {
             synchronized (mNotificationLock) {
-                // allowlistToken is populated by unparceling, so it will be absent if the
-                // EnqueueNotificationRunnable is created directly by NMS (as we do for group
-                // summaries) instead of via notify(). Fix that.
-                r.getNotification().overrideAllowlistToken(ALLOWLIST_TOKEN);
+                if (android.app.Flags.secureAllowlistToken()) {
+                    // allowlistToken is populated by unparceling, so it will be absent if the
+                    // EnqueueNotificationRunnable is created directly by NMS (as we do for group
+                    // summaries) instead of via notify(). Fix that.
+                    r.getNotification().overrideAllowlistToken(ALLOWLIST_TOKEN);
+                }
 
                 final long snoozeAt =
                         mSnoozeHelper.getSnoozeTimeForUnpostedNotification(
diff --git a/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java b/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java
index 130690d80b70..58ce5fda4e79 100644
--- a/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java
+++ b/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java
@@ -14331,6 +14331,29 @@ public class NotificationManagerServiceTest extends UiServiceTestCase {
         assertNotSame(0, n.flags & Notification.FLAG_NO_DISMISS);
     }
 
+    @Test
+    @EnableFlags(android.app.Flags.FLAG_SECURE_ALLOWLIST_TOKEN)
+    public void enqueueNotification_directlyThroughRunnable_populatesAllowlistToken() {
+        Notification receivedWithoutParceling = new Notification.Builder(mContext, TEST_CHANNEL_ID)
+                .setContentIntent(createPendingIntent("content"))
+                .build();
+        NotificationRecord record = new NotificationRecord(
+                mContext,
+                new StatusBarNotification(mPkg, mPkg, 1, "tag", mUid, 44, receivedWithoutParceling,
+                        mUser, "groupKey", 0),
+                mTestNotificationChannel);
+        assertThat(record.getNotification().getAllowlistToken()).isNull();
+
+        mWorkerHandler.post(
+                mService.new EnqueueNotificationRunnable(mUserId, record, false, false,
+                mPostNotificationTrackerFactory.newTracker(null)));
+        waitForIdle();
+
+        assertThat(mService.mNotificationList).hasSize(1);
+        assertThat(mService.mNotificationList.get(0).getNotification().getAllowlistToken())
+                .isEqualTo(NotificationManagerService.ALLOWLIST_TOKEN);
+    }
+
     @Test
     public void fixExemptAppOpNotification_withoutAppOpsFlag_shouldBeDismissible()
             throws Exception {
-- 
2.34.1

