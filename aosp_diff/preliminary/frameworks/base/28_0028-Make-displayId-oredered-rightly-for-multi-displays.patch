From 69cbf521e38ba847d6cc7be4780c2c2cd79e95c8 Mon Sep 17 00:00:00 2001
From: renchenglei <chenglei.ren@intel.com>
Date: Wed, 1 Jun 2022 20:01:26 +0800
Subject: [PATCH] Make displayId oredered rightly for multi displays

In Android 10 (and lower), the primary internal display
is TYPE_INTERNAL and all secondary displays are flagged
as TYPE_EXTERNAL regardless of connection type.
In Android 11(and higher), the first display reported
during boot is the primary display. The connection type
(internal versus external) is irrelevant.
So, when we connct 2(and more) displays on Android 12,
the displayId may start with 0, 2, 4...
This changes is to help reorder the displayId start with
0, 1, 2...

Signed-off-by: Chenglei Ren <chenglei.ren@intel.com>
Tracked-On: OAM-101647
---
 .../java/com/android/server/display/layout/Layout.java | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/display/layout/Layout.java b/services/core/java/com/android/server/display/layout/Layout.java
index e53aec12f186..0eeddc7648cb 100644
--- a/services/core/java/com/android/server/display/layout/Layout.java
+++ b/services/core/java/com/android/server/display/layout/Layout.java
@@ -35,6 +35,7 @@ import java.util.List;
 public class Layout {
     private static final String TAG = "Layout";
     private static int sNextNonDefaultDisplayId = DEFAULT_DISPLAY + 1;
+    private static int sNextInternalDisplayId = DEFAULT_DISPLAY + 1;
 
     private final List<Display> mDisplays = new ArrayList<>(2);
 
@@ -45,6 +46,13 @@ public class Layout {
         return isDefault ? DEFAULT_DISPLAY : sNextNonDefaultDisplayId++;
     }
 
+    /**
+     *  @return The default display ID, or a new unique one for internal display to use.
+     */
+    public static int assignInternalDisplayIdLocked(boolean isDefault) {
+        return isDefault ? DEFAULT_DISPLAY : sNextInternalDisplayId++;
+    }
+
     @Override
     public String toString() {
         return mDisplays.toString();
@@ -74,7 +82,7 @@ public class Layout {
         // Note that the logical display ID is saved into the layout, so when switching between
         // different layouts, a logical display can be destroyed and later recreated with the
         // same logical display ID.
-        final int logicalDisplayId = assignDisplayIdLocked(isDefault);
+        final int logicalDisplayId = assignInternalDisplayIdLocked(isDefault);
         final Display layout = new Display(address, logicalDisplayId, isEnabled);
 
         mDisplays.add(layout);
-- 
2.17.1

