From d0c52fbde58768bc7fc6cf618c59d01057edd954 Mon Sep 17 00:00:00 2001
From: Vishnu Nair <vishnun@google.com>
Date: Fri, 24 Jan 2025 05:37:23 +0000
Subject: [PATCH] DO NOT MERGE: Update ActivityRecordInputSink using the
 pending transaction

In some cases where finishTransition happens before the pending
transaction is applied, we can end up with a stale state. Subsequent
prepareSurfaces does not fix the issue because the InputWindowHandle is
only applied on changes.

Fix the race by only using pending transactions to apply
ActivityRecordInputSink state changes.

Bug: 332277530
Test: POC from bug
Flag: EXEMPT bug fix
(cherry picked from https://googleplex-android-review.googlesource.com/q/commit:24aeaa1b55d3c602ddd4e53a44bf304a21c8d3df)
Merged-In: If93840ad7b2abbcb48c0c332870c48046c0f8fdc
Change-Id: If93840ad7b2abbcb48c0c332870c48046c0f8fdc
---
 .../core/java/com/android/server/wm/Transition.java   | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/services/core/java/com/android/server/wm/Transition.java b/services/core/java/com/android/server/wm/Transition.java
index dcfe350b1c42..2702557bf4af 100644
--- a/services/core/java/com/android/server/wm/Transition.java
+++ b/services/core/java/com/android/server/wm/Transition.java
@@ -1398,16 +1398,15 @@ class Transition implements BLASTSyncEngine.TransactionReadyListener {
         }
 
         // Update the input-sink (touch-blocking) state now that the animation is finished.
-        SurfaceControl.Transaction inputSinkTransaction = null;
+        boolean scheduleAnimation = false;
         for (int i = 0; i < mParticipants.size(); ++i) {
             final ActivityRecord ar = mParticipants.valueAt(i).asActivityRecord();
             if (ar == null || !ar.isVisible() || ar.getParent() == null) continue;
-            if (inputSinkTransaction == null) {
-                inputSinkTransaction = ar.mWmService.mTransactionFactory.get();
-            }
-            ar.mActivityRecordInputSink.applyChangesToSurfaceIfChanged(inputSinkTransaction);
+            scheduleAnimation = true;
+            ar.mActivityRecordInputSink.applyChangesToSurfaceIfChanged(ar.getPendingTransaction());
         }
-        if (inputSinkTransaction != null) inputSinkTransaction.apply();
+        // To apply pending transactions.
+        if (scheduleAnimation) mController.mAtm.mWindowManager.scheduleAnimationLocked();
 
         // Always schedule stop processing when transition finishes because activities don't
         // stop while they are in a transition thus their stop could still be pending.
-- 
2.48.1.262.g85cc9f2d1e-goog

