From 8da491ce552650fad425eca7c02c89831af746de Mon Sep 17 00:00:00 2001
From: Tanuj Tekriwal <tanuj.tekriwal@intel.com>
Date: Mon, 14 Jun 2021 15:09:40 +0530
Subject: [PATCH] adb: dbc: tty: device offline issue

Restarting the adb daemon when DbC device move to the dbc
state configured from dbc state enable.
To do so added DEVPATH variable which match to the DbC TTY
DEVPATH uevent.

Change-Id: I823e38e862d9b185e9581978058dc17c2c4a42d4
Tracked-On:
Signed-off-by: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Signed-off-by: Balaji M <m.balaji@intel.com>
---
 .../android/server/usb/UsbDeviceManager.java  | 27 +++++++++++++++++--
 1 file changed, 25 insertions(+), 2 deletions(-)

diff --git a/services/usb/java/com/android/server/usb/UsbDeviceManager.java b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
index 2fb67d79ccee..7526176e0fdd 100644
--- a/services/usb/java/com/android/server/usb/UsbDeviceManager.java
+++ b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
@@ -130,6 +130,8 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
      */
     private static final String NORMAL_BOOT = "normal";
 
+    private static final String USB_DBC_STATE_MATCH =
+            "DEVPATH=/devices/virtual/tty/ttyDBC0";
     private static final String USB_STATE_MATCH =
             "DEVPATH=/devices/virtual/android_usb/android0";
     private static final String ACCESSORY_START_MATCH =
@@ -236,6 +238,10 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
             sEventLogger.log(new UsbDeviceLogger.StringEvent("USB UEVENT: " + event.toString()));
 
             String state = event.get("USB_STATE");
+
+            if (state == null)
+                state = event.get("ACTION");
+
             String accessory = event.get("ACCESSORY");
 
             if (state != null) {
@@ -385,7 +391,7 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
         mUEventObserver = new UsbUEventObserver();
         mUEventObserver.startObserving(USB_STATE_MATCH);
         mUEventObserver.startObserving(ACCESSORY_START_MATCH);
-
+	mUEventObserver.startObserving(USB_DBC_STATE_MATCH);
         sEventLogger = new UsbDeviceLogger(DUMPSYS_LOG_BUFFER, "UsbDeviceManager activity");
     }
 
@@ -497,6 +503,7 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
     abstract static class UsbHandler extends Handler {
 
         // current USB state
+	private boolean mDbcConnected;
         private boolean mHostConnected;
         private boolean mSourcePower;
         private boolean mSinkPower;
@@ -635,6 +642,9 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
             } else if ("CONFIGURED".equals(state)) {
                 connected = 1;
                 configured = 1;
+            } else if ("add".equals(state)) {
+                connected = 2;
+                configured = 1;
             } else {
                 Slog.e(TAG, "unknown state " + state);
                 return;
@@ -887,11 +897,19 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
 
         @Override
         public void handleMessage(Message msg) {
-            switch (msg.what) {
+	    final String ADBD = "adbd";
+            final String CTL_START = "ctl.start";
+            final String CTL_STOP = "ctl.stop";
+
+	    switch (msg.what) {
                 case MSG_UPDATE_STATE:
                     mConnected = (msg.arg1 == 1);
                     mConfigured = (msg.arg2 == 1);
 
+                    if (msg.arg1==2) {
+                        mConnected = (msg.arg1 == 2);
+                        mDbcConnected = (msg.arg1 == 2);
+                    }
                     updateUsbNotification(false);
                     updateAdbNotification(false);
                     if (mBootCompleted) {
@@ -916,6 +934,11 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
                         mPendingBootBroadcast = true;
                     }
                     updateUsbSpeed();
+		    if (mDbcConnected) {
+                        setSystemProperty("sys.usb.controller", "none");
+                        setSystemProperty(CTL_STOP, ADBD);
+                        setSystemProperty(CTL_START, ADBD);
+                    }
                     break;
                 case MSG_UPDATE_PORT_STATE:
                     SomeArgs args = (SomeArgs) msg.obj;
-- 
2.17.1

