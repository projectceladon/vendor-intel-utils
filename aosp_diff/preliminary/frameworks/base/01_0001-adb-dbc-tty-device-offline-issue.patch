From 7010d64a6c9788200afd02660f248a4770d9b415 Mon Sep 17 00:00:00 2001
From: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Date: Mon, 14 Jun 2021 15:09:40 +0530
Subject: [PATCH] adb: dbc: tty: device offline issue

Restarting the adb daemon when DbC device move to the dbc
state configured from dbc state enable.
To do so added DEVPATH variable which match to the DbC TTY
DEVPATH uevent.

Change-Id: I823e38e862d9b185e9581978058dc17c2c4a42d4
Tracked-On:
Signed-off-by: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Signed-off-by: Balaji M <m.balaji@intel.com>
---
 .../android/server/usb/UsbDeviceManager.java  | 26 ++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/services/usb/java/com/android/server/usb/UsbDeviceManager.java b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
index 77b263824b78..fe0f134234d7 100644
--- a/services/usb/java/com/android/server/usb/UsbDeviceManager.java
+++ b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
@@ -132,6 +132,8 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
      */
     private static final String NORMAL_BOOT = "normal";
 
+    private static final String USB_DBC_STATE_MATCH =
+            "DEVPATH=/devices/virtual/tty/ttyDBC0";
     private static final String USB_STATE_MATCH =
             "DEVPATH=/devices/virtual/android_usb/android0";
     private static final String ACCESSORY_START_MATCH =
@@ -254,6 +256,10 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
             }
 
             String state = event.get("USB_STATE");
+
+            if (state == null)
+                state = event.get("ACTION");
+
             String accessory = event.get("ACCESSORY");
 
             if (state != null) {
@@ -402,6 +408,7 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
         mUEventObserver.startObserving(USB_STATE_MATCH);
         mUEventObserver.startObserving(ACCESSORY_START_MATCH);
 
+	mUEventObserver.startObserving(USB_DBC_STATE_MATCH);
         sEventLogger = new EventLogger(DUMPSYS_LOG_BUFFER, "UsbDeviceManager activity");
     }
 
@@ -529,6 +536,7 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
     abstract static class UsbHandler extends Handler {
 
         // current USB state
+	private boolean mDbcConnected;
         private boolean mHostConnected;
         private boolean mUsbAccessoryConnected;
         private boolean mInHostModeWithNoAccessoryConnected;
@@ -714,6 +722,9 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
             } else if ("CONFIGURED".equals(state)) {
                 connected = 1;
                 configured = 1;
+            } else if ("add".equals(state)) {
+                connected = 2;
+                configured = 1;
             } else {
                 Slog.e(TAG, "unknown state " + state);
                 return;
@@ -985,7 +996,11 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
 
         @Override
         public void handleMessage(Message msg) {
-            switch (msg.what) {
+            final String ADBD = "adbd";
+            final String CTL_START = "ctl.start";
+            final String CTL_STOP = "ctl.stop";
+
+	    switch (msg.what) {
                 case MSG_UPDATE_STATE:
                     int operationId = sUsbOperationCount.incrementAndGet();
                     mConnected = (msg.arg1 == 1);
@@ -994,6 +1009,10 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
                         Slog.i(TAG, "handleMessage MSG_UPDATE_STATE " + "mConnected:" + mConnected
                                + " mConfigured:" + mConfigured);
                     }
+                    if (msg.arg1==2) {
+                        mConnected = (msg.arg1 == 2);
+                        mDbcConnected = (msg.arg1 == 2);
+                    }
                     updateUsbNotification(false);
                     updateAdbNotification(false);
                     if (mBootCompleted) {
@@ -1018,6 +1037,11 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
                         mPendingBootBroadcast = true;
                     }
                     updateUsbSpeed();
+		    if (mDbcConnected) {
+                        setSystemProperty("sys.usb.controller", "none");
+                        setSystemProperty(CTL_STOP, ADBD);
+                        setSystemProperty(CTL_START, ADBD);
+                    }
                     break;
                 case MSG_UPDATE_PORT_STATE:
                     SomeArgs args = (SomeArgs) msg.obj;
-- 
2.17.1

