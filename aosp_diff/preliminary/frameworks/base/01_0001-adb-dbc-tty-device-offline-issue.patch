From 604140c31469ad8669c0aedf3dbfda5ca3f03a2f Mon Sep 17 00:00:00 2001
From: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Date: Sun, 22 Nov 2020 12:52:55 +0530
Subject: [PATCH] adb: dbc: tty: device offline issue

Restarting the adb daemon when DbC device move to the dbc
state configured from dbc state enable.
To do so added DEVPATH variable which match to the DbC TTY
DEVPATH uevent.

Tracked-On: OAM-94662
Signed-off-by: Prabhat Chand Pandey <prabhat.chand.pandey@intel.com>
Signed-off-by: Balaji <m.balaji@intel.com>

diff --git a/services/usb/java/com/android/server/usb/UsbDeviceManager.java b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
index 7595e3f249c..a1fffcd4e5d 100644
--- a/services/usb/java/com/android/server/usb/UsbDeviceManager.java
+++ b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
@@ -129,6 +129,8 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
      */
     private static final String NORMAL_BOOT = "normal";
 
+    private static final String USB_DBC_STATE_MATCH =
+            "DEVPATH=/devices/virtual/tty/ttyDBC0";
     private static final String USB_STATE_MATCH =
             "DEVPATH=/devices/virtual/android_usb/android0";
     private static final String ACCESSORY_START_MATCH =
@@ -219,6 +221,10 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
             if (DEBUG) Slog.v(TAG, "USB UEVENT: " + event.toString());
 
             String state = event.get("USB_STATE");
+
+            if (state == null)
+                state = event.get("ACTION");
+
             String accessory = event.get("ACCESSORY");
             if (state != null) {
                 mHandler.updateState(state);
@@ -357,6 +363,7 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
         mUEventObserver = new UsbUEventObserver();
         mUEventObserver.startObserving(USB_STATE_MATCH);
         mUEventObserver.startObserving(ACCESSORY_START_MATCH);
+        mUEventObserver.startObserving(USB_DBC_STATE_MATCH);
     }
 
     UsbProfileGroupSettingsManager getCurrentSettings() {
@@ -446,6 +453,7 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
     abstract static class UsbHandler extends Handler {
 
         // current USB state
+        private boolean mDbcConnected;
         private boolean mHostConnected;
         private boolean mSourcePower;
         private boolean mSinkPower;
@@ -573,6 +581,9 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
             } else if ("CONFIGURED".equals(state)) {
                 connected = 1;
                 configured = 1;
+            } else if ("add".equals(state)) {
+                connected = 2;
+                configured = 1;
             } else {
                 Slog.e(TAG, "unknown state " + state);
                 return;
@@ -800,11 +811,18 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
 
         @Override
         public void handleMessage(Message msg) {
+            final String ADBD = "adbd";
+            final String CTL_START = "ctl.start";
+            final String CTL_STOP = "ctl.stop";
+
             switch (msg.what) {
                 case MSG_UPDATE_STATE:
                     mConnected = (msg.arg1 == 1);
                     mConfigured = (msg.arg2 == 1);
-
+                    if (msg.arg1==2) {
+                        mConnected = (msg.arg1 == 2);
+                        mDbcConnected = (msg.arg1 == 2);
+                    }
                     updateUsbNotification(false);
                     updateAdbNotification(false);
                     if (mBootCompleted) {
@@ -828,6 +846,11 @@ public class UsbDeviceManager implements ActivityTaskManagerInternal.ScreenObser
                     } else {
                         mPendingBootBroadcast = true;
                     }
+                    if (mDbcConnected) {
+                        setSystemProperty("sys.usb.controller", "none");
+                        setSystemProperty(CTL_STOP, ADBD);
+                        setSystemProperty(CTL_START, ADBD);
+                    }
                     break;
                 case MSG_UPDATE_PORT_STATE:
                     SomeArgs args = (SomeArgs) msg.obj;
-- 
2.28.0

