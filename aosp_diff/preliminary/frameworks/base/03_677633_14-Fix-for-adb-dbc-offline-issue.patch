From 23b1829000ae3fc87d899cec17e59d56a2738ad6 Mon Sep 17 00:00:00 2001
From: Balaji <m.balaji@intel.com>
Date: Tue, 13 Aug 2019 05:50:12 +0530
Subject: [PATCH] Fix for adb dbc offline issue

Adb daemon doesnt know about dbc disconnect and connect.hence offline
issue occurs when replug.Changes made usb device manager to receive
usb dbc event from kernel and restart adb daemon.

Change-Id: I36cb0d4322fc96a00e18f78f436d17d569fe7727
Tracked-On: https://jira.devtools.intel.com/browse/OAM-84514
Signed-off-by: Balaji <m.balaji@intel.com>
---

diff --git a/services/usb/java/com/android/server/usb/UsbDeviceManager.java b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
index 5b7d816..460ec5e 100644
--- a/services/usb/java/com/android/server/usb/UsbDeviceManager.java
+++ b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
@@ -127,6 +127,8 @@
      */
     private static final String NORMAL_BOOT = "normal";
 
+    private static final String USB_DBC_STATE_MATCH =
+            "SUBSYSTEM=pci";
     private static final String USB_STATE_MATCH =
             "DEVPATH=/devices/virtual/android_usb/android0";
     private static final String ACCESSORY_START_MATCH =
@@ -354,6 +356,7 @@
         mUEventObserver = new UsbUEventObserver();
         mUEventObserver.startObserving(USB_STATE_MATCH);
         mUEventObserver.startObserving(ACCESSORY_START_MATCH);
+        mUEventObserver.startObserving(USB_DBC_STATE_MATCH);
     }
 
     UsbProfileGroupSettingsManager getCurrentSettings() {
@@ -444,6 +447,7 @@
 
         // current USB state
         private boolean mConnected;
+	private boolean mDbcConnected;
         private boolean mHostConnected;
         private boolean mSourcePower;
         private boolean mSinkPower;
@@ -560,7 +564,6 @@
 
         public void updateState(String state) {
             int connected, configured;
-
             if ("DISCONNECTED".equals(state)) {
                 connected = 0;
                 configured = 0;
@@ -569,6 +572,9 @@
                 configured = 0;
             } else if ("CONFIGURED".equals(state)) {
                 connected = 1;
+                configured = 1;
+            } else if ("DBCCONNECTED".equals(state)) {
+                connected = 2;
                 configured = 1;
             } else {
                 Slog.e(TAG, "unknown state " + state);
@@ -795,11 +801,18 @@
 
         @Override
         public void handleMessage(Message msg) {
+            final String ADBD = "adbd";
+	    final String CTL_START = "ctl.start";
+            final String CTL_STOP = "ctl.stop";
+
             switch (msg.what) {
                 case MSG_UPDATE_STATE:
                     mConnected = (msg.arg1 == 1);
                     mConfigured = (msg.arg2 == 1);
-
+                    if (msg.arg1==2) {
+		    	mConnected = (msg.arg1==2);
+		    	mDbcConnected = (msg.arg1==2);
+		    }
                     updateUsbNotification(false);
                     updateAdbNotification(false);
                     if (mBootCompleted) {
@@ -823,6 +836,11 @@
                     } else {
                         mPendingBootBroadcast = true;
                     }
+                    if (mDbcConnected) {
+			setSystemProperty("sys.usb.controller","none");
+                        setSystemProperty(CTL_STOP, ADBD);
+			setSystemProperty(CTL_START, ADBD);
+		    }
                     break;
                 case MSG_UPDATE_PORT_STATE:
                     SomeArgs args = (SomeArgs) msg.obj;
