From c6e79124f05501cd1365167c5efefac9aa93e2fb Mon Sep 17 00:00:00 2001
From: "Li, HaihongX" <haihongx.li@intel.com>
Date: Thu, 10 Mar 2022 11:01:53 +0800
Subject: [PATCH] Make displays are ordered in DisplayManager

Although hwcomposer invoked hotplug callback with ordered
display id 0, 1, 2, 3, ..., but surfaceflinger used an
unordered_map to save displays info, so when dms requested
to surfaceflinger to get displays info, surfaceflinger loop
unordered_map then return displays info, so at last dms get
unordered displays. Solution is adding an additional
vector to save displays in surfaceflinger.

Signed-off-by: Li, HaihongX <haihongx.li@intel.com>
Tracked-On: OAM-101647
---
 services/surfaceflinger/SurfaceFlinger.cpp | 3 ++-
 services/surfaceflinger/SurfaceFlinger.h   | 2 ++
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/services/surfaceflinger/SurfaceFlinger.cpp b/services/surfaceflinger/SurfaceFlinger.cpp
index bbf6a2db786a..b676716862d0 100644
--- a/services/surfaceflinger/SurfaceFlinger.cpp
+++ b/services/surfaceflinger/SurfaceFlinger.cpp
@@ -644,7 +644,7 @@ std::vector<PhysicalDisplayId> SurfaceFlinger::getPhysicalDisplayIds() const {
     displayIds.reserve(mPhysicalDisplayTokens.size());
     displayIds.push_back(*internalDisplayId);
 
-    for (const auto& [id, token] : mPhysicalDisplayTokens) {
+    for (const auto& id : mPhysicalDisplayTokensVec) {
         if (id != *internalDisplayId) {
             displayIds.push_back(id);
         }
@@ -2596,6 +2596,7 @@ void SurfaceFlinger::processDisplayHotplugEventsLocked() {
                 mCurrentState.displays.add(token, state);
                 mPhysicalDisplayTokens.emplace(displayId, std::move(token));
 
+                mPhysicalDisplayTokensVec.emplace_back(displayId);
                 if (event.hwcDisplayId == getHwComposer().getInternalHwcDisplayId()) {
                     initScheduler(state);
                 }
diff --git a/services/surfaceflinger/SurfaceFlinger.h b/services/surfaceflinger/SurfaceFlinger.h
index c63225f2d6a2..e77d8ffab7cf 100644
--- a/services/surfaceflinger/SurfaceFlinger.h
+++ b/services/surfaceflinger/SurfaceFlinger.h
@@ -1284,6 +1284,8 @@ private:
     std::map<wp<IBinder>, sp<DisplayDevice>> mDisplays GUARDED_BY(mStateLock);
     std::unordered_map<PhysicalDisplayId, sp<IBinder>> mPhysicalDisplayTokens
             GUARDED_BY(mStateLock);
+    std::vector<PhysicalDisplayId>                     mPhysicalDisplayTokensVec
+            GUARDED_BY(mStateLock);
 
     struct {
         DisplayIdGenerator<GpuVirtualDisplayId> gpu;
-- 
2.17.1

