From 1eb16b1ae9d9b51683297cf1514e449bfa7a67cd Mon Sep 17 00:00:00 2001
From: renchenglei <chenglei.ren@intel.com>
Date: Fri, 25 Sep 2020 18:29:50 +0800
Subject: [PATCH] Use BRGA as default format for software rendering.

As software rendering only supports BGRA format, we need config
up-level to support this when using software rendering.

Change-Id: I1bac5ec455241124e068bbccbe77840859effc42
Signed-off-by: HeYue <yue.he@intel.com>
Signed-off-by: Ren Chenglei <chenglei.ren@intel.com>
---
 .../CompositionEngine/src/RenderSurface.cpp      | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/services/surfaceflinger/CompositionEngine/src/RenderSurface.cpp b/services/surfaceflinger/CompositionEngine/src/RenderSurface.cpp
index 5a3af7bfea25..e6635decdff9 100644
--- a/services/surfaceflinger/CompositionEngine/src/RenderSurface.cpp
+++ b/services/surfaceflinger/CompositionEngine/src/RenderSurface.cpp
@@ -33,6 +33,7 @@
 #include <ui/GraphicBuffer.h>
 #include <ui/Rect.h>
 #include <utils/Trace.h>
+#include <cutils/properties.h>
 
 // TODO(b/129481165): remove the #pragma below and fix conversion issues
 #pragma clang diagnostic push
@@ -80,11 +81,22 @@ bool RenderSurface::isValid() const {
 
 void RenderSurface::initialize() {
     ANativeWindow* const window = mNativeWindow.get();
+    char value[PROPERTY_VALUE_MAX] = {};
+    int format = HAL_PIXEL_FORMAT_RGBA_8888;
 
     int status = native_window_api_connect(window, NATIVE_WINDOW_API_EGL);
     ALOGE_IF(status != NO_ERROR, "Unable to connect BQ producer: %d", status);
-    status = native_window_set_buffers_format(window, HAL_PIXEL_FORMAT_RGBA_8888);
-    ALOGE_IF(status != NO_ERROR, "Unable to set BQ format to RGBA888: %d", status);
+    //status = native_window_set_buffers_format(window, HAL_PIXEL_FORMAT_RGBA_8888);
+    //ALOGE_IF(status != NO_ERROR, "Unable to set BQ format to RGBA888: %d", status);
+    if (property_get("vendor.egl.set", value, NULL) > 0){
+        ALOGI("Use BGRA_8888 as surface format when GLES is \"%s\"", value);
+        if(!strcmp("angle", value))
+            format = HAL_PIXEL_FORMAT_BGRA_8888;
+    }
+
+    status = native_window_set_buffers_format(window, format);
+    ALOGE_IF(status != NO_ERROR, "Unable to set BQ format to %d: %d", format, status);
+
     status = native_window_set_usage(window, DEFAULT_USAGE);
     ALOGE_IF(status != NO_ERROR, "Unable to set BQ usage bits for GPU rendering: %d", status);
 }
-- 
2.17.1

