From 62ca4ec4145ea4c4cd33813be1011a85d49263d4 Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Wed, 23 Dec 2020 11:59:26 +0530
Subject: [PATCH] Trace logs for cts media testcase

Tracked-On:
Signed-off-by: ahs <amrita.h.s@intel.com>
---
 .../StagefrightMetadataRetriever.cpp                   |  8 ++++----
 media/libstagefright/FrameDecoder.cpp                  | 10 ++++++++--
 2 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/media/libmediaplayerservice/StagefrightMetadataRetriever.cpp b/media/libmediaplayerservice/StagefrightMetadataRetriever.cpp
index 41b6f72a0d..e15f83588b 100644
--- a/media/libmediaplayerservice/StagefrightMetadataRetriever.cpp
+++ b/media/libmediaplayerservice/StagefrightMetadataRetriever.cpp
@@ -131,7 +131,7 @@ status_t StagefrightMetadataRetriever::setDataSource(
 
 sp<IMemory> StagefrightMetadataRetriever::getImageAtIndex(
         int index, int colorFormat, bool metaOnly, bool thumbnail) {
-    ALOGV("getImageAtIndex: index(%d) colorFormat(%d) metaOnly(%d) thumbnail(%d)",
+    ALOGV("AHS:: getImageAtIndex: index(%d) colorFormat(%d) metaOnly(%d) thumbnail(%d)",
             index, colorFormat, metaOnly, thumbnail);
 
     return getImageInternal(index, colorFormat, metaOnly, thumbnail, NULL);
@@ -171,7 +171,7 @@ sp<IMemory> StagefrightMetadataRetriever::getImageInternal(
         if (!meta) {
             continue;
         }
-        ALOGV("getting track %zu of %zu, meta=%s", i, n, meta->toString().c_str());
+        ALOGV("AHS:: getting track %zu of %zu, meta=%s", i, n, meta->toString().c_str());
 
         const char *mime;
         CHECK(meta->findCString(kKeyMIMEType, &mime));
@@ -209,7 +209,7 @@ sp<IMemory> StagefrightMetadataRetriever::getImageInternal(
 
     const char *mime;
     CHECK(trackMeta->findCString(kKeyMIMEType, &mime));
-    ALOGV("extracting from %s track", mime);
+    ALOGV("AHS:: extracting from %s track", mime);
     if (!strcasecmp(mime, MEDIA_MIMETYPE_IMAGE_ANDROID_HEIC)) {
         mime = MEDIA_MIMETYPE_VIDEO_HEVC;
         trackMeta = new MetaData(*trackMeta);
@@ -242,7 +242,7 @@ sp<IMemory> StagefrightMetadataRetriever::getImageInternal(
                 return frame;
             }
         }
-        ALOGV("%s failed to extract thumbnail, trying next decoder.", componentName.c_str());
+        ALOGV("AHS:: %s failed to extract thumbnail, trying next decoder.", componentName.c_str());
     }
 
     ALOGE("all codecs failed to extract frame.");
diff --git a/media/libstagefright/FrameDecoder.cpp b/media/libstagefright/FrameDecoder.cpp
index 734f5bb5ae..e5c18713bb 100644
--- a/media/libstagefright/FrameDecoder.cpp
+++ b/media/libstagefright/FrameDecoder.cpp
@@ -258,7 +258,7 @@ status_t FrameDecoder::init(
             &mDstFormat, &mCaptureFormat, &mDstBpp)) {
         return ERROR_UNSUPPORTED;
     }
-
+    ALOGV("AHS:: colorFormat = %d, mDstFormat = %d", colorFormat, mDstFormat);
     sp<AMessage> videoFormat = onGetFormatAndSeekOptions(
             frameTimeUs, option, &mReadOptions, &mSurface);
     if (videoFormat == NULL) {
@@ -303,6 +303,7 @@ status_t FrameDecoder::init(
 }
 
 sp<IMemory> FrameDecoder::extractFrame(FrameRect *rect) {
+    ALOGV("AHS:: extractFrame");	
     status_t err = onExtractRect(rect);
     if (err == OK) {
         err = extractInternal();
@@ -315,6 +316,7 @@ sp<IMemory> FrameDecoder::extractFrame(FrameRect *rect) {
 }
 
 status_t FrameDecoder::extractInternal() {
+    ALOGV("AHS:: extractInternal");	
     status_t err = OK;
     bool done = false;
     size_t retriesLeft = kRetryCount;
@@ -404,10 +406,11 @@ status_t FrameDecoder::extractInternal() {
                     &ptsUs,
                     &flags,
                     kBufferTimeOutUs);
-
+            ALOGV("AHS:: mOutputFormat 1 = %s", mOutputFormat->debugString().c_str());
             if (err == INFO_FORMAT_CHANGED) {
                 ALOGV("Received format change");
                 err = mDecoder->getOutputFormat(&mOutputFormat);
+                ALOGV("AHS:: mOutputFormat 2 = %s", mOutputFormat->debugString().c_str());
             } else if (err == INFO_OUTPUT_BUFFERS_CHANGED) {
                 ALOGV("Output buffers changed");
                 err = OK;
@@ -562,6 +565,7 @@ status_t VideoFrameDecoder::onOutputReceived(
         const sp<MediaCodecBuffer> &videoFrameBuffer,
         const sp<AMessage> &outputFormat,
         int64_t timeUs, bool *done) {
+    ALOGV("AHS:: onOutputReceived");	 
     int64_t durationUs = mDefaultSampleDurationUs;
     if (!mSampleDurations.empty()) {
         durationUs = *mSampleDurations.begin();
@@ -639,6 +643,8 @@ status_t VideoFrameDecoder::onOutputReceived(
     if (!outputFormat->findInt32("color-transfer", (int32_t*)&transfer)) {
         transfer = 0;
     }
+    ALOGV("AHS:: output Format = %s", outputFormat->debugString().c_str());
+    ALOGV("AHS:: standard=%d, range=%d, transfer=%d",standard, range, transfer); 
     converter.setSrcColorSpace(standard, range, transfer);
 
     if (converter.isValid()) {
-- 
2.17.1

