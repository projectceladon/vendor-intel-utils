From dbfbd8eb6010c510c177f5c695db5b40488e38f2 Mon Sep 17 00:00:00 2001
From: renchenglei <chenglei.ren@intel.com>
Date: Thu, 12 Nov 2020 01:45:25 +0800
Subject: [PATCH] Using RGB565 in case YV12 is not supported

Tracked-On:
---
 .../colorconversion/SoftwareRenderer.cpp      | 21 ++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/media/libstagefright/colorconversion/SoftwareRenderer.cpp b/media/libstagefright/colorconversion/SoftwareRenderer.cpp
index 471131561531..1869cb62e1fd 100644
--- a/media/libstagefright/colorconversion/SoftwareRenderer.cpp
+++ b/media/libstagefright/colorconversion/SoftwareRenderer.cpp
@@ -98,6 +98,16 @@ void SoftwareRenderer::resetFormatIfChanged(
         dataSpaceChangedForPlanar16 = true;
     }
 
+    char szVendorIntelVideoCodec[PROPERTY_VALUE_MAX] = {'\0'};
+    bool noYUV = false;
+
+    if(property_get("vendor.intel.video.codec", szVendorIntelVideoCodec, NULL) > 0 ) {
+        if (strncmp(szVendorIntelVideoCodec, "hardware", PROPERTY_VALUE_MAX) != 0 ) {
+            ALOGI("Use RGB565 in case YV12 is not supported");
+            noYUV = true;
+        }
+    }
+
     if (static_cast<int32_t>(mColorFormat) == colorFormatNew &&
         mWidth == widthNew &&
         mHeight == heightNew &&
@@ -105,7 +115,8 @@ void SoftwareRenderer::resetFormatIfChanged(
         mCropTop == cropTopNew &&
         mCropRight == cropRightNew &&
         mCropBottom == cropBottomNew &&
-        !dataSpaceChangedForPlanar16) {
+        !dataSpaceChangedForPlanar16 &&
+        !noYUV) {
         // Nothing changed, no need to reset renderer.
         return;
     }
@@ -134,6 +145,10 @@ void SoftwareRenderer::resetFormatIfChanged(
             case OMX_COLOR_FormatYUV420SemiPlanar:
             case OMX_TI_COLOR_FormatYUV420PackedSemiPlanar:
             {
+                if (noYUV) {
+                    ALOGW("does not support YV12, convert to HAL_PIXEL_FORMAT_RGB_565");
+                    break;
+                }
                 halFormat = HAL_PIXEL_FORMAT_YV12;
                 bufWidth = (mCropWidth + 1) & ~1;
                 bufHeight = (mCropHeight + 1) & ~1;
@@ -164,6 +179,10 @@ void SoftwareRenderer::resetFormatIfChanged(
                     // use render engine to convert it to RGB if needed.
                     halFormat = HAL_PIXEL_FORMAT_RGBA_1010102;
                 } else {
+                    if (noYUV) {
+                        ALOGW("does not support YV12, convert to HAL_PIXEL_FORMAT_RGB_565");
+                        break;
+                    }
                     halFormat = HAL_PIXEL_FORMAT_YV12;
                 }
                 bufWidth = (mCropWidth + 1) & ~1;
-- 
2.17.1

