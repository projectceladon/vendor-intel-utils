From 26d4d4948ab6870079bd57579d0d9d35f7cb997d Mon Sep 17 00:00:00 2001
From: shivasku82 <shiva.kumara.rudrappa@intel.com>
Date: Thu, 15 Jul 2021 22:09:33 +0530
Subject: [PATCH] debug camera fw

Signed-off-by: shivasku82 <shiva.kumara.rudrappa@intel.com>
---
 camera/Camera.cpp                                          | 2 +-
 .../libcameraservice/device1/CameraHardwareInterface.cpp   | 2 +-
 services/camera/libcameraservice/device3/BufferUtils.cpp   | 2 +-
 .../libcameraservice/device3/Camera3BufferManager.cpp      | 3 ++-
 services/camera/libcameraservice/device3/Camera3Device.cpp | 7 +++++--
 .../camera/libcameraservice/gui/RingBufferConsumer.cpp     | 7 ++++---
 6 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/camera/Camera.cpp b/camera/Camera.cpp
index 84d1d934e1..173eb8cc56 100644
--- a/camera/Camera.cpp
+++ b/camera/Camera.cpp
@@ -15,7 +15,7 @@
 ** limitations under the License.
 */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "Camera"
 #include <utils/Log.h>
 #include <utils/threads.h>
diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
index 62ef681668..0b387c0b1a 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 #define LOG_TAG "CameraHardwareInterface"
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <inttypes.h>
 #include <media/hardware/HardwareAPI.h> // For VideoNativeHandleMetadata
diff --git a/services/camera/libcameraservice/device3/BufferUtils.cpp b/services/camera/libcameraservice/device3/BufferUtils.cpp
index cc2939062e..fc84a4aa41 100644
--- a/services/camera/libcameraservice/device3/BufferUtils.cpp
+++ b/services/camera/libcameraservice/device3/BufferUtils.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "Camera3-BufUtils"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 //#define LOG_NNDEBUG 0  // Per-frame verbose logging
 
 #include <inttypes.h>
diff --git a/services/camera/libcameraservice/device3/Camera3BufferManager.cpp b/services/camera/libcameraservice/device3/Camera3BufferManager.cpp
index d6bf83eba8..f9b8d51874 100644
--- a/services/camera/libcameraservice/device3/Camera3BufferManager.cpp
+++ b/services/camera/libcameraservice/device3/Camera3BufferManager.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "Camera3-BufferManager"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
 
@@ -297,6 +297,7 @@ status_t Camera3BufferManager::getBufferForStream(int streamId, int streamSetId,
         // Increase the hand-out and attached buffer counts for tracking purposes.
         bufferCount++;
         attachedBufferCount++;
+	ALOGE("shiva buffer bufferCount %d , attachedBufferCount %d",(int)bufferCount, (int)attachedBufferCount);
         // Update the water mark to be the max hand-out buffer count + 1. An additional buffer is
         // added to reduce the chance of buffer allocation during stream steady state, especially
         // for cases where one stream is active, the other stream may request some buffers randomly.
diff --git a/services/camera/libcameraservice/device3/Camera3Device.cpp b/services/camera/libcameraservice/device3/Camera3Device.cpp
index d5f136b84d..efd6906893 100644
--- a/services/camera/libcameraservice/device3/Camera3Device.cpp
+++ b/services/camera/libcameraservice/device3/Camera3Device.cpp
@@ -16,8 +16,9 @@
 
 #define LOG_TAG "Camera3-Device"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
-//#define LOG_NNDEBUG 0  // Per-frame verbose logging
+#define LOG_NDEBUG 0
+#define LOG_NNDEBUG 0  // Per-frame verbose logging
+
 
 #ifdef LOG_NNDEBUG
 #define ALOGVV(...) ALOGV(__VA_ARGS__)
@@ -3375,6 +3376,7 @@ status_t Camera3Device::HalInterface::wrapAsHidlRequest(camera3_capture_request_
             captureRequest->inputBuffer.bufferId = BUFFER_ID_NO_BUFFER;
         }
 
+	ALOGE("shiva num_output_buffers %d", request->num_output_buffers);
         captureRequest->outputBuffers.resize(request->num_output_buffers);
         for (size_t i = 0; i < request->num_output_buffers; i++) {
             const camera3_stream_buffer_t *src = request->output_buffers + i;
@@ -4392,6 +4394,7 @@ status_t Camera3Device::RequestThread::prepareHalRequests() {
         camera3_capture_request_t* halRequest = &nextRequest.halRequest;
         Vector<camera3_stream_buffer_t>* outputBuffers = &nextRequest.outputBuffers;
 
+	ALOGE("shiva prepareHalRequests frame number %d", halRequest->frame_number);
         // Prepare a request to HAL
         halRequest->frame_number = captureRequest->mResultExtras.frameNumber;
 
diff --git a/services/camera/libcameraservice/gui/RingBufferConsumer.cpp b/services/camera/libcameraservice/gui/RingBufferConsumer.cpp
index ee018c3cc8..ff4187a1bf 100644
--- a/services/camera/libcameraservice/gui/RingBufferConsumer.cpp
+++ b/services/camera/libcameraservice/gui/RingBufferConsumer.cpp
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 
-//#define LOG_NDEBUG 0
-#define LOG_TAG "RingBufferConsumer"
+#define LOG_NDEBUG 0
+#define LOG_TAG " sss RingBufferConsumer"
 #define ATRACE_TAG ATRACE_TAG_GRAPHICS
 
+
 #include <inttypes.h>
 
 #include <utils/Log.h>
@@ -46,7 +47,7 @@ RingBufferConsumer::RingBufferConsumer(const sp<IGraphicBufferConsumer>& consume
 {
     mConsumer->setConsumerUsageBits(consumerUsage);
     mConsumer->setMaxAcquiredBufferCount(bufferCount);
-
+ALOGE("Ssss buffer count %d",mBufferCount);
     assert(bufferCount > 0);
 }
 
-- 
2.32.0

