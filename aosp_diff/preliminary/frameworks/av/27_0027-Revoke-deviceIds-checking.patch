From 307b5d6272ac414b0094114cb0a7d20a5d433684 Mon Sep 17 00:00:00 2001
From: Neo Fang <neo.fang@intel.com>
Date: Thu, 7 Sep 2023 09:32:51 +0000
Subject: [PATCH] Revoke deviceIds checking

Issue: cameraId check in CameraService reports range errors if UVC
camera device Id exceeds device numbers.

RootCause: Android deviceId is used to identify camera devices below
Android camera framework and cameraHal; cameraId is for Android apps.
CameraService will do sanity check for cameraId and deviceId which
are not applicable for external camera devices, because external
camera deviceId will be larger than deviceId array size.

Fix: Revoke the uneccessary id range check, because external camera
hal checks and validates the id in hal.

Tracked-On: OAM-111433
Signed-off-by: Neo Fang <neo.fang@intel.com>
---
 .../camera/libcameraservice/CameraService.cpp    | 16 +---------------
 1 file changed, 1 insertion(+), 15 deletions(-)

diff --git a/services/camera/libcameraservice/CameraService.cpp b/services/camera/libcameraservice/CameraService.cpp
index 8a06b1c66c..a3411b7147 100644
--- a/services/camera/libcameraservice/CameraService.cpp
+++ b/services/camera/libcameraservice/CameraService.cpp
@@ -693,22 +693,8 @@ std::string CameraService::cameraIdIntToStrLocked(int cameraIdInt) {
                 __FUNCTION__, cameraIdInt, deviceIds->size());
         return std::string{};
     }
-    unsigned int i = 0;
-    bool found = false;
-    for (i = 0; i < deviceIds->size(); i++) {
-        ALOGE("deviceIds[%d]=%s", i, (*deviceIds)[i].c_str());
-        if (std::stoi((*deviceIds)[i]) == cameraIdInt) {
-            found = true;
-            break;
-        }
-    }
 
-    if (found == false) {
-        ALOGE("%s: input id %d invalid: valid range  (0, %zu), cameraIdInt not available",
-                 __FUNCTION__, cameraIdInt, deviceIds->size());
-        return std::string{};
-    }
-    return (*deviceIds)[i];
+    return (*deviceIds)[cameraIdInt];
 }
 
 String8 CameraService::cameraIdIntToStr(int cameraIdInt) {
-- 
2.17.1

