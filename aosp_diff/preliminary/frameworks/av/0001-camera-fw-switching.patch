From 6334035ed917fb9d10a34443529ad2f3d92f7e52 Mon Sep 17 00:00:00 2001
From: shivasku82 <shiva.kumara.rudrappa@intel.com>
Date: Sun, 18 Jul 2021 19:37:57 +0530
Subject: [PATCH] camera fw switching

Signed-off-by: shivasku82 <shiva.kumara.rudrappa@intel.com>
---
 camera/CameraBase.cpp                                       | 2 +-
 camera/CameraParameters2.cpp                                | 2 +-
 camera/ICamera.cpp                                          | 2 +-
 camera/ICameraClient.cpp                                    | 2 +-
 camera/camera2/CaptureRequest.cpp                           | 2 +-
 camera/camera2/OutputConfiguration.cpp                      | 2 +-
 camera/camera2/SessionConfiguration.cpp                     | 2 +-
 services/camera/libcameraservice/api1/Camera2Client.cpp     | 4 ++--
 services/camera/libcameraservice/api1/CameraClient.cpp      | 4 ++--
 .../libcameraservice/api1/client2/CallbackProcessor.cpp     | 4 ++--
 .../camera/libcameraservice/api1/client2/ZslProcessor.cpp   | 6 +++---
 .../camera/libcameraservice/api2/CameraDeviceClient.cpp     | 4 ++--
 services/camera/libcameraservice/api2/CompositeStream.cpp   | 2 +-
 .../camera/libcameraservice/api2/DepthCompositeStream.cpp   | 1 +
 .../camera/libcameraservice/api2/HeicCompositeStream.cpp    | 6 +++---
 .../camera/libcameraservice/common/Camera2ClientBase.cpp    | 2 +-
 .../libcameraservice/device1/CameraHardwareInterface.cpp    | 5 ++++-
 .../libcameraservice/device1/CameraHardwareInterface.h      | 3 +++
 services/camera/libcameraservice/device3/BufferUtils.cpp    | 2 +-
 .../libcameraservice/device3/Camera3BufferManager.cpp       | 2 +-
 services/camera/libcameraservice/device3/Camera3Device.cpp  | 3 ++-
 .../camera/libcameraservice/device3/Camera3OutputStream.cpp | 1 +
 .../camera/libcameraservice/device3/Camera3OutputUtils.cpp  | 4 ++--
 services/camera/libcameraservice/device3/Camera3Stream.cpp  | 4 ++--
 .../libcameraservice/device3/Camera3StreamSplitter.cpp      | 1 +
 25 files changed, 41 insertions(+), 31 deletions(-)

diff --git a/camera/CameraBase.cpp b/camera/CameraBase.cpp
index 0b0f5846cf..896c07e4e1 100644
--- a/camera/CameraBase.cpp
+++ b/camera/CameraBase.cpp
@@ -15,7 +15,7 @@
 ** limitations under the License.
 */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "CameraBase"
 #include <utils/Log.h>
 #include <utils/threads.h>
diff --git a/camera/CameraParameters2.cpp b/camera/CameraParameters2.cpp
index c29233cd1a..74016aee2c 100644
--- a/camera/CameraParameters2.cpp
+++ b/camera/CameraParameters2.cpp
@@ -16,7 +16,7 @@
 */
 
 #define LOG_TAG "CameraParams2"
-// #define LOG_NDEBUG 0
+ #define LOG_NDEBUG 0
 #include <utils/Log.h>
 
 #include <string.h>
diff --git a/camera/ICamera.cpp b/camera/ICamera.cpp
index b83edf7060..f11d85b99b 100644
--- a/camera/ICamera.cpp
+++ b/camera/ICamera.cpp
@@ -15,7 +15,7 @@
 ** limitations under the License.
 */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "ICamera"
 #include <utils/Log.h>
 #include <stdint.h>
diff --git a/camera/ICameraClient.cpp b/camera/ICameraClient.cpp
index bef2ea0acd..4ef08f4839 100644
--- a/camera/ICameraClient.cpp
+++ b/camera/ICameraClient.cpp
@@ -15,7 +15,7 @@
 ** limitations under the License.
 */
 
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 #define LOG_TAG "ICameraClient"
 #include <utils/Log.h>
 #include <stdint.h>
diff --git a/camera/camera2/CaptureRequest.cpp b/camera/camera2/CaptureRequest.cpp
index 1843ec4869..51d4895dd4 100644
--- a/camera/camera2/CaptureRequest.cpp
+++ b/camera/camera2/CaptureRequest.cpp
@@ -15,7 +15,7 @@
 ** limitations under the License.
 */
 
-// #define LOG_NDEBUG 0
+ #define LOG_NDEBUG 0
 #define LOG_TAG "CameraRequest"
 #include <utils/Log.h>
 #include <utils/String16.h>
diff --git a/camera/camera2/OutputConfiguration.cpp b/camera/camera2/OutputConfiguration.cpp
index 4e9b27d50d..31349d42e1 100644
--- a/camera/camera2/OutputConfiguration.cpp
+++ b/camera/camera2/OutputConfiguration.cpp
@@ -16,7 +16,7 @@
 */
 
 #define LOG_TAG "OutputConfiguration"
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <utils/Log.h>
 
diff --git a/camera/camera2/SessionConfiguration.cpp b/camera/camera2/SessionConfiguration.cpp
index a431a33525..52c4df1f44 100644
--- a/camera/camera2/SessionConfiguration.cpp
+++ b/camera/camera2/SessionConfiguration.cpp
@@ -16,7 +16,7 @@
 */
 
 #define LOG_TAG "SessionConfiguration"
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <utils/Log.h>
 
diff --git a/services/camera/libcameraservice/api1/Camera2Client.cpp b/services/camera/libcameraservice/api1/Camera2Client.cpp
index b043c0b557..3a7a401f8a 100644
--- a/services/camera/libcameraservice/api1/Camera2Client.cpp
+++ b/services/camera/libcameraservice/api1/Camera2Client.cpp
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera2Client"
+#define LOG_TAG "API1 Camera2Client"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <inttypes.h>
 #include <utils/Log.h>
diff --git a/services/camera/libcameraservice/api1/CameraClient.cpp b/services/camera/libcameraservice/api1/CameraClient.cpp
index 892996c3af..bef417dbaf 100644
--- a/services/camera/libcameraservice/api1/CameraClient.cpp
+++ b/services/camera/libcameraservice/api1/CameraClient.cpp
@@ -14,8 +14,8 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "CameraClient"
-//#define LOG_NDEBUG 0
+#define LOG_TAG "API1 CameraClient"
+#define LOG_NDEBUG 0
 
 #include <cutils/atomic.h>
 #include <cutils/properties.h>
diff --git a/services/camera/libcameraservice/api1/client2/CallbackProcessor.cpp b/services/camera/libcameraservice/api1/client2/CallbackProcessor.cpp
index a71a732fd7..70f3d3ca6f 100644
--- a/services/camera/libcameraservice/api1/client2/CallbackProcessor.cpp
+++ b/services/camera/libcameraservice/api1/client2/CallbackProcessor.cpp
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera2-CallbackProcessor"
+#define LOG_TAG "API1 Camera2-CallbackProcessor"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <utils/Log.h>
 #include <utils/Trace.h>
diff --git a/services/camera/libcameraservice/api1/client2/ZslProcessor.cpp b/services/camera/libcameraservice/api1/client2/ZslProcessor.cpp
index 8dc9863317..580cd3f432 100644
--- a/services/camera/libcameraservice/api1/client2/ZslProcessor.cpp
+++ b/services/camera/libcameraservice/api1/client2/ZslProcessor.cpp
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera2-ZslProcessor"
+#define LOG_TAG "API1 Camera2-ZslProcessor"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
-//#define LOG_NNDEBUG 0
+#define LOG_NDEBUG 0
+#define LOG_NNDEBUG 0
 
 #ifdef LOG_NNDEBUG
 #define ALOGVV(...) ALOGV(__VA_ARGS__)
diff --git a/services/camera/libcameraservice/api2/CameraDeviceClient.cpp b/services/camera/libcameraservice/api2/CameraDeviceClient.cpp
index e35b4366f2..5b408d1fca 100644
--- a/services/camera/libcameraservice/api2/CameraDeviceClient.cpp
+++ b/services/camera/libcameraservice/api2/CameraDeviceClient.cpp
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "CameraDeviceClient"
+#define LOG_TAG "API2 CameraDeviceClient"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <cutils/properties.h>
 #include <utils/CameraThreadState.h>
diff --git a/services/camera/libcameraservice/api2/CompositeStream.cpp b/services/camera/libcameraservice/api2/CompositeStream.cpp
index a61dac7d64..287860425a 100644
--- a/services/camera/libcameraservice/api2/CompositeStream.cpp
+++ b/services/camera/libcameraservice/api2/CompositeStream.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "Camera3-CompositeStream"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <utils/Log.h>
 #include <utils/Trace.h>
diff --git a/services/camera/libcameraservice/api2/DepthCompositeStream.cpp b/services/camera/libcameraservice/api2/DepthCompositeStream.cpp
index c6859bedf6..619fc6c619 100644
--- a/services/camera/libcameraservice/api2/DepthCompositeStream.cpp
+++ b/services/camera/libcameraservice/api2/DepthCompositeStream.cpp
@@ -598,6 +598,7 @@ status_t DepthCompositeStream::configureStream() {
         return res;
     }
 
+    ALOGE("shiva native_window_set_buffer_count 5 %d", (int)(maxProducerBuffers + maxConsumerBuffers));
     if ((res = native_window_set_buffer_count(
                     anwConsumer, maxProducerBuffers + maxConsumerBuffers)) != OK) {
         ALOGE("%s: Unable to set buffer count for stream %d", __FUNCTION__, mBlobStreamId);
diff --git a/services/camera/libcameraservice/api2/HeicCompositeStream.cpp b/services/camera/libcameraservice/api2/HeicCompositeStream.cpp
index 2462fd5295..528f922dd3 100644
--- a/services/camera/libcameraservice/api2/HeicCompositeStream.cpp
+++ b/services/camera/libcameraservice/api2/HeicCompositeStream.cpp
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera3-HeicCompositeStream"
+#define LOG_TAG "API2 Camera3-HeicCompositeStream"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <linux/memfd.h>
 #include <pthread.h>
@@ -492,7 +492,7 @@ status_t HeicCompositeStream::configureStream() {
                 " buffer count for stream %d", __FUNCTION__, mMainImageStreamId);
         return res;
     }
-
+ALOGE("shiva native_window_set_buffer_count 4 %d", (int)(kMaxOutputSurfaceProducerCount + maxConsumerBuffers));
     // Cannot use SourceSurface buffer count since it could be codec's 512*512 tile
     // buffer count.
     if ((res = native_window_set_buffer_count(
diff --git a/services/camera/libcameraservice/common/Camera2ClientBase.cpp b/services/camera/libcameraservice/common/Camera2ClientBase.cpp
index 0a41776a3e..6ae3c6507b 100644
--- a/services/camera/libcameraservice/common/Camera2ClientBase.cpp
+++ b/services/camera/libcameraservice/common/Camera2ClientBase.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "Camera2ClientBase"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <inttypes.h>
 
diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
index 0b387c0b1a..ca384cce8b 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-#define LOG_TAG "CameraHardwareInterface"
+#define LOG_TAG "API1 CameraHardwareInterface"
 #define LOG_NDEBUG 0
 
 #include <inttypes.h>
@@ -296,6 +296,7 @@ CameraHardwareInterface::cancelBuffer(uint64_t bufferId) {
 
 hardware::Return<Status>
 CameraHardwareInterface::setBufferCount(uint32_t count) {
+	ALOGE("shiva setBufferCount %d", (int)count);
     ANativeWindow *a = mPreviewWindow.get();
     if (a != nullptr) {
         // Workaround for b/27039775
@@ -309,6 +310,7 @@ CameraHardwareInterface::setBufferCount(uint32_t count) {
         // window and setting the values again.  This has the drawback of
         // actually causing memory reallocation, which may not have happened
         // in the past.
+	ALOGE("shiva setBufferCount 1");
         native_window_api_disconnect(a, NATIVE_WINDOW_API_CAMERA);
         native_window_api_connect(a, NATIVE_WINDOW_API_CAMERA);
         if (mPreviewScalingMode != NOT_SET) {
@@ -332,6 +334,7 @@ CameraHardwareInterface::setBufferCount(uint32_t count) {
             native_window_set_crop(a, &(mPreviewCrop));
         }
     }
+    ALOGE("shiva native_window_set_buffer_count 3 %d", (int)count);
     int rc = native_window_set_buffer_count(a, count);
     if (rc == OK) {
         cleanupCirculatingBuffers();
diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.h b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
index e519b04cdd..bf9272a0c5 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.h
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
@@ -322,6 +322,7 @@ private:
                          mBufSize(buf_size),
                          mNumBufs(num_buffers)
         {
+		ALOGE("CameraHeapMemory %d",(int)num_buffers);
             mHeap = new MemoryHeapBase(fd, buf_size * num_buffers);
             commonInitialization();
         }
@@ -330,6 +331,8 @@ private:
                                   mBufSize(buf_size),
                                   mNumBufs(num_buffers)
         {
+		                ALOGE("CameraHeapMemory %d",(int)num_buffers);
+
             mHeap = new MemoryHeapBase(buf_size * num_buffers);
             commonInitialization();
         }
diff --git a/services/camera/libcameraservice/device3/BufferUtils.cpp b/services/camera/libcameraservice/device3/BufferUtils.cpp
index fc84a4aa41..b404ec20d1 100644
--- a/services/camera/libcameraservice/device3/BufferUtils.cpp
+++ b/services/camera/libcameraservice/device3/BufferUtils.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera3-BufUtils"
+#define LOG_TAG "API2 Camera3-BufUtils"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
 #define LOG_NDEBUG 0
 //#define LOG_NNDEBUG 0  // Per-frame verbose logging
diff --git a/services/camera/libcameraservice/device3/Camera3BufferManager.cpp b/services/camera/libcameraservice/device3/Camera3BufferManager.cpp
index f9b8d51874..13904b9176 100644
--- a/services/camera/libcameraservice/device3/Camera3BufferManager.cpp
+++ b/services/camera/libcameraservice/device3/Camera3BufferManager.cpp
@@ -15,7 +15,7 @@
  */
 
 #define LOG_NDEBUG 0
-#define LOG_TAG "Camera3-BufferManager"
+#define LOG_TAG "API2 Camera3-BufferManager"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
 
 #include <gui/ISurfaceComposer.h>
diff --git a/services/camera/libcameraservice/device3/Camera3Device.cpp b/services/camera/libcameraservice/device3/Camera3Device.cpp
index efd6906893..b706b10ea8 100644
--- a/services/camera/libcameraservice/device3/Camera3Device.cpp
+++ b/services/camera/libcameraservice/device3/Camera3Device.cpp
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera3-Device"
+#define LOG_TAG "API2 Camera3-Device"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
 #define LOG_NDEBUG 0
 #define LOG_NNDEBUG 0  // Per-frame verbose logging
@@ -3727,6 +3727,7 @@ bool Camera3Device::HalInterface::verifyBufferIds(
 status_t Camera3Device::HalInterface::popInflightBuffer(
         int32_t frameNumber, int32_t streamId,
         /*out*/ buffer_handle_t **buffer) {
+	ALOGE("API2 popInflightBuffer %p",buffer);
     return mBufferRecords.popInflightBuffer(frameNumber, streamId, buffer);
 }
 
diff --git a/services/camera/libcameraservice/device3/Camera3OutputStream.cpp b/services/camera/libcameraservice/device3/Camera3OutputStream.cpp
index 01ca0064ec..e46ec833b3 100644
--- a/services/camera/libcameraservice/device3/Camera3OutputStream.cpp
+++ b/services/camera/libcameraservice/device3/Camera3OutputStream.cpp
@@ -464,6 +464,7 @@ status_t Camera3OutputStream::configureConsumerQueueLocked() {
     mLastTimestamp = 0;
     mUseMonoTimestamp = (isConsumedByHWComposer() | isVideoStream());
 
+    ALOGE("shiva native_window_set_buffer_count 1 %d", (int)mTotalBufferCount);
     res = native_window_set_buffer_count(mConsumer.get(),
             mTotalBufferCount);
     if (res != OK) {
diff --git a/services/camera/libcameraservice/device3/Camera3OutputUtils.cpp b/services/camera/libcameraservice/device3/Camera3OutputUtils.cpp
index 08cde5dc16..78abfc0b4b 100644
--- a/services/camera/libcameraservice/device3/Camera3OutputUtils.cpp
+++ b/services/camera/libcameraservice/device3/Camera3OutputUtils.cpp
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera3-OutputUtils"
+#define LOG_TAG "API2 Camera3-OutputUtils"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 //#define LOG_NNDEBUG 0  // Per-frame verbose logging
 
 #ifdef LOG_NNDEBUG
diff --git a/services/camera/libcameraservice/device3/Camera3Stream.cpp b/services/camera/libcameraservice/device3/Camera3Stream.cpp
index 20f616853a..226a75bce2 100644
--- a/services/camera/libcameraservice/device3/Camera3Stream.cpp
+++ b/services/camera/libcameraservice/device3/Camera3Stream.cpp
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-#define LOG_TAG "Camera3-Stream"
+#define LOG_TAG "API2 Camera3-Stream"
 #define ATRACE_TAG ATRACE_TAG_CAMERA
-//#define LOG_NDEBUG 0
+#define LOG_NDEBUG 0
 
 #include <utils/Log.h>
 #include <utils/Trace.h>
diff --git a/services/camera/libcameraservice/device3/Camera3StreamSplitter.cpp b/services/camera/libcameraservice/device3/Camera3StreamSplitter.cpp
index 5c6c518fae..6d7cf5f27b 100644
--- a/services/camera/libcameraservice/device3/Camera3StreamSplitter.cpp
+++ b/services/camera/libcameraservice/device3/Camera3StreamSplitter.cpp
@@ -232,6 +232,7 @@ status_t Camera3StreamSplitter::addOutputLocked(size_t surfaceId, const sp<Surfa
     // insufficient slots, set their count to the maximum supported. The output
     // surface buffer allocation is disabled so no real buffers will get allocated.
     size_t totalBufferCount = BufferQueue::NUM_BUFFER_SLOTS;
+    ALOGE("shiva native_window_set_buffer_count 2 %d", (int)totalBufferCount);
     res = native_window_set_buffer_count(outputQueue.get(),
             totalBufferCount);
     if (res != OK) {
-- 
2.32.0

