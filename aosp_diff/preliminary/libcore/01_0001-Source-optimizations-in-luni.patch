From 357d0cb97bd7cc6f9edf8868480ece358f8a041b Mon Sep 17 00:00:00 2001
From: bodapati <shalini.salomi.bodapati@intel.com>
Date: Wed, 29 Apr 2020 17:31:57 +0530
Subject: [PATCH] Source optimizations in luni

1.Replace %2 with &
2.Hoist invariant calculation outside loop

Change-Id: Ie3f5f9a300b36e2a1c5ebf5f90607760e0b150b3
Tracked-On: OAM-91030
Signed-off-by: bodapati <shalini.salomi.bodapati@intel.com>
---
 luni/src/main/native/libcore_io_Memory.cpp | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git luni/src/main/native/libcore_io_Memory.cpp luni/src/main/native/libcore_io_Memory.cpp
index 5f50751..a900c33 100644
--- luni/src/main/native/libcore_io_Memory.cpp
+++ luni/src/main/native/libcore_io_Memory.cpp
@@ -64,11 +64,12 @@ static inline void swapShorts(jshort* dstShorts, const jshort* srcShorts, size_t
     // Do 32-bit swaps as long as possible...
     jint* dst = reinterpret_cast<jint*>(dstShorts);
     const jint* src = reinterpret_cast<const jint*>(srcShorts);
-    for (size_t i = 0; i < count / 2; ++i) {
+    size_t sz = count/2;
+    for (size_t i = 0; i < sz; ++i) {
         jint v = get_unaligned<jint>(src++);
         put_unaligned<jint>(dst++, bswap_2x16(v));
     }
-    if ((count % 2) != 0) {
+    if ((count & 1) != 0) {
       jshort v = get_unaligned<jshort>(reinterpret_cast<const jshort*>(src));
       put_unaligned<jshort>(reinterpret_cast<jshort*>(dst), bswap_16(v));
     }
-- 
2.7.4

