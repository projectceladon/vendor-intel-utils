From cec2e62bb9fa5a9bc492976e0a0a37ac11279b5a Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Thu, 21 Jan 2021 08:59:05 +0530
Subject: [PATCH] Add trace logs to sinf expf and cosf

Tracked-On:
Signed-off-by: ahs <amrita.h.s@intel.com>
---
 libm/Android.bp                  |  6 +++++-
 libm/x86_64/generic/cosf.c       | 12 +++++++++++-
 libm/x86_64/generic/expf.c       | 13 ++++++++++++-
 libm/x86_64/generic/sinf.c       | 12 +++++++++++-
 libm/x86_64/kabylake/cosf.c      | 11 +++++++++++
 libm/x86_64/kabylake/cosf_avx2.S |  4 ++--
 libm/x86_64/kabylake/expf.c      | 11 +++++++++++
 libm/x86_64/kabylake/expf_avx2.S |  4 ++--
 libm/x86_64/kabylake/sinf.c      | 11 +++++++++++
 libm/x86_64/kabylake/sinf_avx2.S |  4 ++--
 10 files changed, 78 insertions(+), 10 deletions(-)
 create mode 100644 libm/x86_64/kabylake/cosf.c
 create mode 100644 libm/x86_64/kabylake/expf.c
 create mode 100644 libm/x86_64/kabylake/sinf.c

diff --git a/libm/Android.bp b/libm/Android.bp
index 0891ed698..69c437a3a 100644
--- a/libm/Android.bp
+++ b/libm/Android.bp
@@ -470,15 +470,18 @@ cc_library {
                 "x86_64/kabylake/sinf_data_avx2.S",
                 "x86_64/kabylake/sinf_cout_avx2.S",
                 "x86_64/kabylake/sinf_avx2.S",
+                "x86_64/kabylake/sinf.c",
                 "x86_64/kabylake/cos_data_avx2.S",
                 "x86_64/kabylake/cos_cout_avx2.S",
                 "x86_64/kabylake/cos_avx2.S",
                 "x86_64/kabylake/cosf_data_avx2.S",
                 "x86_64/kabylake/cosf_cout_avx2.S",
                 "x86_64/kabylake/cosf_avx2.S",
+                "x86_64/kabylake/cosf.c",
                 "x86_64/kabylake/exp_data_avx2.S",
                 "x86_64/kabylake/exp_cout_avx2.S",
                 "x86_64/kabylake/expf_avx2.S",
+                "x86_64/kabylake/expf.c",
             ],
             exclude_srcs: [
                 "upstream-freebsd/lib/msun/src/e_acos.c",
@@ -552,8 +555,9 @@ cc_library {
     // b/120614316, non-critical readibility check
     tidy_checks: ["-cert-dcl16-c"],
 
-    include_dirs: ["bionic/libc"],
+    include_dirs: ["bionic/libc", "bionic/libc/async_safe/include"],
     system_shared_libs: ["libc"],
+    static_libs: ["libasync_safe"],
 
     native_coverage: bionic_coverage,
     sanitize: {
diff --git a/libm/x86_64/generic/cosf.c b/libm/x86_64/generic/cosf.c
index e980df018..f7f38aa69 100644
--- a/libm/x86_64/generic/cosf.c
+++ b/libm/x86_64/generic/cosf.c
@@ -14,6 +14,16 @@
  * limitations under the License.
 */
 
-#define  cosf cosf_generic
+#define  cosf cosf_generic_ahs
 
 #include <../../external/arm-optimized-routines/math/cosf.c>
+
+#include <async_safe/log.h>
+
+float cosf_generic(float y)
+{
+   float x = cosf_generic_ahs(y);
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS generic cosf input", "%f", y); 
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS generic cosf output", "%f", x); 
+   return x;
+}
diff --git a/libm/x86_64/generic/expf.c b/libm/x86_64/generic/expf.c
index 2e1aa26f0..4492e9a19 100644
--- a/libm/x86_64/generic/expf.c
+++ b/libm/x86_64/generic/expf.c
@@ -14,6 +14,17 @@
  * limitations under the License.
 */
 
-#define expf expf_generic
+#define expf expf_generic_ahs
 #define FROM_LIBM 
+float expf_generic(float y);
 #include <../../external/arm-optimized-routines/math/expf.c>
+
+#include <async_safe/log.h>
+
+float expf_generic(float y)
+{
+   float x = expf_generic_ahs(y);
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS generic expf input", "%f", y); 
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS generic expf output", "%f", x); 
+   return x;
+}
diff --git a/libm/x86_64/generic/sinf.c b/libm/x86_64/generic/sinf.c
index 6b004c7e7..e323880e2 100644
--- a/libm/x86_64/generic/sinf.c
+++ b/libm/x86_64/generic/sinf.c
@@ -14,6 +14,16 @@
  * limitations under the License.
 */
 
-#define  sinf sinf_generic
+#define  sinf sinf_generic_ahs
 
 #include <../../external/arm-optimized-routines/math/sinf.c>
+
+#include <async_safe/log.h>
+
+float sinf_generic(float y)
+{
+   float x = sinf_generic_ahs(y);
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS generic sinf input", "%f", y); 
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS generic sinf output", "%f", x); 
+   return x;
+}
diff --git a/libm/x86_64/kabylake/cosf.c b/libm/x86_64/kabylake/cosf.c
new file mode 100644
index 000000000..d84680c19
--- /dev/null
+++ b/libm/x86_64/kabylake/cosf.c
@@ -0,0 +1,11 @@
+#include <async_safe/log.h>
+
+float cosf_ahs(float y);
+float cosf_avx2(float y)
+{
+   float x = cosf_ahs(y);
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS avx cosf input", "%f", y); 
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS avx cosf output", "%f", x); 
+   return x;
+}
+
diff --git a/libm/x86_64/kabylake/cosf_avx2.S b/libm/x86_64/kabylake/cosf_avx2.S
index ba30845ea..4d2987bd3 100644
--- a/libm/x86_64/kabylake/cosf_avx2.S
+++ b/libm/x86_64/kabylake/cosf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  asin
-ENTRY(cosf_avx2)
+ENTRY(cosf_ahs)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -292,7 +292,7 @@ ENTRY(cosf_avx2)
         vmovups   32(%rsp), %xmm14
 	.cfi_restore 31
         jmp       ..B1.2
-END(cosf_avx2)
+END(cosf_ahs)
 	.data
 # -- End  __svml_cosf1_ha_l9
 	.section .rodata, "a"
diff --git a/libm/x86_64/kabylake/expf.c b/libm/x86_64/kabylake/expf.c
new file mode 100644
index 000000000..cd92c9bd6
--- /dev/null
+++ b/libm/x86_64/kabylake/expf.c
@@ -0,0 +1,11 @@
+#include <async_safe/log.h>
+
+float expf_ahs(float y);
+float expf_avx2(float y)
+{
+   float x = expf_ahs(y);
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS avx expf input", "%f", y); 
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS avx expf output", "%f", x); 
+   return x;
+}
+
diff --git a/libm/x86_64/kabylake/expf_avx2.S b/libm/x86_64/kabylake/expf_avx2.S
index 995b21f2a..aef6728aa 100644
--- a/libm/x86_64/kabylake/expf_avx2.S
+++ b/libm/x86_64/kabylake/expf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  
-ENTRY(expf_avx2)
+ENTRY(expf_ahs)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -131,7 +131,7 @@ ENTRY(expf_avx2)
         lea       64(%rsp), %rsi
         call      __svml_sexp_ha_cout_rare_internal
         jmp       ..B1.5
-END(expf_avx2)
+END(expf_ahs)
 	.section .rodata, "a"
 	.align 16
 	.align 16
diff --git a/libm/x86_64/kabylake/sinf.c b/libm/x86_64/kabylake/sinf.c
new file mode 100644
index 000000000..dd330666e
--- /dev/null
+++ b/libm/x86_64/kabylake/sinf.c
@@ -0,0 +1,11 @@
+#include <async_safe/log.h>
+
+float sinf_ahs(float y);
+float sinf_avx2(float y)
+{
+   float x = sinf_ahs(y);
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS avx sinf input", "%f", y); 
+   async_safe_format_log(ANDROID_LOG_INFO, "AHS avx sinf output", "%f", x); 
+   return x;
+}
+
diff --git a/libm/x86_64/kabylake/sinf_avx2.S b/libm/x86_64/kabylake/sinf_avx2.S
index 0942e2e27..c8cb11b99 100644
--- a/libm/x86_64/kabylake/sinf_avx2.S
+++ b/libm/x86_64/kabylake/sinf_avx2.S
@@ -28,7 +28,7 @@ SUCH DAMAGE.
 
 #include <private/bionic_asm.h>
 # -- Begin  sin
-ENTRY(sinf_avx2)
+ENTRY(sinf_ahs)
 # parameter 1: %xmm0
 ..B1.1:
 ..L1:
@@ -293,7 +293,7 @@ ENTRY(sinf_avx2)
         vmovups   32(%rsp), %xmm14
 	.cfi_restore 31
         jmp       ..B1.2
-END(sinf_avx2)
+END(sinf_ahs)
 	.section .rodata, "a"
 	.align 16
 	.align 16
-- 
2.17.1

