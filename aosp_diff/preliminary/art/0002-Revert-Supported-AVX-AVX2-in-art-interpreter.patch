From df5a4c124ab1168b945a6761210de567e3847f6a Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Mon, 19 Oct 2020 11:03:03 +0530
Subject: [PATCH] Revert "Supported AVX/AVX2 in art-interpreter"

This reverts commit bae88c0759d48acf29b58d960ad2665e3462dfda.
---
 runtime/Android.bp                                | 12 ------------
 runtime/interpreter/mterp/x86/floating_point.S    | 14 --------------
 runtime/interpreter/mterp/x86_64/floating_point.S | 14 --------------
 3 files changed, 40 deletions(-)

diff --git a/runtime/Android.bp b/runtime/Android.bp
index 7e75016..1229e13 100644
--- a/runtime/Android.bp
+++ b/runtime/Android.bp
@@ -321,12 +321,6 @@ libart_cc_defaults {
                 "arch/x86/thread_x86.cc",
                 "arch/x86/fault_handler_x86.cc",
             ],
-            avx: {
-                asflags: ["-DMTERP_USE_AVX"],
-            },
-            avx2: {
-                asflags: ["-DMTERP_USE_AVX"],
-            },
         },
         x86_64: {
             srcs: [
@@ -345,12 +339,6 @@ libart_cc_defaults {
                 "monitor_pool.cc",
                 "arch/x86/fault_handler_x86.cc",
             ],
-            avx: {
-                asflags: ["-DMTERP_USE_AVX"],
-            },
-            avx2: {
-                asflags: ["-DMTERP_USE_AVX"],
-            },
         },
     },
     target: {
diff --git a/runtime/interpreter/mterp/x86/floating_point.S b/runtime/interpreter/mterp/x86/floating_point.S
index 0b3c06c..bc7c59d 100644
--- a/runtime/interpreter/mterp/x86/floating_point.S
+++ b/runtime/interpreter/mterp/x86/floating_point.S
@@ -56,17 +56,10 @@
     movzbl  2(rPC), %ecx                    # ecx <- BB
     movzbl  3(rPC), %eax                    # eax <- CC
     GET_VREG_XMM${suff} %xmm0, %ecx         # %xmm0 <- 1st src
-#ifdef MTERP_USE_AVX
-    v${instr}${suff} VREG_ADDRESS(%eax), %xmm0, %xmm0
-    SET_VREG_XMM${suff} %xmm0, rINST        # vAA <- %xmm0
-    vpxor    %xmm0, %xmm0, %xmm0
-    vmovs${suff}   %xmm0, VREG_REF_ADDRESS(rINST) # clear ref
-#else
     ${instr}${suff} VREG_ADDRESS(%eax), %xmm0
     SET_VREG_XMM${suff} %xmm0, rINST        # vAA <- %xmm0
     pxor    %xmm0, %xmm0
     movs${suff}   %xmm0, VREG_REF_ADDRESS(rINST) # clear ref
-#endif
     ADVANCE_PC_FETCH_AND_GOTO_NEXT 2
 
 %def sseBinop2Addr(instr="", suff=""):
@@ -74,17 +67,10 @@
     andl    $$0xf, %ecx                     # ecx <- A
     GET_VREG_XMM${suff} %xmm0, %ecx         # %xmm0 <- 1st src
     sarl    $$4, rINST                      # rINST<- B
-#ifdef MTERP_USE_AVX
-    v${instr}${suff} VREG_ADDRESS(rINST), %xmm0, %xmm0
-    SET_VREG_XMM${suff} %xmm0, %ecx         # vAA<- %xmm0
-    vpxor    %xmm0, %xmm0, %xmm0
-    vmovs${suff} %xmm0, VREG_REF_ADDRESS(rINST)  # clear ref
-#else
     ${instr}${suff} VREG_ADDRESS(rINST), %xmm0
     SET_VREG_XMM${suff} %xmm0, %ecx         # vAA<- %xmm0
     pxor    %xmm0, %xmm0
     movs${suff} %xmm0, VREG_REF_ADDRESS(rINST)  # clear ref
-#endif
     ADVANCE_PC_FETCH_AND_GOTO_NEXT 1
 
 %def op_add_double():
diff --git a/runtime/interpreter/mterp/x86_64/floating_point.S b/runtime/interpreter/mterp/x86_64/floating_point.S
index 599b3f4..7fcb742 100644
--- a/runtime/interpreter/mterp/x86_64/floating_point.S
+++ b/runtime/interpreter/mterp/x86_64/floating_point.S
@@ -56,17 +56,10 @@
     movzbq  2(rPC), %rcx                    # ecx <- BB
     movzbq  3(rPC), %rax                    # eax <- CC
     GET_VREG_XMM${suff} %xmm0, %rcx         # %xmm0 <- 1st src
-#ifdef MTERP_USE_AVX
-    v${instr}${suff} VREG_ADDRESS(%rax), %xmm0, %xmm0
-    SET_VREG_XMM${suff} %xmm0, rINSTq       # vAA <- %xmm0
-    vpxor    %xmm0, %xmm0, %xmm0
-    vmovs${suff}   %xmm0, VREG_REF_ADDRESS(rINSTq) # clear ref
-#else
     ${instr}${suff} VREG_ADDRESS(%rax), %xmm0
     SET_VREG_XMM${suff} %xmm0, rINSTq       # vAA <- %xmm0
     pxor    %xmm0, %xmm0
     movs${suff}   %xmm0, VREG_REF_ADDRESS(rINSTq) # clear ref
-#endif
     ADVANCE_PC_FETCH_AND_GOTO_NEXT 2
 
 %def sseBinop2Addr(instr="", suff=""):
@@ -74,17 +67,10 @@
     andl    $$0xf, %ecx                     # ecx <- A
     GET_VREG_XMM${suff} %xmm0, %rcx         # %xmm0 <- 1st src
     sarl    $$4, rINST                      # rINST<- B
-#ifdef MTERP_USE_AVX
-    v${instr}${suff} VREG_ADDRESS(rINSTq), %xmm0, %xmm0
-    SET_VREG_XMM${suff} %xmm0, %rcx         # vAA <- %xmm0
-    vpxor    %xmm0, %xmm0, %xmm0
-    vmovs${suff} %xmm0, VREG_REF_ADDRESS(rINSTq)  # clear ref
-#else
     ${instr}${suff} VREG_ADDRESS(rINSTq), %xmm0
     SET_VREG_XMM${suff} %xmm0, %rcx         # vAA <- %xmm0
     pxor    %xmm0, %xmm0
     movs${suff} %xmm0, VREG_REF_ADDRESS(rINSTq)  # clear ref
-#endif
     ADVANCE_PC_FETCH_AND_GOTO_NEXT 1
 
 %def op_add_double():
-- 
2.7.4

