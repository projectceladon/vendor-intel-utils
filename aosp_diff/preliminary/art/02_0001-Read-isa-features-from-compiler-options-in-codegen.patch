From 4b164d99c4d5ded97b10fd2251ca42b4f2450287 Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Wed, 4 Nov 2020 22:07:51 +0530
Subject: [PATCH] Read isa features from compiler options in codegen

Tracked-On: OAM-94405
Signed-off-by: shalini salomi bodapati<shalini.salomi.bodapati@intel.com>
---
 compiler/optimizing/code_generator_x86.cc    | 2 +-
 compiler/optimizing/code_generator_x86_64.cc | 2 +-
 compiler/utils/x86/assembler_x86.h           | 3 +--
 compiler/utils/x86_64/assembler_x86_64.h     | 3 +--
 4 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/compiler/optimizing/code_generator_x86.cc b/compiler/optimizing/code_generator_x86.cc
index ed1a536239..a1d89f993c 100644
--- a/compiler/optimizing/code_generator_x86.cc
+++ b/compiler/optimizing/code_generator_x86.cc
@@ -1040,7 +1040,7 @@ CodeGeneratorX86::CodeGeneratorX86(HGraph* graph,
       location_builder_(graph, this),
       instruction_visitor_(graph, this),
       move_resolver_(graph->GetAllocator(), this),
-      assembler_(graph->GetAllocator()),
+      assembler_(graph->GetAllocator(), compiler_options.GetInstructionSetFeatures()->AsX86InstructionSetFeatures()),
       boot_image_method_patches_(graph->GetAllocator()->Adapter(kArenaAllocCodeGenerator)),
       method_bss_entry_patches_(graph->GetAllocator()->Adapter(kArenaAllocCodeGenerator)),
       boot_image_type_patches_(graph->GetAllocator()->Adapter(kArenaAllocCodeGenerator)),
diff --git a/compiler/optimizing/code_generator_x86_64.cc b/compiler/optimizing/code_generator_x86_64.cc
index 8518b6db19..c7c11e2795 100644
--- a/compiler/optimizing/code_generator_x86_64.cc
+++ b/compiler/optimizing/code_generator_x86_64.cc
@@ -1309,7 +1309,7 @@ CodeGeneratorX86_64::CodeGeneratorX86_64(HGraph* graph,
         location_builder_(graph, this),
         instruction_visitor_(graph, this),
         move_resolver_(graph->GetAllocator(), this),
-        assembler_(graph->GetAllocator()),
+        assembler_(graph->GetAllocator(), compiler_options.GetInstructionSetFeatures()->AsX86_64InstructionSetFeatures()),
         constant_area_start_(0),
         boot_image_method_patches_(graph->GetAllocator()->Adapter(kArenaAllocCodeGenerator)),
         method_bss_entry_patches_(graph->GetAllocator()->Adapter(kArenaAllocCodeGenerator)),
diff --git a/compiler/utils/x86/assembler_x86.h b/compiler/utils/x86/assembler_x86.h
index 52556fae93..27fde26c80 100644
--- a/compiler/utils/x86/assembler_x86.h
+++ b/compiler/utils/x86/assembler_x86.h
@@ -310,8 +310,7 @@ class ConstantArea {
 class X86Assembler final : public Assembler {
  public:
   explicit X86Assembler(ArenaAllocator* allocator,
-                        const X86InstructionSetFeatures* instruction_set_features =
-                        X86InstructionSetFeatures::FromVariant("kabylake", nullptr).get())
+                        const X86InstructionSetFeatures* instruction_set_features = nullptr)
                 : Assembler(allocator),
                   constant_area_(allocator),
                   has_AVX_(instruction_set_features != nullptr ? instruction_set_features->HasAVX() : false),
diff --git a/compiler/utils/x86_64/assembler_x86_64.h b/compiler/utils/x86_64/assembler_x86_64.h
index 573fa46498..70072d9224 100644
--- a/compiler/utils/x86_64/assembler_x86_64.h
+++ b/compiler/utils/x86_64/assembler_x86_64.h
@@ -355,8 +355,7 @@ class NearLabel : private Label {
 class X86_64Assembler final : public Assembler {
  public:
   explicit X86_64Assembler(ArenaAllocator* allocator,
-                           const X86_64InstructionSetFeatures* instruction_set_features = 
-                           X86_64InstructionSetFeatures::FromVariant("kabylake", nullptr).get())
+                           const X86_64InstructionSetFeatures* instruction_set_features = nullptr)
       : Assembler(allocator),
         constant_area_(allocator),
         has_AVX_(instruction_set_features != nullptr ? instruction_set_features->HasAVX(): false),
-- 
2.17.1

