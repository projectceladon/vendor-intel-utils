From 7265056d17c5d5c2550ec4c5a370f37d7588055b Mon Sep 17 00:00:00 2001
From: Chienyuan <chienyuanhuang@google.com>
Date: Fri, 19 Feb 2021 20:05:20 +0800
Subject: [PATCH] AVRCP: pass bdaddr by value when use SdpCb

TAG: #security
Bug: 174182139
Test: compilation
Ignore-AOSP-First: security fix
Change-Id: I7f5b2a3dd0540a922b64ce213d871d355bd6dac6
Merged-In: I7f5b2a3dd0540a922b64ce213d871d355bd6dac6
(cherry picked from commit 71c573ae67b6a15c33ad1036b37b999c54d7236b)
---
 profile/avrcp/connection_handler.cc | 2 +-
 profile/avrcp/connection_handler.h  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/profile/avrcp/connection_handler.cc b/profile/avrcp/connection_handler.cc
index af8fb578c..06c61b3ba 100644
--- a/profile/avrcp/connection_handler.cc
+++ b/profile/avrcp/connection_handler.cc
@@ -406,7 +406,7 @@ void ConnectionHandler::MessageCb(uint8_t handle, uint8_t label, uint8_t opcode,
   device_map_[handle]->MessageReceived(label, Packet::Parse(pkt));
 }

-void ConnectionHandler::SdpCb(const RawAddress& bdaddr, SdpCallback cb,
+void ConnectionHandler::SdpCb(RawAddress bdaddr, SdpCallback cb,
                               tSDP_DISCOVERY_DB* disc_db, bool retry,
                               uint16_t status) {
   LOG(INFO) << __PRETTY_FUNCTION__ << ": SDP lookup callback received";
diff --git a/profile/avrcp/connection_handler.h b/profile/avrcp/connection_handler.h
index d5f0a2725..a5029cfc9 100644
--- a/profile/avrcp/connection_handler.h
+++ b/profile/avrcp/connection_handler.h
@@ -136,7 +136,7 @@ class ConnectionHandler {
   using SdpCallback = base::Callback<void(uint16_t status, uint16_t version,
                                           uint16_t features)>;
   virtual bool SdpLookup(const RawAddress& bdaddr, SdpCallback cb, bool retry);
-  void SdpCb(const RawAddress& bdaddr, SdpCallback cb,
+  void SdpCb(RawAddress bdaddr, SdpCallback cb,
              tSDP_DISCOVERY_DB* disc_db, bool retry, uint16_t status);

   virtual bool AvrcpConnect(bool initiator, const RawAddress& bdaddr);
--
2.29.0
