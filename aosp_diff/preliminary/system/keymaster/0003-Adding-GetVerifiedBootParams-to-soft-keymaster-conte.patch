From 2a32fb9d1d5b8114aaefba6e31d4f11b6269134e Mon Sep 17 00:00:00 2001
From: Max Bires <jbires@google.com>
Date: Wed, 11 Mar 2020 02:45:42 -0700
Subject: [PATCH 03/15] Adding GetVerifiedBootParams to soft keymaster context

This is a placeholder fix until the issue with removing the fallback
soft_keymaster_context on cuttlefish is found. Currently, doing so
causes KeyguardManager to fail on certain tests.

Bug: 148773266
Test: atest com.android.keychain.tests.BasicKeyChainServiceTest
Change-Id: I85be3717ed74c4ae3da13e6ba38a65a7213364d0
---
 contexts/soft_keymaster_context.cpp                 | 12 ++++++++++++
 include/keymaster/contexts/soft_keymaster_context.h |  9 +++++++++
 2 files changed, 21 insertions(+)

diff --git a/contexts/soft_keymaster_context.cpp b/contexts/soft_keymaster_context.cpp
index a0a42d3..25c28ae 100644
--- a/contexts/soft_keymaster_context.cpp
+++ b/contexts/soft_keymaster_context.cpp
@@ -476,4 +476,16 @@ keymaster_error_t SoftKeymasterContext::UnwrapKey(const KeymasterKeyBlob&, const
     return KM_ERROR_UNIMPLEMENTED;
 }
 
+keymaster_error_t SoftKeymasterContext::GetVerifiedBootParams(
+    keymaster_blob_t* verified_boot_key, keymaster_blob_t* verified_boot_hash,
+    keymaster_verified_boot_t* verified_boot_state, bool* device_locked) const {
+    // TODO(swillden): See if there might be some sort of vbmeta data in goldfish/cuttlefish.
+    static std::string fake_vb_key(32, 0);
+    *verified_boot_key = {reinterpret_cast<uint8_t*>(fake_vb_key.data()), fake_vb_key.size()};
+    *verified_boot_hash = {reinterpret_cast<uint8_t*>(fake_vb_key.data()), fake_vb_key.size()};
+    *verified_boot_state = KM_VERIFIED_BOOT_UNVERIFIED;
+    *device_locked = false;
+    return KM_ERROR_OK;
+}
+
 }  // namespace keymaster
diff --git a/include/keymaster/contexts/soft_keymaster_context.h b/include/keymaster/contexts/soft_keymaster_context.h
index 588e3db..20a10ac 100644
--- a/include/keymaster/contexts/soft_keymaster_context.h
+++ b/include/keymaster/contexts/soft_keymaster_context.h
@@ -104,6 +104,15 @@ class SoftKeymasterContext: public KeymasterContext, SoftwareKeyBlobMaker, Softw
                                     AuthorizationSet* sw_enforced) const override;
     /*********************************************************************************************/
 
+    /*********************************************************************************************
+     * Implement AttestationRecordContext
+     */
+
+    keymaster_error_t GetVerifiedBootParams(keymaster_blob_t* verified_boot_key,
+                                            keymaster_blob_t* verified_boot_hash,
+                                            keymaster_verified_boot_t* verified_boot_state,
+                                            bool* device_locked) const override;
+
   private:
     keymaster_error_t ParseKeymaster1HwBlob(const KeymasterKeyBlob& blob,
                                             const AuthorizationSet& additional_params,
-- 
2.17.1

