From 4c94fe1a7eba6ff6351b0e24e801ff11d2f07935 Mon Sep 17 00:00:00 2001
From: anuvarsh <anuvarshini.bc@intel.com>
Date: Thu, 18 Feb 2021 20:09:06 +0530
Subject: [PATCH] devuce status log

Tracked-On:
Signed-off-by: anuvarsh <anuvarshini.bc@intel.com>
---
 fastboot/device/commands.cpp | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/fastboot/device/commands.cpp b/fastboot/device/commands.cpp
index efa5ed1ee..2ac490cd9 100644
--- a/fastboot/device/commands.cpp
+++ b/fastboot/device/commands.cpp
@@ -459,28 +459,37 @@ bool CreatePartitionHandler(FastbootDevice* device, const std::vector<std::strin
     if (args.size() < 3) {
         return device->WriteFail("Invalid partition name and size");
     }
-
+	device->WriteStatus("Before Device status"); 
     if (GetDeviceLockStatus()) {
+	device->WriteStatus("Inside Device status"); 
         return device->WriteStatus(FastbootResult::FAIL, "Command not available on locked devices");
     }
 
     uint64_t partition_size;
     std::string partition_name = args[1];
+	device->WriteStatus("Before part size status"); 
     if (!android::base::ParseUint(args[2].c_str(), &partition_size)) {
+	device->WriteStatus("Inside part size status"); 
         return device->WriteFail("Invalid partition size");
     }
 
     PartitionBuilder builder(device, partition_name);
+	device->WriteStatus("Before builder status"); 
     if (!builder.Valid()) {
+	device->WriteStatus("Inside builder status"); 
         return device->WriteFail("Could not open super partition");
     }
     // TODO(112433293) Disallow if the name is in the physical table as well.
+	device->WriteStatus("Before Findpartition status"); 
     if (builder->FindPartition(partition_name)) {
+	device->WriteStatus("Inside Findpartition status"); 
         return device->WriteFail("Partition already exists");
     }
 
     auto partition = builder->AddPartition(partition_name, 0);
+	device->WriteStatus("Before Addpartition status"); 
     if (!partition) {
+	device->WriteStatus("Inside Addpartition status"); 
         return device->WriteFail("Failed to add partition");
     }
     if (!builder->ResizePartition(partition, partition_size)) {
@@ -490,6 +499,8 @@ bool CreatePartitionHandler(FastbootDevice* device, const std::vector<std::strin
     if (!builder.Write()) {
         return device->WriteFail("Failed to write partition table");
     }
+
+    device->WriteStatus("partition status created or not"); 
     return device->WriteOkay("Partition created");
 }
 
-- 
2.17.1

