From 4ebdceaac1445e8daeb4fd5e08bc5817787d9398 Mon Sep 17 00:00:00 2001
From: Qiming Shi <qiming.shi@intel.com>
Date: Thu, 26 Mar 2020 23:04:09 -0700
Subject: Ignore DTB is empty exception

Change-Id: I357994e7279c474e1dc349425d8ac8fcf90a984d
Tracked-On:
Signed-off-by: Qiming Shi <qiming.shi@intel.com>
---
 mkbootimg.py | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/mkbootimg.py b/mkbootimg.py
index b06d42d..1a02b05 100644
--- a/mkbootimg.py
+++ b/mkbootimg.py
@@ -97,8 +97,8 @@ def write_vendor_boot_header(args):
     args.vendor_boot.write(pack('I', args.base + args.tags_offset)) # physical addr for kernel tags
     args.vendor_boot.write(pack('16s', args.board.encode())) # asciiz product name
     args.vendor_boot.write(pack('I', VENDOR_BOOT_IMAGE_HEADER_V3_SIZE)) # header size in bytes
-    if filesize(args.dtb) == 0:
-        raise ValueError("DTB image must not be empty.")
+#    if filesize(args.dtb) == 0:
+#        raise ValueError("DTB image must not be empty.")
     args.vendor_boot.write(pack('I', filesize(args.dtb)))   # size in bytes
     args.vendor_boot.write(pack('Q', args.base + args.dtb_offset)) # dtb physical load address
     pad_file(args.vendor_boot, args.pagesize)
@@ -161,8 +161,8 @@ def write_header(args):
 
     if args.header_version > 1:
 
-        if filesize(args.dtb) == 0:
-            raise ValueError("DTB image must not be empty.")
+#        if filesize(args.dtb) == 0:
+#            raise ValueError("DTB image must not be empty.")
 
         args.output.write(pack('I', filesize(args.dtb)))   # size in bytes
         args.output.write(pack('Q', args.base + args.dtb_offset)) # dtb physical load address
-- 
2.24.0

