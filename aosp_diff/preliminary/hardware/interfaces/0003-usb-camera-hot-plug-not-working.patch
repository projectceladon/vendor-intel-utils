From 9d5c4237afed351ce367305aed4af6fa209584bf Mon Sep 17 00:00:00 2001
From: shivasku82 <shiva.kumara.rudrappa@intel.com>
Date: Mon, 6 May 2024 14:52:33 +0530
Subject: [PATCH] usb camera hot plug not working

Sometimes USB camera hot plug is not getting detected by camera
HAL.

Camera HAL tries to open video nodes before is completely enumerated
in such cases opening of video nodes is getting failed. Added retry
logic before publish camera enumuration in hal is failed.

Tests Done : Tested for Multi camera preview for multiple attempts of
   USB camera plug in.

Tracked-On: OAM-118092
Signed-off-by: shivasku82 <shiva.kumara.rudrappa@intel.com>
---
 .../provider/default/ExternalCameraProvider.cpp | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/camera/provider/default/ExternalCameraProvider.cpp b/camera/provider/default/ExternalCameraProvider.cpp
index 54875abb20..bd8de06332 100644
--- a/camera/provider/default/ExternalCameraProvider.cpp
+++ b/camera/provider/default/ExternalCameraProvider.cpp
@@ -28,6 +28,8 @@
 #include <sys/inotify.h>
 #include <regex>
 
+#define MAX_RETRY 3
+
 namespace android {
 namespace hardware {
 namespace camera {
@@ -187,13 +189,20 @@ void ExternalCameraProvider::addExternalCamera(const char* devName) {
 }
 
 void ExternalCameraProvider::deviceAdded(const char* devName) {
-    {
+    int status = 0;
+    // sometimes device nodes not enumated hence it fails retry before confirm
+    for (int i = 0; i < MAX_RETRY; i++) {
+        if (status == 1)
+            break;
         base::unique_fd fd(::open(devName, O_RDWR));
         if (fd.get() < 0) {
-            ALOGE("%s open v4l2 device %s failed:%s", __FUNCTION__, devName, strerror(errno));
-            return;
+            ALOGE("%s open v4l2 device %s failed:%s and iteration %d", __FUNCTION__, devName, strerror(errno), i);
+            if(usleep(200000) < 0) {
+                ALOGE("%s Failed to sleep %s :%s and iteration %d", __FUNCTION__, devName, strerror(errno), i);
+            }
+            continue;
         }
-
+        status = 1;
         struct v4l2_capability capability;
         int ret = ioctl(fd.get(), VIDIOC_QUERYCAP, &capability);
         if (ret < 0) {
-- 
2.45.2

