From 02e5be58eb5527f61d761c1cbe7ce44f9dc30f10 Mon Sep 17 00:00:00 2001
From: "Chen, ZhiminX" <zhiminx.chen@intel.com>
Date: Wed, 12 Jun 2019 15:33:04 +0800
Subject: [PATCH] Adjust FirmwareBootHeaderVerification to allow size of q page
 to be 0 for X86

Change-Id: Ic09a1538f7e584f025dc1bb6966c565c41e8795d
Tracked-On: https://jira.devtools.intel.com/browse/OAM-82819
Signed-off-by: Chen, ZhiminX <zhiminx.chen@intel.com>
---
 .../verify_boot_header/VtsFirmwareBootHeaderVerification.py  | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/testcases/host/verify_boot_header/VtsFirmwareBootHeaderVerification.py b/testcases/host/verify_boot_header/VtsFirmwareBootHeaderVerification.py
index 84c46eeea..ed0f34573 100644
--- a/testcases/host/verify_boot_header/VtsFirmwareBootHeaderVerification.py
+++ b/testcases/host/verify_boot_header/VtsFirmwareBootHeaderVerification.py
@@ -136,7 +136,10 @@ class VtsFirmwareBootHeaderVerificationTest(base_test.BaseTestClass):
                 boot_header_size = unpack("I", image_file.read(4))[0]
                 if host_image_header_version > 1:
                     dtb_size = unpack("I", image_file.read(4))[0]
-                    asserts.assertNotEqual(dtb_size, 0, "Boot/recovery image must contain DTB")
+                    if "x86" not in self.dut.cpu_abi:
+                        asserts.assertNotEqual(dtb_size, 0, "Boot/recovery image must contain DTB")
+                    elif dtb_size == 0:
+                        logging.info("Boot/recovery image does not contain DTB")
                     image_file.read(8)  # ignore DTB physical load address
                 expected_header_size = image_file.tell()
                 asserts.assertEqual(
--
2.21.0
