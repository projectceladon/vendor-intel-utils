From 1e471695b21af8116ebff8993538a872adc87928 Mon Sep 17 00:00:00 2001
From: "Li, HaihongX" <haihongx.li@intel.com>
Date: Tue, 19 Oct 2021 09:24:48 +0800
Subject: [PATCH] Fix drm-hwc import buffer failure issue

Set format is DRM_FORMAT_NV12 if DRM_FORMAT_NV12_Y_TILED_INTEL.
Don't close the same handle several times.

Tracked-On: OAM-99497
Signed-off-by: Li, HaihongX <haihongx.li@intel.com>
---
 drm/DrmFbImporter.cpp   | 13 ++++++++++++-
 drm/DrmPlane.cpp        |  2 +-
 include/drmhwcomposer.h |  1 +
 3 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/drm/DrmFbImporter.cpp b/drm/DrmFbImporter.cpp
index 592fc48..cbe0c9f 100644
--- a/drm/DrmFbImporter.cpp
+++ b/drm/DrmFbImporter.cpp
@@ -40,6 +40,7 @@ auto DrmFbIdHandle::CreateInstance(hwc_drm_bo_t *bo, GemHandle first_gem_handle,
   local->gem_handles_[0] = first_gem_handle;
   int32_t err = 0;
 
+  uint32_t num_planes = 0;
   /* Framebuffer object creation require gem handle for every used plane */
   for (int i = 1; i < local->gem_handles_.size(); i++) {
     if (bo->prime_fds[i] > 0) {
@@ -52,6 +53,7 @@ auto DrmFbIdHandle::CreateInstance(hwc_drm_bo_t *bo, GemHandle first_gem_handle,
         }
       } else {
         local->gem_handles_.at(i) = local->gem_handles_[0];
+        num_planes++;
       }
     }
   }
@@ -72,6 +74,13 @@ auto DrmFbIdHandle::CreateInstance(hwc_drm_bo_t *bo, GemHandle first_gem_handle,
                         &local->gem_handles_[0], &bo->pitches[0],
                         &bo->offsets[0], &local->fb_id_, 0);
   } else {
+    if (bo->format == DRM_FORMAT_NV12_Y_TILED_INTEL) {
+      for (uint32_t i = num_planes; i < HWC_DRM_BO_MAX_PLANES; i++) {
+        bo->modifiers[i] = DRM_FORMAT_MOD_NONE;
+        local->gem_handles_[i] = 0;
+      }
+      bo->format = DRM_FORMAT_NV12;
+    }
     err = drmModeAddFB2WithModifiers(drm->fd(), bo->width, bo->height,
                                      bo->format, &local->gem_handles_[0],
                                      &bo->pitches[0], &bo->offsets[0],
@@ -101,10 +110,12 @@ DrmFbIdHandle::~DrmFbIdHandle() {
    * request via system properties)
    */
   struct drm_gem_close gem_close {};
+  bool first = true;
   for (unsigned int gem_handle : gem_handles_) {
-    if (gem_handle == 0) {
+    if (gem_handle == 0 || (!first && gem_handle == gem_handles_[0])) {
       continue;
     }
+    first = false;
     gem_close.handle = gem_handle;
     int32_t err = drmIoctl(drm_->fd(), DRM_IOCTL_GEM_CLOSE, &gem_close);
     if (err != 0) {
diff --git a/drm/DrmPlane.cpp b/drm/DrmPlane.cpp
index 6433fb6..1b92101 100644
--- a/drm/DrmPlane.cpp
+++ b/drm/DrmPlane.cpp
@@ -247,7 +247,7 @@ uint32_t DrmPlane::type() const {
 
 bool DrmPlane::IsFormatSupported(uint32_t format) const {
   return std::find(std::begin(formats_), std::end(formats_), format) !=
-         std::end(formats_);
+        std::end(formats_) || format == DRM_FORMAT_NV12_Y_TILED_INTEL;
 }
 
 bool DrmPlane::HasNonRgbFormat() const {
diff --git a/include/drmhwcomposer.h b/include/drmhwcomposer.h
index 22af12b..6528f86 100644
--- a/include/drmhwcomposer.h
+++ b/include/drmhwcomposer.h
@@ -28,6 +28,7 @@
 #include "drmhwcgralloc.h"
 #include "utils/UniqueFd.h"
 
+#define DRM_FORMAT_NV12_Y_TILED_INTEL fourcc_code('9', '9', '9', '6')
 namespace android {
 
 class DrmFbIdHandle;
-- 
2.32.0

