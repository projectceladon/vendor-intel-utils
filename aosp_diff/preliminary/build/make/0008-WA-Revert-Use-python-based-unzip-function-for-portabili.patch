From fce0e68b4ab3606be782f5f70d462075e0be7a2a Mon Sep 17 00:00:00 2001
From: celadon <celadon@intel.com>
Date: Fri, 1 Sep 2023 08:57:37 +0000
Subject: [PATCH] WA - Revert "Use python based unzip function for portability"

This reverts commit 512a1f5f2d13f4b28db3f2f7d89151f31345db95.
---
 tools/releasetools/common.py | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index 018efba531..6db1d14782 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -2111,19 +2111,20 @@ def UnzipToDir(filename, dirname, patterns=None):
         archvie. Non-matching patterns will be filtered out. If there's no match
         after the filtering, no file will be unzipped.
   """
-  with zipfile.ZipFile(filename, allowZip64=True, mode="r") as input_zip:
+  cmd = ["unzip", "-o", "-q", filename, "-d", dirname]
+  if patterns is not None:
     # Filter out non-matching patterns. unzip will complain otherwise.
-    if patterns is not None:
+    with zipfile.ZipFile(filename, allowZip64=True) as input_zip:
       names = input_zip.namelist()
-      filtered = [name for name in names if any(
-          [fnmatch.fnmatch(name, p) for p in patterns])]
+    filtered = [
+        pattern for pattern in patterns if fnmatch.filter(names, pattern)]
 
-      # There isn't any matching files. Don't unzip anything.
-      if not filtered:
-        return
-      input_zip.extractall(dirname, filtered)
-    else:
-      input_zip.extractall(dirname)
+    # There isn't any matching files. Don't unzip anything.
+    if not filtered:
+      return
+    cmd.extend(filtered)
+
+  RunAndCheckOutput(cmd)
 
 
 def UnzipTemp(filename, patterns=None):
-- 
2.39.2

