From 8c665cc2fd45b6a82f0d8e4867bd10fcd0947c60 Mon Sep 17 00:00:00 2001
From: celadon <celadon@intel.com>
Date: Fri, 1 Sep 2023 08:57:06 +0000
Subject: [PATCH] WA - Revert "Fix python3.11's support for zip64"

This reverts commit 9021cb5ae1440d20686d1b8929fcb0959f56d7fc.
---
 tools/releasetools/common.py | 19 ++++---------------
 1 file changed, 4 insertions(+), 15 deletions(-)

diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index 1c8914565f..018efba531 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -2113,28 +2113,17 @@ def UnzipToDir(filename, dirname, patterns=None):
   """
   with zipfile.ZipFile(filename, allowZip64=True, mode="r") as input_zip:
     # Filter out non-matching patterns. unzip will complain otherwise.
-    entries = input_zip.infolist()
-    # b/283033491
-    # Per https://en.wikipedia.org/wiki/ZIP_(file_format)#Central_directory_file_header
-    # In zip64 mode, central directory record's header_offset field might be
-    # set to 0xFFFFFFFF if header offset is > 2^32. In this case, the extra
-    # fields will contain an 8 byte little endian integer at offset 20
-    # to indicate the actual local header offset.
-    # As of python3.11, python does not handle zip64 central directories
-    # correctly, so we will manually do the parsing here.
-    for entry in entries:
-      if entry.header_offset == 0xFFFFFFFF and len(entry.extra) >= 28:
-        entry.header_offset = int.from_bytes(entry.extra[20:28], "little")
     if patterns is not None:
-      filtered = [info for info in entries if any(
-          [fnmatch.fnmatch(info.filename, p) for p in patterns])]
+      names = input_zip.namelist()
+      filtered = [name for name in names if any(
+          [fnmatch.fnmatch(name, p) for p in patterns])]
 
       # There isn't any matching files. Don't unzip anything.
       if not filtered:
         return
       input_zip.extractall(dirname, filtered)
     else:
-      input_zip.extractall(dirname, entries)
+      input_zip.extractall(dirname)
 
 
 def UnzipTemp(filename, patterns=None):
-- 
2.39.2

