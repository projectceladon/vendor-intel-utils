From 18072c7708f7a50ed7c226802400282bda0aa3f7 Mon Sep 17 00:00:00 2001
From: Tanuj Tekriwal <tanuj.tekriwal@intel.com>
Date: Tue, 29 Aug 2023 08:33:46 +0000
Subject: [PATCH] WA - Revert "Handle symlinks when extracting zipfiles"

This reverts commit 0e7644ff0674fd5fb86502b6a8f9c05332634041.
Since Android build is failing because of this patch.
This will be removed and fix will be merged.

Tracked-On: NA
Change-Id: I6d0bbdb9e1753d57867e5688afc3c4b66176edfb
Signed-off-by: Tanuj Tekriwal <tanuj.tekriwal@intel.com>
---
 tools/releasetools/common.py | 27 ++-------------------------
 1 file changed, 2 insertions(+), 25 deletions(-)

diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index 3d55b2e000..160f976553 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -35,7 +35,6 @@ import shlex
 import shutil
 import subprocess
 import sys
-import stat
 import tempfile
 import threading
 import time
@@ -2102,26 +2101,6 @@ def Gunzip(in_filename, out_filename):
     shutil.copyfileobj(in_file, out_file)
 
 
-def UnzipSingleFile(input_zip: zipfile.ZipFile, info: zipfile.ZipInfo, dirname: str):
-  # According to https://stackoverflow.com/questions/434641/how-do-i-set-permissions-attributes-on-a-file-in-a-zip-file-using-pythons-zip/6297838#6297838
-  # higher bits of |external_attr| are unix file permission and types
-  unix_filetype = info.external_attr >> 16
-
-  def CheckMask(a, mask):
-    return (a & mask) == mask
-
-  def IsSymlink(a):
-    return CheckMask(a, stat.S_IFLNK)
-  # python3.11 zipfile implementation doesn't handle symlink correctly
-  if not IsSymlink(unix_filetype):
-    return input_zip.extract(info, dirname)
-  if dirname is None:
-    dirname = os.getcwd()
-  target = os.path.join(dirname, info.filename)
-  os.makedirs(os.path.dirname(target), exist_ok=True)
-  os.symlink(input_zip.read(info).decode(), target)
-
-
 def UnzipToDir(filename, dirname, patterns=None):
   """Unzips the archive to the given directory.
 
@@ -2167,11 +2146,9 @@ def UnzipToDir(filename, dirname, patterns=None):
       # There isn't any matching files. Don't unzip anything.
       if not filtered:
         return
-      for info in filtered:
-        UnzipSingleFile(input_zip, info, dirname)
+      input_zip.extractall(dirname, filtered)
     else:
-      for info in entries:
-        UnzipSingleFile(input_zip, info, dirname)
+      input_zip.extractall(dirname, entries)
 
 
 def UnzipTemp(filename, patterns=None):
-- 
2.39.2

