From b89ce1702cd7729316d52ffaea40dc1a65dc4ce3 Mon Sep 17 00:00:00 2001
From: Deepa <g.k.deepa@intel.com>
Date: Wed, 13 Feb 2019 15:29:52 +0530
Subject: [PATCH] changes in blueprint to include pfw based on
 USE_CUSTOM_PARAMETER_FRAMEWORK flag

Change-Id: I8e36e1ab99c6973c01c5277e6351b18581e1ab38
Tracked-On:https://jira.devtools.intel.com/browse/OAM-73496
Signed-off-by: Deepa <g.k.deepa@intel.com>
---
 bootstrap.bash        | 7 ++++++-
 bootstrap/build.ninja | 2 +-
 bootstrap/command.go  | 9 +++++++--
 3 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/bootstrap.bash b/bootstrap.bash
index 0bb645b..2ce3125 100755
--- a/bootstrap.bash
+++ b/bootstrap.bash
@@ -112,12 +112,17 @@ if [ -z "$VENDOR_ART_PATH" ] || [ "$VENDOR_ART_PATH" == "art" ] ; then
 else
     EXCLUDE_ART="art/"
 fi
-
+if [ "$USE_CUSTOM_PARAMETER_FRAMEWORK" == "true" ] ; then
+    EXCLUDE_PFW="vendor/intel/audio/parameter-framework"
+else
+    EXCLUDE_PFW="external/parameter-framework"
+fi
 echo "bootstrapBuildDir = $BUILDDIR" > $BUILDDIR/.minibootstrap/build.ninja
 echo "topFile = $SRCDIR/$TOPNAME" >> $BUILDDIR/.minibootstrap/build.ninja
 echo "extraArgs = $EXTRA_ARGS" >> $BUILDDIR/.minibootstrap/build.ninja
 echo "builddir = $NINJA_BUILDDIR" >> $BUILDDIR/.minibootstrap/build.ninja
 echo "excludeArt = $EXCLUDE_ART" >> $BUILDDIR/.minibootstrap/build.ninja
+echo "excludePfw = $EXCLUDE_PFW" >> $BUILDDIR/.minibootstrap/build.ninja
 echo "include $BLUEPRINTDIR/bootstrap/build.ninja" >> $BUILDDIR/.minibootstrap/build.ninja
 
 if [ ! -f "$BUILDDIR/.minibootstrap/build-globs.ninja" ]; then
diff --git a/bootstrap/build.ninja b/bootstrap/build.ninja
index def9429..91cb49c 100644
--- a/bootstrap/build.ninja
+++ b/bootstrap/build.ninja
@@ -11,7 +11,7 @@ myGlobs = ${bootstrapBuildDir}/.minibootstrap/build-globs.ninja
 subninja ${myGlobs}
 
 rule build.ninja
-    command = ${builder} ${extraArgs} -b ${bootstrapBuildDir} -n ${builddir} -d ${out}.d -globFile ${myGlobs} -o ${out} -e ${excludeArt} ${in}
+    command = ${builder} ${extraArgs} -b ${bootstrapBuildDir} -n ${builddir} -d ${out}.d -globFile ${myGlobs} -o ${out} -e ${excludeArt} -ex ${excludePfw} ${in}
     deps = gcc
     depfile = ${out}.d
     description = ${builder} ${out}
diff --git a/bootstrap/command.go b/bootstrap/command.go
index 0e58d52..e10915f 100644
--- a/bootstrap/command.go
+++ b/bootstrap/command.go
@@ -49,6 +49,7 @@ var (
 	NinjaBuildDir string
 	SrcDir        string
 	excludeArt    string
+	excludePfw    string
 )
 
 func init() {
@@ -67,6 +68,7 @@ func init() {
 	flag.StringVar(&moduleListFile, "l", "", "file that lists filepaths to parse")
 	flag.BoolVar(&emptyNinjaFile, "empty-ninja-file", false, "write out a 0-byte ninja file")
 	flag.StringVar(&excludeArt, "e", "", "exclude art env string")
+	flag.StringVar(&excludePfw, "ex", "", "exclude Pfw env string")
 }
 
 func Main(ctx *blueprint.Context, config interface{}, extraNinjaFileDeps ...string) {
@@ -108,7 +110,10 @@ func Main(ctx *blueprint.Context, config interface{}, extraNinjaFileDeps ...stri
 	SrcDir = filepath.Dir(flag.Arg(0))
 	if moduleListFile != "" {
 		if excludeArt != "" {
-		   checkForVendorArt(moduleListFile,excludeArt)
+		   checkForVendorBp(moduleListFile,excludeArt)
+		}
+		if excludePfw != "" {
+		   checkForVendorBp(moduleListFile,excludePfw)
 		}
 		ctx.SetModuleListFile(moduleListFile)
 		extraNinjaFileDeps = append(extraNinjaFileDeps, moduleListFile)
@@ -279,7 +284,7 @@ func fatalErrors(errs []error) {
 	}
 	os.Exit(1)
 }
-func checkForVendorArt(filepath string,exclude string) {
+func checkForVendorBp(filepath string,exclude string) {
     var f *os.File
     f, err := os.OpenFile(filepath,
                          os.O_RDWR,
-- 
2.21.0

