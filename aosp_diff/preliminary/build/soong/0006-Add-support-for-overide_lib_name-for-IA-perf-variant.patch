From 823f12e40691ebf6a29dd4fce6d470169b01c72a Mon Sep 17 00:00:00 2001
From: ahs <amrita.h.s@intel.com>
Date: Wed, 9 Dec 2020 12:51:51 +0530
Subject: [PATCH] Add support for overide_lib_name for IA perf variants of a
 library

Tracked-On: OAM-95425
Signed-off-by: ahs <amrita.h.s@intel.com>
---
 android/module.go | 6 +++++-
 cc/cc.go          | 5 +++++
 cc/library.go     | 5 +++++
 cc/vndk.go        | 4 +++-
 4 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/android/module.go b/android/module.go
index cd4baabb5..e910f451c 100644
--- a/android/module.go
+++ b/android/module.go
@@ -303,6 +303,7 @@ func newPackageId(pkg string) qualifiedModuleName {
 type nameProperties struct {
 	// The name of the module.  Must be unique across all modules.
 	Name *string
+	Override_lib_name *string
 }
 
 type commonProperties struct {
@@ -788,6 +789,10 @@ func (m *ModuleBase) BaseModuleName() string {
 	return String(m.nameProperties.Name)
 }
 
+func (m *ModuleBase) OverrideLibraryName() string {
+	return String(m.nameProperties.Override_lib_name)
+}
+
 func (m *ModuleBase) base() *ModuleBase {
 	return m
 }
@@ -1883,7 +1888,6 @@ func (m *moduleContext) installFile(installPath InstallPath, name string, srcPat
 	m.module.base().hooks.runInstallHooks(m, fullInstallPath, false)
 
 	if !m.skipInstall(fullInstallPath) {
-
 		deps = append(deps, m.installDeps...)
 
 		var implicitDeps, orderOnlyDeps Paths
diff --git a/cc/cc.go b/cc/cc.go
index 0f874f13c..e52574c4a 100644
--- a/cc/cc.go
+++ b/cc/cc.go
@@ -330,6 +330,7 @@ type ModuleContextIntf interface {
 	shouldCreateSourceAbiDump() bool
 	selectedStl() string
 	baseModuleName() string
+	overrideLibraryName() string
 	getVndkExtendsModuleName() string
 	isPgoCompile() bool
 	isNDKStubLibrary() bool
@@ -1241,6 +1242,10 @@ func (ctx *moduleContextImpl) baseModuleName() string {
 	return ctx.mod.ModuleBase.BaseModuleName()
 }
 
+func (ctx *moduleContextImpl) overrideLibraryName() string {
+	return ctx.mod.ModuleBase.OverrideLibraryName()
+}
+
 func (ctx *moduleContextImpl) getVndkExtendsModuleName() string {
 	return ctx.mod.getVndkExtendsModuleName()
 }
diff --git a/cc/library.go b/cc/library.go
index 3deb17300..8cc8097ef 100644
--- a/cc/library.go
+++ b/cc/library.go
@@ -721,6 +721,11 @@ func (library *libraryDecorator) getLibNameHelper(baseModuleName string, useVndk
 }
 
 func (library *libraryDecorator) getLibName(ctx BaseModuleContext) string {
+	// If an overrideLibraryName exists => this is a proxy library
+	// We must use the overrideLibraryName
+	if ctx.overrideLibraryName() != "" {
+	        library.libName = ctx.overrideLibraryName()
+	}
 	name := library.getLibNameHelper(ctx.baseModuleName(), ctx.useVndk())
 
 	if ctx.isVndkExt() {
diff --git a/cc/vndk.go b/cc/vndk.go
index 1b8aa2d64..aca215502 100644
--- a/cc/vndk.go
+++ b/cc/vndk.go
@@ -615,7 +615,9 @@ func (c *vndkSnapshotSingleton) GenerateBuildActions(ctx android.SingletonContex
 		}
 
 		libPath := m.outputFile.Path()
-		snapshotLibOut := filepath.Join(snapshotArchDir, targetArch, "shared", vndkType, libPath.Base())
+		qualifiedLibName := m.RelativeInstallPath()
+		qualifiedLibName = filepath.Join(qualifiedLibName, libPath.Base())
+		snapshotLibOut := filepath.Join(snapshotArchDir, targetArch, "shared", vndkType, qualifiedLibName)
 		ret = append(ret, copyFile(ctx, libPath, snapshotLibOut))
 
 		if ctx.Config().VndkSnapshotBuildArtifacts() {
-- 
2.17.1

