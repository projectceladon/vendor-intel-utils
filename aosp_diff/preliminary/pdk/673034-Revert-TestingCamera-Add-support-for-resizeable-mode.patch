From 56a98a2c1ae07a2d9101f546284b0373d1ff9a9b Mon Sep 17 00:00:00 2001
From: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
Date: Tue, 25 Jun 2019 20:48:16 +0530
Subject: [PATCH] Revert "TestingCamera: Add support for 'resizeable' mode"

This reverts commit 8112961f0cfa2bef459f5dd3dd77462cd6325d8b.

Reverting the commit as this causes issue with USB camera and
device without any sensors.

Change-Id: I3e079fad4be92cb18fb33bc105d500855d5edcae
Tracked-On:
Signed-off-by: Jeevaka Prabu Badrappan <jeevaka.badrappan@intel.com>
---
 .../android/testingcamera/TestingCamera.java  | 61 +------------------
 1 file changed, 1 insertion(+), 60 deletions(-)

diff --git a/apps/TestingCamera/src/com/android/testingcamera/TestingCamera.java b/apps/TestingCamera/src/com/android/testingcamera/TestingCamera.java
index f796dee..ec76c8f 100644
--- a/apps/TestingCamera/src/com/android/testingcamera/TestingCamera.java
+++ b/apps/TestingCamera/src/com/android/testingcamera/TestingCamera.java
@@ -34,7 +34,6 @@ import android.os.Bundle;
 import android.os.Environment;
 import android.os.Handler;
 import android.os.SystemClock;
-import android.view.OrientationEventListener;
 import android.view.View;
 import android.view.Surface;
 import android.view.SurfaceHolder;
@@ -180,7 +179,6 @@ public class TestingCamera extends Activity
     private static final int PERMISSIONS_REQUEST_CAMERA = 1;
     private static final int PERMISSIONS_REQUEST_RECORDING = 2;
     static final int PERMISSIONS_REQUEST_SNAPSHOT = 3;
-    private OrientationEventHandler mOrientationHandler;

     /** Activity lifecycle */

@@ -333,34 +331,6 @@ public class TestingCamera extends Activity
         }

         mRS = RenderScript.create(this);
-
-        mOrientationHandler = new OrientationEventHandler(this);
-    }
-
-    private static class OrientationEventHandler extends OrientationEventListener {
-        private TestingCamera mActivity;
-        private int mCurrentRotation = -1;
-        OrientationEventHandler(TestingCamera activity) {
-            super(activity);
-            mActivity = activity;
-        }
-
-        @Override
-        public void onOrientationChanged(int orientation) {
-            if (mActivity != null) {
-                int rotation = mActivity.getWindowManager().getDefaultDisplay().getRotation();
-                if (mCurrentRotation != rotation) {
-                    mCurrentRotation = rotation;
-                    mActivity.runOnUiThread(new Runnable() {
-                        @Override
-                        public void run() {
-                            mActivity.setCameraDisplayOrientation();
-                            mActivity.resizePreview();
-                        }
-                    });
-                }
-            }
-        }
     }

     @Override
@@ -368,7 +338,6 @@ public class TestingCamera extends Activity
         super.onResume();
         log("onResume: Setting up");
         setUpCamera();
-        mOrientationHandler.enable();
     }

     @Override
@@ -392,7 +361,6 @@ public class TestingCamera extends Activity
             }
             mState = CAMERA_UNINITIALIZED;
         }
-        mOrientationHandler.disable();
     }

     @Override
@@ -450,7 +418,7 @@ public class TestingCamera extends Activity
                 }
             }

-            if (mPreviewHolder != null || mState == CAMERA_UNINITIALIZED) {
+            if (mPreviewHolder != null) {
                 return;
             }
             log("Surface holder available: " + width + " x " + height);
@@ -1429,33 +1397,8 @@ public class TestingCamera extends Activity
     }

     void layoutPreview() {
-        int rotation = getWindowManager().getDefaultDisplay().getRotation();
         int width = mPreviewSizes.get(mPreviewSize).width;
         int height = mPreviewSizes.get(mPreviewSize).height;
-        switch (rotation) {
-            case Surface.ROTATION_0:
-            case Surface.ROTATION_180:
-                // Portrait
-                // Switch the preview size so that the longer edge aligns with the taller
-                // dimension.
-                if (width > height) {
-                    int tmp = height;
-                    height = width;
-                    width = tmp;
-                }
-                break;
-            case Surface.ROTATION_90:
-            case Surface.ROTATION_270:
-                // Landscape
-                // Possibly somewhat unlikely case but we should try to handle it too.
-                if (height > width) {
-                    int tmp = height;
-                    height = width;
-                    width = tmp;
-                }
-                break;
-        }
-
         float previewAspect = ((float) width) / height;

         int viewHeight = mPreviewView.getHeight();
@@ -1468,8 +1411,6 @@ public class TestingCamera extends Activity
         }
         mPreviewView.setLayoutParams(
                 new LayoutParams(viewWidth, viewHeight));
-        log("Setting layout params viewWidth: " + viewWidth + " viewHeight: " + viewHeight +
-                " display rotation: " + rotation);

         if (mCallbacksEnabled) {
             int callbackHeight = mCallbackView.getHeight();
--
2.21.0
