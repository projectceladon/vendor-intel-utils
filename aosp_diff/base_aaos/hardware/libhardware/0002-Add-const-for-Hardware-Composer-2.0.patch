From 0363b98d6804f23ea8b7b1d80e2e4752e339586c Mon Sep 17 00:00:00 2001
From: zhonghuis <zhonghui.shi@intel.com>
Date: Mon, 26 Feb 2024 15:26:16 +0000
Subject: [PATCH] Add const for Hardware Composer 2.0

Signed-off-by: zhonghuis <zhonghui.shi@intel.com>
---
 include/hardware/hwcomposer2.h | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/include/hardware/hwcomposer2.h b/include/hardware/hwcomposer2.h
index 76122a57..bae48f5d 100644
--- a/include/hardware/hwcomposer2.h
+++ b/include/hardware/hwcomposer2.h
@@ -260,6 +260,7 @@ typedef enum {
     HWC2_FUNCTION_SET_CLIENT_TARGET,
     HWC2_FUNCTION_SET_COLOR_MODE,
     HWC2_FUNCTION_SET_COLOR_TRANSFORM,
+    HWC2_FUNCTION_SET_COLOR_TRANSFORM_CORRECTION,
     HWC2_FUNCTION_SET_CURSOR_POSITION,
     HWC2_FUNCTION_SET_LAYER_BLEND_MODE,
     HWC2_FUNCTION_SET_LAYER_BUFFER,
@@ -617,6 +618,7 @@ static inline const char* getFunctionDescriptorName(
         case HWC2_FUNCTION_SET_CLIENT_TARGET: return "SetClientTarget";
         case HWC2_FUNCTION_SET_COLOR_MODE: return "SetColorMode";
         case HWC2_FUNCTION_SET_COLOR_TRANSFORM: return "SetColorTransform";
+        case HWC2_FUNCTION_SET_COLOR_TRANSFORM_CORRECTION: return "SetColorTransformCorrection";
         case HWC2_FUNCTION_SET_CURSOR_POSITION: return "SetCursorPosition";
         case HWC2_FUNCTION_SET_LAYER_BLEND_MODE: return "SetLayerBlendMode";
         case HWC2_FUNCTION_SET_LAYER_BUFFER: return "SetLayerBuffer";
@@ -902,6 +904,7 @@ enum class FunctionDescriptor : int32_t {
     SetClientTarget = HWC2_FUNCTION_SET_CLIENT_TARGET,
     SetColorMode = HWC2_FUNCTION_SET_COLOR_MODE,
     SetColorTransform = HWC2_FUNCTION_SET_COLOR_TRANSFORM,
+    SetColorTransformCorrection = HWC2_FUNCTION_SET_COLOR_TRANSFORM_CORRECTION,
     SetCursorPosition = HWC2_FUNCTION_SET_CURSOR_POSITION,
     SetLayerBlendMode = HWC2_FUNCTION_SET_LAYER_BLEND_MODE,
     SetLayerBuffer = HWC2_FUNCTION_SET_LAYER_BUFFER,
@@ -2003,6 +2006,31 @@ typedef int32_t /*hwc2_error_t*/ (*HWC2_PFN_SET_COLOR_TRANSFORM)(
         hwc2_device_t* device, hwc2_display_t display, const float* matrix,
         int32_t /*android_color_transform_t*/ hint);
 
+/* setColorTransformCorrection(..., contrast, luminance)
+ * Descriptor: HWC2_FUNCTION_SET_COLOR_TRANSFORM
+ * Must be provided by all HWC2 devices
+ *
+ * Sets a color transform which will be applied after composition.
+ *
+ * If the device is not capable of using the value to apply
+ * the desired color transform, it should force all layers to client composition
+ * during validateDisplay.
+ *
+ * If HWC2_CAPABILITY_SKIP_CLIENT_COLOR_TRANSFORM is present, then the client
+ * will never apply the color transform during client composition, even if all
+ * layers are being composed by the client.
+ *
+ * Parameters:
+ *   contrast - an integer representing the transform contrast
+ *   luminance - an integer representing the transform luminance
+ *
+ * Returns HWC2_ERROR_NONE or one of the following errors:
+ *   HWC2_ERROR_BAD_DISPLAY - an invalid display handle was passed in
+ *   HWC2_ERROR_BAD_PARAMETER - hint is not a valid color transform hint
+ */
+typedef int32_t /*hwc2_error_t*/ (*HWC2_PFN_SET_COLOR_TRANSFORM_CORRECTION)(
+        hwc2_device_t* device, hwc2_display_t display, int32_t contrast, int32_t luminance);
+
 /* getPerFrameMetadataKeys(..., outKeys)
  * Descriptor: HWC2_FUNCTION_GET_PER_FRAME_METADATA_KEYS
  * Optional for HWC2 devices
-- 
2.34.1

