From e419ada191e1e5f51a0aa9a1a89d078044d0cd4e Mon Sep 17 00:00:00 2001
From: Ankit Agrawal <ankit.agarwal@intel.com>
Date: Mon, 2 Sep 2024 21:16:57 +0530
Subject: [PATCH] Allow modification of Vehicle HAL properties.

When "persist.vendor.emulate.vehiclehal" is set to false, the code
checks the access permissions. If the property does not have write
access, it returns an ACCESS_DENIED status.

When persist.vendor.emulate.vehiclehal is set to true, the code
allows writing to Vehicle HAL properties.

Test
  Ex: adb shell setprop persist.vendor.emulate.vehiclehal true
      dumpsys car_service set-property-value <prop-Id> <area Id> value.
      dumpsys car_service set-property-value 0x11400400 0x11400400 4

Tracked-On: OAM-124179
Signed-off-by: Vilas R K <vilas.r.k@intel.com>
Signed-off-by: Ankit Agrawal <ankit.agarwal@intel.com>
---
 .../aidl/impl/vhal/src/DefaultVehicleHal.cpp  | 26 ++++++++++++-------
 1 file changed, 17 insertions(+), 9 deletions(-)

diff --git a/automotive/vehicle/aidl/impl/vhal/src/DefaultVehicleHal.cpp b/automotive/vehicle/aidl/impl/vhal/src/DefaultVehicleHal.cpp
index 9dc039df13..069173952c 100644
--- a/automotive/vehicle/aidl/impl/vhal/src/DefaultVehicleHal.cpp
+++ b/automotive/vehicle/aidl/impl/vhal/src/DefaultVehicleHal.cpp
@@ -33,6 +33,8 @@
 #include <utils/SystemClock.h>
 #include <utils/Trace.h>
 
+#include <cutils/properties.h>
+
 #include <inttypes.h>
 #include <chrono>
 #include <set>
@@ -891,17 +893,23 @@ VhalResult<void> DefaultVehicleHal::checkPermissionHelper(
         return StatusError(StatusCode::INVALID_ARG) << getErrorMsg(result);
     }
 
-    const VehiclePropConfig* config = result.value();
-    const VehicleAreaConfig* areaConfig = getAreaConfig(value, *config);
+    if(!property_get_bool("persist.vendor.emulate.vehiclehal", false)) {
+        ALOGE("Vehicle HAL Properties  Not allowed to write");
+        const VehiclePropConfig* config = result.value();
+        const VehicleAreaConfig* areaConfig = getAreaConfig(value, *config);
 
-    if (areaConfig == nullptr && !isGlobalProp(propId)) {
-        return StatusError(StatusCode::INVALID_ARG) << "no config for area ID: " << value.areaId;
+        if (areaConfig == nullptr && !isGlobalProp(propId)) {
+            return StatusError(StatusCode::INVALID_ARG) << "no config for area ID: " << value.areaId;
+        }
+        if (!hasRequiredAccess(config->access, accessToTest) &&
+            (areaConfig == nullptr || !hasRequiredAccess(areaConfig->access, accessToTest))) {
+            return StatusError(StatusCode::ACCESS_DENIED)
+                   << StringPrintf("Property %" PRId32 " does not have the following access: %" PRId32,
+                                   propId, static_cast<int32_t>(accessToTest));
+        }
     }
-    if (!hasRequiredAccess(config->access, accessToTest) &&
-        (areaConfig == nullptr || !hasRequiredAccess(areaConfig->access, accessToTest))) {
-        return StatusError(StatusCode::ACCESS_DENIED)
-               << StringPrintf("Property %" PRId32 " does not have the following access: %" PRId32,
-                               propId, static_cast<int32_t>(accessToTest));
+    else {
+        ALOGE("Vehicle HAL Properties allowd to write");
     }
     return {};
 }
-- 
2.34.1

