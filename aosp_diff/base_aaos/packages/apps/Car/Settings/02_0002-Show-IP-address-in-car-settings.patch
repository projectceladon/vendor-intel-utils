From 3ee666854c28102cc2fcd3cd23497141adf0cc4e Mon Sep 17 00:00:00 2001
From: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Date: Mon, 19 Sep 2022 16:52:53 +0530
Subject: [PATCH] Show IP address in car settings

IP address is not show in car settings "About" section.
Add Preference Controller for showing host IP address.

Tracked-On: OAM-103691
Signed-off-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
---
 res/values/overlayable.xml                    |  1 +
 res/values/preference_keys.xml                |  1 +
 res/values/strings.xml                        |  2 +
 res/xml/about_settings_fragment.xml           |  5 ++
 .../system/IpAddressPreferenceController.java | 84 +++++++++++++++++++
 5 files changed, 93 insertions(+)
 create mode 100644 src/com/android/car/settings/system/IpAddressPreferenceController.java

diff --git a/res/values/overlayable.xml b/res/values/overlayable.xml
index 5746ecc61..99ce7bc63 100644
--- a/res/values/overlayable.xml
+++ b/res/values/overlayable.xml
@@ -654,6 +654,7 @@ REGENERATE USING packages/apps/Car/tests/tools/rro/generate-overlayable.py
       <item type="string" name="bluetooth_enter_pin_other_device"/>
       <item type="string" name="bluetooth_error_title"/>
       <item type="string" name="bluetooth_mac_address"/>
+      <item type="string" name="ip_address"/>
       <item type="string" name="bluetooth_my_devices"/>
       <item type="string" name="bluetooth_name"/>
       <item type="string" name="bluetooth_notif_message"/>
diff --git a/res/values/preference_keys.xml b/res/values/preference_keys.xml
index e808d194b..f18097005 100644
--- a/res/values/preference_keys.xml
+++ b/res/values/preference_keys.xml
@@ -443,6 +443,7 @@
     <string name="pk_regulatory_labels" translatable="false">regulatory_labels</string>
     <string name="pk_about_bluetooth_mac_address" translatable="false">about_bluetooth_mac_address
     </string>
+    <string name="pk_ip_address" translatable="false">about_ip_address</string>
 
     <!-- Hardware Info -->
     <string name="pk_hardware_info_device_model" translatable="false">hardware_info_device_model
diff --git a/res/values/strings.xml b/res/values/strings.xml
index 833ac0814..7f5f8665d 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -869,6 +869,8 @@
     <string name="build_number">Build number</string>
     <!-- About phone screen,  setting option name  [CHAR LIMIT=40] -->
     <string name="bluetooth_mac_address">Bluetooth address</string>
+    <!-- About phone screen,  setting option name  [CHAR LIMIT=40] -->
+    <string name="ip_address">IP address</string>
 
     <!-- About phone screen, show when a value of some status item is unavailable. -->
     <string name="device_info_not_available">Not available</string>
diff --git a/res/xml/about_settings_fragment.xml b/res/xml/about_settings_fragment.xml
index a67234dc8..50cbe3b3c 100644
--- a/res/xml/about_settings_fragment.xml
+++ b/res/xml/about_settings_fragment.xml
@@ -45,6 +45,11 @@
         android:title="@string/build_number"
         settings:controller="com.android.car.settings.system.BuildNumberPreferenceController"
         settings:showChevron="false"/>
+    <com.android.car.ui.preference.CarUiPreference
+        android:key="@string/pk_ip_address"
+        android:title="@string/ip_address"
+        settings:controller="com.android.car.settings.system.IpAddressPreferenceController"
+        settings:showChevron="false"/>
     <Preference
         android:key="@string/pk_regulatory_labels"
         android:title="@string/regulatory_labels"
diff --git a/src/com/android/car/settings/system/IpAddressPreferenceController.java b/src/com/android/car/settings/system/IpAddressPreferenceController.java
new file mode 100644
index 000000000..15a47734a
--- /dev/null
+++ b/src/com/android/car/settings/system/IpAddressPreferenceController.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.car.settings.system;
+
+import android.car.drivingstate.CarUxRestrictions;
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.widget.Toast;
+
+import androidx.annotation.VisibleForTesting;
+import androidx.preference.Preference;
+
+import com.android.car.settings.common.FragmentController;
+import com.android.car.settings.common.PreferenceController;
+
+import java.util.Collections;
+import java.util.List;
+import java.net.NetworkInterface;
+import java.net.InetAddress;
+
+/** Updates the vehicle ip address. */
+public class IpAddressPreferenceController extends
+        PreferenceController<Preference> {
+
+    public IpAddressPreferenceController(Context context, String preferenceKey,
+            FragmentController fragmentController, CarUxRestrictions uxRestrictions) {
+        super(context, preferenceKey, fragmentController, uxRestrictions);
+    }
+
+    @Override
+    protected Class<Preference> getPreferenceType() {
+        return Preference.class;
+    }
+
+    @Override
+    protected int getAvailabilityStatus() {
+        return AVAILABLE_FOR_VIEWING;
+    }
+
+    public static String getIPAddress(boolean useIPv4) {
+        try {
+            List<NetworkInterface> interfaces = Collections.list(NetworkInterface.getNetworkInterfaces());
+            for (NetworkInterface intf : interfaces) {
+                List<InetAddress> addrs = Collections.list(intf.getInetAddresses());
+                for (InetAddress addr : addrs) {
+                    if (!addr.isLoopbackAddress()) {
+                        String sAddr = addr.getHostAddress();
+                        //boolean isIPv4 = InetAddressUtils.isIPv4Address(sAddr);
+                        boolean isIPv4 = sAddr.indexOf(':')<0;
+                        if (useIPv4) {
+                            if (isIPv4)
+                                return sAddr;
+                        } else {
+                            if (!isIPv4) {
+                                int delim = sAddr.indexOf('%'); // drop ip6 zone suffix
+                                return delim<0 ? sAddr.toUpperCase() : sAddr.substring(0, delim).toUpperCase();
+                            }
+                        }
+                    }
+                }
+            }
+        } catch (Exception ex) { }
+        return "";
+    }
+
+    @Override
+    protected void updateState(Preference preference) {
+        preference.setSummary(getIPAddress(true));
+    }
+}
-- 
2.17.1

