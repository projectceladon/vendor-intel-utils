From 8f382292369f07801dd8f84e82ba80e6195eb0f4 Mon Sep 17 00:00:00 2001
From: Raphael Kim <raphk@google.com>
Date: Thu, 5 May 2022 12:01:15 +0000
Subject: [PATCH] Extract app label from component name in notification access
 confirmation UI

Bug: 228178437
Test: atest CarSettingsUnitTests:NotificationAccessConfirmationActivityTest
Change-Id: Ia4fc54d922093f55c50d9d69f11c3da0779de5e5
Merged-In: Ia4fc54d922093f55c50d9d69f11c3da0779de5e5
(cherry picked from commit c88bcf75ff1314aade09d3f78eb8e3b95c725ce0)
Merged-In: Ia4fc54d922093f55c50d9d69f11c3da0779de5e5
---
 ...otificationAccessConfirmationActivity.java | 33 ++++++++---
 ...icationAccessConfirmationActivityTest.java | 58 ++++++++++++-------
 2 files changed, 63 insertions(+), 28 deletions(-)

diff --git a/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivity.java b/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivity.java
index 69f173db..e47f59b0 100644
--- a/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivity.java
+++ b/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivity.java
@@ -19,12 +19,13 @@ package com.android.car.settings.notifications;
 
 
 import static com.android.internal.notification.NotificationAccessConfirmationActivityContract.EXTRA_COMPONENT_NAME;
-import static com.android.internal.notification.NotificationAccessConfirmationActivityContract.EXTRA_PACKAGE_TITLE;
 
 import android.Manifest;
 import android.annotation.Nullable;
 import android.app.NotificationManager;
 import android.content.ComponentName;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageItemInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.ServiceInfo;
 import android.os.Bundle;
@@ -66,21 +67,39 @@ public class NotificationAccessConfirmationActivity extends FragmentActivity {
                 mRejectListener,
                 /* neutralListener= */ null);
 
-
         mComponentName = getIntent().getParcelableExtra(EXTRA_COMPONENT_NAME);
-        String pkgTitle = getIntent().getStringExtra(EXTRA_PACKAGE_TITLE);
-        if (TextUtils.isEmpty(pkgTitle)) {
-            LOG.e(EXTRA_PACKAGE_TITLE + " is empty");
+        CharSequence mAppLabel;
+
+        if (mComponentName == null || mComponentName.getPackageName() == null) {
             finish();
+            return;
+        }
+
+        try {
+            ApplicationInfo applicationInfo = getPackageManager().getApplicationInfo(
+                    mComponentName.getPackageName(), 0);
+            mAppLabel = applicationInfo.loadSafeLabel(getPackageManager(),
+                    PackageItemInfo.DEFAULT_MAX_LABEL_SIZE_PX,
+                    PackageItemInfo.SAFE_LABEL_FLAG_TRIM
+                            | PackageItemInfo.SAFE_LABEL_FLAG_FIRST_LINE);
+        } catch (PackageManager.NameNotFoundException e) {
+            LOG.e("Couldn't find app with package name for " + mComponentName, e);
+            finish();
+            return;
+        }
+
+        if (TextUtils.isEmpty(mAppLabel)) {
+            finish();
+            return;
         }
 
         ConfirmationDialogFragment confirmationDialogFragment =
                 new ConfirmationDialogFragment.Builder(this)
                         .setTitle(getString(R.string.notification_listener_security_warning_title,
-                                pkgTitle))
+                                mAppLabel))
                         .setMessage(
                                 getString(R.string.notification_listener_security_warning_summary,
-                                        pkgTitle))
+                                        mAppLabel))
                         .setPositiveButton(R.string.allow, mConfirmListener)
                         .setNegativeButton(R.string.deny, mRejectListener)
                         .build();
diff --git a/tests/unit/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivityTest.java b/tests/unit/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivityTest.java
index 7ead8cd0..da9f9d25 100644
--- a/tests/unit/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivityTest.java
+++ b/tests/unit/src/com/android/car/settings/notifications/NotificationAccessConfirmationActivityTest.java
@@ -17,10 +17,10 @@
 package com.android.car.settings.notifications;
 
 import static com.android.internal.notification.NotificationAccessConfirmationActivityContract.EXTRA_COMPONENT_NAME;
-import static com.android.internal.notification.NotificationAccessConfirmationActivityContract.EXTRA_PACKAGE_TITLE;
 
 import static com.google.common.truth.Truth.assertThat;
 
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.doReturn;
 import static org.mockito.Mockito.eq;
 import static org.mockito.Mockito.spy;
@@ -34,6 +34,7 @@ import android.content.ComponentName;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.ServiceInfo;
 
@@ -75,31 +76,35 @@ public final class NotificationAccessConfirmationActivityTest {
         return info;
     }
 
+    private static ApplicationInfo createApplicationInfo() {
+        ApplicationInfo info = new ApplicationInfo();
+        info.name = TEMP_COMPONENT_NAME.getClassName();
+        info.packageName = TEMP_COMPONENT_NAME.getPackageName();
+        return info;
+    }
+
     @Before
     public void setup() {
         MockitoAnnotations.initMocks(this);
     }
 
     @Test
-    public void packageTitleEmpty_finishes() {
-        Intent intent = new Intent(mContext, TestActivity.class)
-                .putExtra(EXTRA_COMPONENT_NAME, TEMP_COMPONENT_NAME);
+    public void componentNameEmpty_finishes() {
+        Intent intent = new Intent(mContext, TestActivity.class);
         mActivityScenario = ActivityScenario.launch(intent);
-
         assertThat(mActivityScenario.getState()).isEqualTo(Lifecycle.State.DESTROYED);
     }
 
     @Test
-    public void packageTitleNonEmpty_showsConfirmationDialog() {
+    public void componentNameNonEmpty_showsConfirmationDialog() {
         launchActivityWithValidIntent();
-
-        assertThat(mActivityScenario.getState()).isEqualTo(Lifecycle.State.RESUMED);
+        assertThat(mActivityScenario.getState()).isAtLeast(Lifecycle.State.CREATED);
     }
 
     @Test
     public void onAllow_permissionMissing_finishes() throws Exception {
         launchActivityWithValidIntent();
-        assertThat(mActivityScenario.getState()).isEqualTo(Lifecycle.State.RESUMED);
+        assertThat(mActivityScenario.getState()).isAtLeast(Lifecycle.State.CREATED);
         ServiceInfo info = createServiceInfoForTempComponent(/* permission = */ "");
         doReturn(info).when(mPackageManager).getServiceInfo(info.getComponentName(), 0);
 
@@ -116,7 +121,7 @@ public final class NotificationAccessConfirmationActivityTest {
     @Test
     public void onAllow_permissionAvailable_callsNotificationManager() throws Exception {
         launchActivityWithValidIntent();
-        assertThat(mActivityScenario.getState()).isEqualTo(Lifecycle.State.RESUMED);
+        assertThat(mActivityScenario.getState()).isAtLeast(Lifecycle.State.CREATED);
         ServiceInfo info = createServiceInfoForTempComponent(
                 Manifest.permission.BIND_NOTIFICATION_LISTENER_SERVICE);
         doReturn(info).when(mPackageManager).getServiceInfo(info.getComponentName(), 0);
@@ -133,7 +138,7 @@ public final class NotificationAccessConfirmationActivityTest {
     @Test
     public void onDeny_finishes() throws Exception {
         launchActivityWithValidIntent();
-        assertThat(mActivityScenario.getState()).isEqualTo(Lifecycle.State.RESUMED);
+        assertThat(mActivityScenario.getState()).isAtLeast(Lifecycle.State.CREATED);
 
         AndroidMockitoHelper.syncRunOnUiThread(mActivity, () -> {
             getConfirmationDialog().getButton(DialogInterface.BUTTON_NEGATIVE).performClick();
@@ -153,16 +158,14 @@ public final class NotificationAccessConfirmationActivityTest {
 
     private void launchActivityWithValidIntent() {
         Intent intent = new Intent(mContext, TestActivity.class)
-                .putExtra(EXTRA_COMPONENT_NAME, TEMP_COMPONENT_NAME)
-                .putExtra(EXTRA_PACKAGE_TITLE, "my_package_title");
+                .putExtra(EXTRA_COMPONENT_NAME, TEMP_COMPONENT_NAME);
 
         mActivityScenario = ActivityScenario.launch(intent);
         mActivityScenario.onActivity(
                 activity -> {
                     mActivity = activity;
-                    mPackageManager = spy(mActivity.getPackageManager());
-                    mNotificationManager = spy(
-                            mActivity.getSystemService(NotificationManager.class));
+                    mPackageManager = mActivity.getPackageManager();
+                    mNotificationManager = mActivity.getSystemService(NotificationManager.class);
                     mActivity.setPackageManagerSpy(mPackageManager);
                     mActivity.setNotificationManagerSpy(mNotificationManager);
                 });
@@ -183,15 +186,28 @@ public final class NotificationAccessConfirmationActivityTest {
 
         @Override
         public PackageManager getPackageManager() {
-            return mPackageManagerSpy != null ? mPackageManagerSpy : super.getPackageManager();
+            if (mPackageManagerSpy == null) {
+                mPackageManagerSpy = spy(super.getPackageManager());
+                try {
+                    ApplicationInfo info = createApplicationInfo();
+                    doReturn(info).when(mPackageManagerSpy).getApplicationInfo(any(), any());
+                } catch (PackageManager.NameNotFoundException e) {
+                    // do nothing... tests will fail when activity finishes during onCreate()
+                }
+            }
+            return mPackageManagerSpy;
         }
 
         @Override
         public Object getSystemService(String name) {
-            return mNotificationManagerSpy != null
-                    && name.toLowerCase(Locale.ROOT).contains("notification")
-                    ? mNotificationManagerSpy
-                    : super.getSystemService(name);
+            if (!name.toLowerCase(Locale.ROOT).contains("notification")) {
+                return super.getSystemService(name);
+            }
+
+            if (mNotificationManagerSpy == null) {
+                mNotificationManagerSpy = spy(super.getSystemService(NotificationManager.class));
+            }
+            return mNotificationManagerSpy;
         }
 
         @Override
-- 
2.37.1.359.gd136c6c3e2-goog

