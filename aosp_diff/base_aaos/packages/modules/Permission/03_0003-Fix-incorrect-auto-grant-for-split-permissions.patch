From 070bc0cd7efd21f2f7ad7fd67e1722ad7695a8c5 Mon Sep 17 00:00:00 2001
From: Manjeet Rulhania <mrulhania@google.com>
Date: Tue, 19 Apr 2022 19:44:46 +0000
Subject: [PATCH] Fix incorrect auto grant for split permissions

When an app requests a permission, pc should should disregard
granted permissions with REVOKE_WHEN_REQUESTED flag in the group to
determine auto granting.

Bug: 223907044
Test: SplitPermissionAutoGrantTest
Change-Id: Id8e51203af6cd599c8cc6aea1259662581d17b6b
Merged-In: I4267a85c5a1f5a6162a99ccacb0448ae382fe9ed
(cherry picked from commit 8dbba56c6fe90f5559bdcfccd70594efcbba61b6)
Merged-In: Id8e51203af6cd599c8cc6aea1259662581d17b6b
---
 .../model/livedatatypes/LightAppPermGroup.kt           |  7 +++++++
 .../permission/model/livedatatypes/LightPermission.kt  |  1 +
 .../permission/ui/model/GrantPermissionsViewModel.kt   | 10 ++++++----
 3 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightAppPermGroup.kt b/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightAppPermGroup.kt
index 3fb09607b..cbfac4b24 100644
--- a/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightAppPermGroup.kt
+++ b/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightAppPermGroup.kt
@@ -164,6 +164,13 @@ data class LightAppPermGroup(
          */
         val isGranted = specialLocationGrant ?: permissions.any { it.value.isGrantedIncludingAppOp }
 
+        /**
+         * Whether any of this App Permission SubGroup's permissions are granted excluding
+         * auto granted permissions during install time with flag RevokeWhenRequested
+         */
+        val isGrantedExcludeRevokeWhenRequestedPermissions = specialLocationGrant ?: permissions
+            .any { it.value.isGrantedIncludingAppOp && !it.value.isRevokeWhenRequested }
+
         /**
          * Whether any of this App Permission SubGroup's permissions are granted by default
          */
diff --git a/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightPermission.kt b/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightPermission.kt
index 745c5c2fd..c3d087fd2 100644
--- a/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightPermission.kt
+++ b/PermissionController/src/com/android/permissioncontroller/permission/model/livedatatypes/LightPermission.kt
@@ -113,6 +113,7 @@ data class LightPermission(
         if (isSystemFixed) append(", SystemFixed")
         if (isUserFixed) append(", UserFixed")
         if (isUserSet) append(", UserSet")
+        if (isRevokeWhenRequested) append(", RevokeWhenRequested")
         if (isCompatRevoked) append(", CompatRevoked")
         if (isReviewRequired) append(", ReviewRequired")
         if (isOneTime) append(", OneTime")
diff --git a/PermissionController/src/com/android/permissioncontroller/permission/ui/model/GrantPermissionsViewModel.kt b/PermissionController/src/com/android/permissioncontroller/permission/ui/model/GrantPermissionsViewModel.kt
index 7fac5bad7..23cce17ad 100644
--- a/PermissionController/src/com/android/permissioncontroller/permission/ui/model/GrantPermissionsViewModel.kt
+++ b/PermissionController/src/com/android/permissioncontroller/permission/ui/model/GrantPermissionsViewModel.kt
@@ -237,7 +237,8 @@ class GrantPermissionsViewModel(
                     // some requests might have been granted, check for that
                     for ((key, state) in states) {
                         val allAffectedGranted = state.affectedPermissions.all { perm ->
-                            appPermGroup.permissions[perm]?.isGrantedIncludingAppOp == true
+                            appPermGroup.permissions[perm]?.isGrantedIncludingAppOp == true &&
+                                appPermGroup.permissions[perm]?.isRevokeWhenRequested == false
                         }
                         if (allAffectedGranted) {
                             groupStates[key]!!.state = STATE_ALLOWED
@@ -647,7 +648,8 @@ class GrantPermissionsViewModel(
 
         // Do not attempt to grant background access if foreground access is not either already
         // granted or requested
-        if (isBackground && !group.foreground.isGranted && !hasForegroundRequest) {
+        if (isBackground && !group.foreground.isGrantedExcludeRevokeWhenRequestedPermissions &&
+            !hasForegroundRequest) {
             Log.w(LOG_TAG, "Cannot grant $perm as the matching foreground permission is not " +
                 "already granted.")
             val affectedPermissions = groupRequestedPermissions.filter {
@@ -658,8 +660,8 @@ class GrantPermissionsViewModel(
             return STATE_SKIPPED
         }
 
-        if (isBackground && group.background.isGranted ||
-            !isBackground && group.foreground.isGranted) {
+        if (isBackground && group.background.isGrantedExcludeRevokeWhenRequestedPermissions ||
+            !isBackground && group.foreground.isGrantedExcludeRevokeWhenRequestedPermissions) {
             // If FINE location is not granted, do not grant it automatically when COARSE
             // location is already granted.
             if (group.permGroupName == LOCATION &&
-- 
2.36.1.476.g0c4daa206d-goog

