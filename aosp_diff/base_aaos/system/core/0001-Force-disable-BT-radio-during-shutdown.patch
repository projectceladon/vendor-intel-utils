From 90e1f4970f1383c059d17b3ede6681f9666253d0 Mon Sep 17 00:00:00 2001
From: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Date: Thu, 7 Nov 2024 00:59:40 +0530
Subject: [PATCH] Force disable BT radio during shutdown

Signed-off-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
---
 init/init.cpp | 47 ++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 46 insertions(+), 1 deletion(-)

diff --git a/init/init.cpp b/init/init.cpp
index da63fdc3b..6831abb62 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -30,6 +30,9 @@
 #include <sys/utsname.h>
 #include <unistd.h>
 
+#include <stdio.h>
+#include <errno.h>
+
 #define _REALLY_INCLUDE_SYS__SYSTEM_PROPERTIES_H_
 #include <sys/_system_properties.h>
 
@@ -97,6 +100,9 @@
 #include "com_android_apex.h"
 #endif  // RECOVERY
 
+#define RFKILL_TYPE_BLUETOOTH 2
+#define RFKILL_OP_CHANGE_ALL 3
+
 using namespace std::chrono_literals;
 using namespace std::string_literals;
 
@@ -128,6 +134,13 @@ struct PendingControlMessage {
 static std::mutex pending_control_messages_lock;
 static std::queue<PendingControlMessage> pending_control_messages;
 
+struct rfkill_event {
+  uint32_t idx;
+  uint8_t type;
+  uint8_t op;
+  uint8_t soft, hard;
+} __attribute__((packed));
+
 // Init epolls various FDs to wait for various inputs.  It previously waited on property changes
 // with a blocking socket that contained the information related to the change, however, it was easy
 // to fill that socket and deadlock the system.  Now we use locks to handle the property changes
@@ -909,6 +922,36 @@ static Result<void> ConnectEarlyStageSnapuserdAction(const BuiltinArguments& arg
     return {};
 }
 
+static int bt_vendor_rfkill(int block) {
+    struct rfkill_event event;
+    int fd;
+
+    LOG(INFO) << "bt_vendor_rfkill";
+
+    fd = open("/dev/rfkill", O_WRONLY);
+    if (fd < 0) {
+      LOG(INFO) << "Unable to open /dev/rfkill";
+      return -1;
+    }
+
+    memset(&event, 0, sizeof(struct rfkill_event));
+    event.op = RFKILL_OP_CHANGE_ALL;
+    event.type = RFKILL_TYPE_BLUETOOTH;
+    event.hard = block;
+    event.soft = block;
+
+    ssize_t len;
+    len = write(fd, &event, sizeof(event));
+    if (len < 0) {
+      LOG(INFO) << "Failed to change rfkill state";
+      close(fd);
+      return 1;
+    }
+
+    close(fd);
+    return 0;
+}
+
 int SecondStageMain(int argc, char** argv) {
     if (REBOOT_BOOTLOADER_ON_PANIC) {
         InstallRebootSignalHandlers();
@@ -1096,8 +1139,10 @@ int SecondStageMain(int argc, char** argv) {
 
         auto shutdown_command = shutdown_state.CheckShutdown();
         if (shutdown_command) {
-            LOG(INFO) << "Got shutdown_command '" << *shutdown_command
+            LOG(INFO) << "GAB Got shutdown_command , do rfkill'" << *shutdown_command
                       << "' Calling HandlePowerctlMessage()";
+
+	    bt_vendor_rfkill(1);
             HandlePowerctlMessage(*shutdown_command);
         }
 
-- 
2.17.1

