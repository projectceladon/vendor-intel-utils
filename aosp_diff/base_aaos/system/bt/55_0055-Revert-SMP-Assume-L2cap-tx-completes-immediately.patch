From d456a2a6ca40797ea961745c27b3556ce14fefeb Mon Sep 17 00:00:00 2001
From: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Date: Tue, 20 Feb 2024 12:39:05 +0530
Subject: [PATCH] Revert "SMP: Assume L2cap tx completes immediately"

This reverts commit 8326b49c4cf83b747dcaf4b69f8040db1db5d09e.

The assumption in the original CL "L2cap tx completes immediately"
seems to be incorrect.

Tracked-On: OAM-112831
Signed-off-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
---
 stack/smp/smp_l2c.cc   | 19 ++++++++++++++++++-
 stack/smp/smp_utils.cc | 16 +++-------------
 2 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/stack/smp/smp_l2c.cc b/stack/smp/smp_l2c.cc
index e73b8dd00..4eff4ceec 100644
--- a/stack/smp/smp_l2c.cc
+++ b/stack/smp/smp_l2c.cc
@@ -225,7 +225,24 @@ static void smp_data_received(uint16_t channel, const RawAddress& bd_addr,
  * Description      SMP channel tx complete callback
  *
  ******************************************************************************/
-static void smp_tx_complete_callback(uint16_t cid, uint16_t num_pkt) {}
+static void smp_tx_complete_callback(uint16_t cid, uint16_t num_pkt) {
+  tSMP_CB* p_cb = &smp_cb;
+
+  if (p_cb->total_tx_unacked >= num_pkt)
+    p_cb->total_tx_unacked -= num_pkt;
+  else
+    SMP_TRACE_ERROR("Unexpected %s: num_pkt = %d", __func__, num_pkt);
+
+  if (p_cb->total_tx_unacked == 0 && p_cb->wait_for_authorization_complete) {
+    tSMP_INT_DATA smp_int_data;
+    smp_int_data.status = SMP_SUCCESS;
+    if (cid == L2CAP_SMP_CID) {
+      smp_sm_event(p_cb, SMP_AUTH_CMPL_EVT, &smp_int_data);
+    } else {
+      smp_br_state_machine_event(p_cb, SMP_BR_AUTH_CMPL_EVT, &smp_int_data);
+    }
+  }
+}
 
 /*******************************************************************************
  *
diff --git a/stack/smp/smp_utils.cc b/stack/smp/smp_utils.cc
index 54d4aeba4..1c16b5013 100644
--- a/stack/smp/smp_utils.cc
+++ b/stack/smp/smp_utils.cc
@@ -341,28 +341,18 @@ bool smp_send_msg_to_L2CAP(const RawAddress& rem_bda, BT_HDR* p_toL2CAP) {
   }
 
   SMP_TRACE_EVENT("%s", __func__);
+  smp_cb.total_tx_unacked += 1;
 
   smp_log_metrics(rem_bda, true /* outgoing */,
                   p_toL2CAP->data + p_toL2CAP->offset, p_toL2CAP->len);
 
   l2cap_ret = L2CA_SendFixedChnlData(fixed_cid, rem_bda, p_toL2CAP);
   if (l2cap_ret == L2CAP_DW_FAILED) {
+    smp_cb.total_tx_unacked -= 1;
     SMP_TRACE_ERROR("SMP failed to pass msg to L2CAP");
     return false;
-  } else {
-    tSMP_CB* p_cb = &smp_cb;
-
-    if (p_cb->wait_for_authorization_complete) {
-      tSMP_INT_DATA smp_int_data;
-      smp_int_data.status = SMP_SUCCESS;
-      if (fixed_cid == L2CAP_SMP_CID) {
-        smp_sm_event(p_cb, SMP_AUTH_CMPL_EVT, &smp_int_data);
-      } else {
-        smp_br_state_machine_event(p_cb, SMP_BR_AUTH_CMPL_EVT, &smp_int_data);
-      }
-    }
+  } else
     return true;
-  }
 }
 
 /*******************************************************************************
-- 
2.17.1

