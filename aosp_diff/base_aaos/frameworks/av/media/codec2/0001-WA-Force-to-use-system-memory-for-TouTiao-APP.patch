From e47434ad4041f0e76af19b6a2e9f3c9c12b9616d Mon Sep 17 00:00:00 2001
From: Shaofeng Tang <shaofeng.tang@intel.com>
Date: Thu, 12 Oct 2023 16:35:03 +0800
Subject: [PATCH] [WA] Force to use system memory for TouTiao APP

BufferQueue/Pool doesn't work as expected in TouTiao case
Once the issue is fixed, remove me

Signed-off-by: Shaofeng Tang <shaofeng.tang@intel.com>
---
 media/codec2/sfplugin/Android.bp              |  1 +
 media/codec2/sfplugin/CCodecBufferChannel.cpp | 12 ++++++++++++
 media/codec2/sfplugin/CCodecBufferChannel.h   |  4 ++++
 .../codec2/sfplugin/utils/Codec2BufferUtils.h | 19 +++++++++++++++++++
 4 files changed, 36 insertions(+)

diff --git a/media/codec2/sfplugin/Android.bp b/media/codec2/sfplugin/Android.bp
index 2bc748f50b..f18e9262a0 100644
--- a/media/codec2/sfplugin/Android.bp
+++ b/media/codec2/sfplugin/Android.bp
@@ -28,6 +28,7 @@ cc_library_shared {
     cflags: [
         "-Werror",
         "-Wall",
+        "-DWA_TOUTIAO",
     ],
 
     header_libs: [
diff --git a/media/codec2/sfplugin/CCodecBufferChannel.cpp b/media/codec2/sfplugin/CCodecBufferChannel.cpp
index 6f7b7f791a..7cdfbe0669 100644
--- a/media/codec2/sfplugin/CCodecBufferChannel.cpp
+++ b/media/codec2/sfplugin/CCodecBufferChannel.cpp
@@ -1344,6 +1344,18 @@ status_t CCodecBufferChannel::start(
                     outputSurface,
                     outputGeneration,
                     maxDequeueCount);
+#ifdef WA_TOUTIAO
+            if (isTouTiaoAPP()) {
+                // configure CPU read consumer usage
+                C2StreamUsageTuning::output outputUsage{0u, C2MemoryUsage::CPU_READ};
+                std::vector<std::unique_ptr<C2SettingResult>> failures;
+                err = mComponent->config({ &outputUsage }, C2_MAY_BLOCK, &failures);
+                // do not print error message for now as most components may not yet
+                // support this setting
+                ALOGD_IF(err != C2_BAD_INDEX, "[%s] Configured output usage [%#llx] for TouTiao WA.",
+                     mName, (long long)outputUsage.value);
+	    }
+#endif
         } else {
             // configure CPU read consumer usage
             C2StreamUsageTuning::output outputUsage{0u, C2MemoryUsage::CPU_READ};
diff --git a/media/codec2/sfplugin/CCodecBufferChannel.h b/media/codec2/sfplugin/CCodecBufferChannel.h
index 4db69cb897..194c3e1c7c 100644
--- a/media/codec2/sfplugin/CCodecBufferChannel.h
+++ b/media/codec2/sfplugin/CCodecBufferChannel.h
@@ -35,6 +35,10 @@
 #include "InputSurfaceWrapper.h"
 #include "PipelineWatcher.h"
 
+#ifdef WA_TOUTIAO
+#include "utils/Codec2BufferUtils.h"
+#endif
+
 namespace android {
 
 class MemoryDealer;
diff --git a/media/codec2/sfplugin/utils/Codec2BufferUtils.h b/media/codec2/sfplugin/utils/Codec2BufferUtils.h
index 9fa642d35b..1bda1b3235 100644
--- a/media/codec2/sfplugin/utils/Codec2BufferUtils.h
+++ b/media/codec2/sfplugin/utils/Codec2BufferUtils.h
@@ -138,6 +138,25 @@ enum FlexLayout {
  */
 FlexLayout GetYuv420FlexibleLayout();
 
+#ifdef WA_TOUTIAO
+#define TOUTIAO_PKG_NAME "com.ss.android.article.news"
+
+inline bool isTouTiaoAPP() {
+    char buffer[128] = {0};
+    std::string result = "";
+    FILE* file = fopen("/proc/self/cmdline","r");
+    if (file) {
+        while (!feof(file)) {
+            fread(buffer, sizeof(buffer), 1, file);
+            result += buffer;
+        }
+        if (!strcmp(result.c_str(), TOUTIAO_PKG_NAME))
+            return true;
+    }
+    return false;
+}
+#endif
+
 /**
  * A raw memory block to use for internal buffers.
  *
-- 
2.29.2

