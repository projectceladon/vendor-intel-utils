From 28f365c3681efb3eefe1508cf6b890c64d13b225 Mon Sep 17 00:00:00 2001
From: Dan Liang <dan.liang@intel.com>
Date: Thu, 20 Sep 2018 14:01:14 +0800
Subject: [PATCH 1/9] Fix an issue that video can not be resumed after being
 paused

Some video clips contain unsupported audio tracks and when the clip
is paused and resumed, the audio track would trigger a flush and make
the MediaClock's anchor being cleared.

Change-Id: If31b8ada4bf225af1c1f40ac4b66a4af9fa858fd
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-68892
Signed-off-by: Dan Liang <dan.liang@intel.com>
---
 .../nuplayer/NuPlayerRenderer.cpp                     | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
index 39be40ddc..10504a081 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
@@ -1678,6 +1678,17 @@ void NuPlayer::Renderer::onFlush(const sp<AMessage> &msg) {

     mVideoSampleReceived = false;

+    if (audio && !mHasAudio) {
+        // Call postDrainVideoQueue() proactively in case audio decoder is
+        // shut down due to the unsupported mime type and video track can
+        // still be resumed after being paused.
+        if (mDrainVideoQueuePending) {
+            // postDrainVideoQueue() may have been called before flush
+            mDrainVideoQueuePending = false;
+            postDrainVideoQueue();
+        }
+    }
+
     if (notifyComplete) {
         notifyFlushComplete(audio);
     }
--
2.21.0
