From 955d79840b168493e651e94fab05a3fc35ada86d Mon Sep 17 00:00:00 2001
From: "Wang, ArvinX" <arvinx.wang@intel.com>
Date: Fri, 1 Jun 2018 14:12:30 +0800
Subject: [PATCH 03/16] Fix wifi connection status is save throung using WPS

If use the WPS to connect network, setting will get a INVALID_NETWORK_ID
for this connection, use the config and SSID to match the vaild
network.

Change-Id: Icc7d449e579a0dc4e000c6e614753cb228af08a9
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-63312
Signed-off-by: Wang, ArvinX <arvinx.wang@intel.com>
---
 .../src/com/android/settingslib/wifi/AccessPoint.java   |  8 ++++++++
 .../src/com/android/settingslib/wifi/WifiTracker.java   | 17 +++++++++++++++++
 2 files changed, 25 insertions(+)

diff --git a/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java b/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java
index 682b85e..97f6a2f 100644
--- a/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java
+++ b/packages/SettingsLib/src/com/android/settingslib/wifi/AccessPoint.java
@@ -35,6 +35,7 @@ import android.net.ScoredNetwork;
 import android.net.WifiKey;
 import android.net.wifi.IWifiManager;
 import android.net.wifi.ScanResult;
+import android.net.wifi.SupplicantState;
 import android.net.wifi.WifiConfiguration;
 import android.net.wifi.WifiConfiguration.KeyMgmt;
 import android.net.wifi.WifiEnterpriseConfig;
@@ -1076,6 +1077,13 @@ public class AccessPoint implements Comparable<AccessPoint> {
      */
     private boolean isInfoForThisAccessPoint(WifiConfiguration config, WifiInfo info) {
         if (isPasspoint() == false && networkId != WifiConfiguration.INVALID_NETWORK_ID) {
+            // if connecting network throung the WPS, the network is connectting or connected,
+            // but this connection no network ID, it is also vaild wifi information,
+            // don't compare with the network IDï¼Œ using the wifi config to compare.
+            if (config != null && (SupplicantState.isConnecting(info.getSupplicantState())
+                    && info.getNetworkId() == WifiConfiguration.INVALID_NETWORK_ID)) {
+                return matches(config);
+            }
             return networkId == info.getNetworkId();
         } else if (config != null) {
             return matches(config);
diff --git a/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java b/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java
index 3c664b0..5cbe50e 100644
--- a/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java
+++ b/packages/SettingsLib/src/com/android/settingslib/wifi/WifiTracker.java
@@ -477,6 +477,19 @@ public class WifiTracker {
         return null;
     }
 
+    private WifiConfiguration getWifiConfigurationForSsid(
+            String  ssid, final List<WifiConfiguration> configs) {
+        if (configs != null) {
+            for (WifiConfiguration config : configs) {
+                if (mLastInfo != null && ssid.equals(config.SSID) &&
+                        !(config.selfAdded && config.numAssociation == 0)) {
+                    return config;
+                }
+            }
+        }
+        return null;
+    }
+
     /**
      * Safely modify {@link #mInternalAccessPoints} by acquiring {@link #mLock} first.
      *
@@ -509,6 +522,10 @@ public class WifiTracker {
         if (mLastInfo != null) {
             connectionConfig = getWifiConfigurationForNetworkId(
                     mLastInfo.getNetworkId(), mWifiManager.getConfiguredNetworks());
+            // if we can't get the connectionConfig throng the NetworkId, try use the SSID
+            if (connectionConfig == null) {
+                connectionConfig = getWifiConfigurationForSsid(mLastInfo.getSSID(),mWifiManager.getConfiguredNetworks());
+            }
         }
 
         // Swap the current access points into a cached list.
-- 
1.9.1

