From 4c244e07a808e2f141a8dc19f80eafeb34daaf34 Mon Sep 17 00:00:00 2001
From: Aiswarya Cyriac <aiswarya.cyriac@intel.com>
Date: Wed, 30 Aug 2017 10:21:26 +0530
Subject: [PATCH] Fix for failing CTS test BluetoothLeScanTest#testBatchScan

Added condition checks to prevent erroneous array operations

Change-Id: I47d79958a3a871c3eeb05f7cf4e31a0ad4eba855
Tracked-on: https://jira01.devtools.intel.com/browse/OAM-53699
Signed-off-by: Aiswarya Cyriac <aiswarya.cyriac@intel.com>
---
 src/com/android/bluetooth/gatt/GattService.java | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/src/com/android/bluetooth/gatt/GattService.java b/src/com/android/bluetooth/gatt/GattService.java
index 9a99bcd..32a0458 100644
--- a/src/com/android/bluetooth/gatt/GattService.java
+++ b/src/com/android/bluetooth/gatt/GattService.java
@@ -1341,6 +1341,8 @@ public class GattService extends ProfileService {
         int position = 0;
         long now = SystemClock.elapsedRealtimeNanos();
         while (position < batchRecord.length) {
+            if (position + 6 >= batchRecord.length)
+                break;
             byte[] address = extractBytes(batchRecord, position, 6);
             // TODO: remove temp hack.
             reverse(address);
@@ -1350,15 +1352,28 @@ public class GattService extends ProfileService {
             position++;
             // Skip tx power level.
             position++;
+            if (position >= batchRecord.length)
+                break;
             int rssi = batchRecord[position++];
+            if ((position + 2) >= batchRecord.length)
+                break;
             long timestampNanos = now - parseTimestampNanos(extractBytes(batchRecord, position, 2));
             position += 2;
 
             // Combine advertise packet and scan response packet.
+            if (position >= batchRecord.length)
+                break;
             int advertisePacketLen = batchRecord[position++];
+            if ((advertisePacketLen < 0) || ((position + advertisePacketLen) >= batchRecord.length))
+                break;
             byte[] advertiseBytes = extractBytes(batchRecord, position, advertisePacketLen);
             position += advertisePacketLen;
+            if (position >= batchRecord.length)
+                break;
             int scanResponsePacketLen = batchRecord[position++];
+            if ((scanResponsePacketLen < 0) ||
+               ((position + scanResponsePacketLen) >= batchRecord.length))
+                break;
             byte[] scanResponseBytes = extractBytes(batchRecord, position, scanResponsePacketLen);
             position += scanResponsePacketLen;
             byte[] scanRecord = new byte[advertisePacketLen + scanResponsePacketLen];
-- 
1.9.1

