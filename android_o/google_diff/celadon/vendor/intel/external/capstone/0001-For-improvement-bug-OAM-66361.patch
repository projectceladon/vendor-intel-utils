From b46c5d6baff1f9cf53f72198f93499650a7d848a Mon Sep 17 00:00:00 2001
From: Priyanka Bose <priyanka.bose@intel.com>
Date: Mon, 16 Jul 2018 21:25:16 +0530
Subject: [PATCH] For improvement bug  OAM-66361

Change-Id: I118fe3775f085f38ce6b97a9373fc8289e9c6197
Tracked-On:https://jira01.devtools.intel.com/browse/OAM-66361
Category: device enablement
Domain: AOSP.ART-Other
Origin: internal
Upstream-Candidate: no, proprietary
Signed-off-by: Priyanka Bose <priyanka.bose@intel.com>
---
 Android.bp                     | 99 ++++++++++++++++++++++++++++++++++++++++++
 SStream.c                      |  2 +-
 arch/X86/X86ATTInstPrinter.c   |  2 +-
 arch/X86/X86Disassembler.c     |  2 +-
 arch/X86/X86IntelInstPrinter.c |  1 +
 include/platform.h             | 80 ----------------------------------
 myinittypes.h                  | 87 +++++++++++++++++++++++++++++++++++++
 7 files changed, 190 insertions(+), 83 deletions(-)
 create mode 100644 Android.bp
 create mode 100644 myinittypes.h

diff --git a/Android.bp b/Android.bp
new file mode 100644
index 0000000..21892d8
--- /dev/null
+++ b/Android.bp
@@ -0,0 +1,99 @@
+// Copyright (C) 2015 The Android Open Source Project
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+
+cc_defaults {
+    name: "libcapstone_defaults",
+    defaults: ["art_defaults"],
+    host_supported: true,
+    srcs: [
+       "arch/X86/X86Disassembler.c",
+        "arch/X86/X86DisassemblerDecoder.c",
+        "arch/X86/X86IntelInstPrinter.c",
+        "arch/X86/X86Mapping.c",
+        "arch/X86/X86Module.c",
+	"cs.c",
+	"MCInst.c",
+	"MCInstrDesc.c",
+	"MCRegisterInfo.c",
+	"SStream.c",
+	"utils.c",
+    ],
+    cflags: [
+        "-Wno-unused-parameter",
+        "-Wno-tautological-compare",
+	"-Werror",
+        "-Wextra",
+        "-Wstrict-aliasing",
+        "-fstrict-aliasing",
+        "-Wunreachable-code",
+        "-Wredundant-decls",
+        "-Wunused",
+        "-Wno-shadow",
+        "-Wno-unused-parameter",
+        "-Wno-sign-compare",
+        "-fvisibility=protected",
+        "-DCAPSTONE_USE_SYS_DYN_MEM",
+        "-DCAPSTONE_X86_ATT_DISABLE",
+        "-D_FILE_OFFSET_BITS=64",
+	"-DCAPSTONE_HAS_X86",
+
+    ],
+    //local_include_dirs: ["*"],
+    export_include_dirs: ["include"],
+
+}
+
+cc_library {
+    name: "libcapstone",
+    clang: true,
+    host_supported: true,
+    vendor_available: true,
+    vndk: {
+        enabled: true,
+    },
+    defaults: [
+       "libcapstone_defaults",
+    ],
+ target: {
+        android: {
+            shared_libs: [
+                "libcutils",
+            ],
+            enabled: true,
+        },
+	linux: {
+            cflags: [
+                "-Wmissing-noreturn",
+            ],
+	    shared_libs: [
+                "libcutils",
+            ],
+        },
+
+        host: {
+	    host_ldlibs: ["-lpthread",],
+        },
+
+    },
+}
+
+// Create a dummy static version of libcapstone which expose the necessary symbols
+// but throws when called. This can be used to get static binaries which don't
+// need the real functionality of the sig chain but need to please the linker.
+cc_library_static {
+    name: "libcapstone_dummy",
+    host_supported: true,
+    defaults: ["libcapstone_defaults"],
+}
diff --git a/SStream.c b/SStream.c
index 7caccac..1393092 100644
--- a/SStream.c
+++ b/SStream.c
@@ -14,7 +14,7 @@
 #include <limits.h>
 #endif
 #include <string.h>
-
+#include "myinittypes.h"
 #include <platform.h>
 
 #include "SStream.h"
diff --git a/arch/X86/X86ATTInstPrinter.c b/arch/X86/X86ATTInstPrinter.c
index 51ade5a..674f4dd 100644
--- a/arch/X86/X86ATTInstPrinter.c
+++ b/arch/X86/X86ATTInstPrinter.c
@@ -29,7 +29,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #endif
-
+#include "../../myinittypes.h"
 #include <string.h>
 
 #include "../../utils.h"
diff --git a/arch/X86/X86Disassembler.c b/arch/X86/X86Disassembler.c
index 2c2d680..8fbe0a8 100644
--- a/arch/X86/X86Disassembler.c
+++ b/arch/X86/X86Disassembler.c
@@ -22,7 +22,7 @@
 #if defined(CAPSTONE_HAS_OSXKERNEL)
 #include <Availability.h>
 #endif
-
+#include "../../myinittypes.h"
 #include <string.h>
 
 #include "../../cs_priv.h"
diff --git a/arch/X86/X86IntelInstPrinter.c b/arch/X86/X86IntelInstPrinter.c
index cdd21c4..ac0c57e 100644
--- a/arch/X86/X86IntelInstPrinter.c
+++ b/arch/X86/X86IntelInstPrinter.c
@@ -28,6 +28,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #endif
+#include "../../myinittypes.h"
 #include <string.h>
 
 #include "../../utils.h"
diff --git a/include/platform.h b/include/platform.h
index b0d1a2d..6aff374 100644
--- a/include/platform.h
+++ b/include/platform.h
@@ -27,84 +27,4 @@ typedef unsigned char bool;
 #include <stdbool.h>
 #endif
 
-
-// handle C99 issue (for pre-2013 VisualStudio)
-#if defined(CAPSTONE_HAS_OSXKERNEL) || (defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE)))
-// this system does not have inttypes.h
-
-#if defined(_MSC_VER) && (_MSC_VER < 1600 || defined(_KERNEL_MODE))
-// this system does not have stdint.h
-typedef signed char  int8_t;
-typedef signed short int16_t;
-typedef signed int   int32_t;
-typedef unsigned char  uint8_t;
-typedef unsigned short uint16_t;
-typedef unsigned int   uint32_t;
-typedef signed long long   int64_t;
-typedef unsigned long long uint64_t;
-
-#define INT8_MIN         (-127i8 - 1)
-#define INT16_MIN        (-32767i16 - 1)
-#define INT32_MIN        (-2147483647i32 - 1)
-#define INT64_MIN        (-9223372036854775807i64 - 1)
-#define INT8_MAX         127i8
-#define INT16_MAX        32767i16
-#define INT32_MAX        2147483647i32
-#define INT64_MAX        9223372036854775807i64
-#define UINT8_MAX        0xffui8
-#define UINT16_MAX       0xffffui16
-#define UINT32_MAX       0xffffffffui32
-#define UINT64_MAX       0xffffffffffffffffui64
-#endif
-
-#define __PRI_8_LENGTH_MODIFIER__ "hh"
-#define __PRI_64_LENGTH_MODIFIER__ "ll"
-
-#define PRId8         __PRI_8_LENGTH_MODIFIER__ "d"
-#define PRIi8         __PRI_8_LENGTH_MODIFIER__ "i"
-#define PRIo8         __PRI_8_LENGTH_MODIFIER__ "o"
-#define PRIu8         __PRI_8_LENGTH_MODIFIER__ "u"
-#define PRIx8         __PRI_8_LENGTH_MODIFIER__ "x"
-#define PRIX8         __PRI_8_LENGTH_MODIFIER__ "X"
-
-#define PRId16        "hd"
-#define PRIi16        "hi"
-#define PRIo16        "ho"
-#define PRIu16        "hu"
-#define PRIx16        "hx"
-#define PRIX16        "hX"
-
-#if defined(_MSC_VER) && _MSC_VER <= 1700
-#define PRId32        "ld"
-#define PRIi32        "li"
-#define PRIo32        "lo"
-#define PRIu32        "lu"
-#define PRIx32        "lx"
-#define PRIX32        "lX"
-#else	// OSX
-#define PRId32        "d"
-#define PRIi32        "i"
-#define PRIo32        "o"
-#define PRIu32        "u"
-#define PRIx32        "x"
-#define PRIX32        "X"
-#endif
-
-#if defined(_MSC_VER) && _MSC_VER <= 1700
-// redefine functions from inttypes.h used in cstool
-#define strtoull _strtoui64
-#endif
-
-#define PRId64        __PRI_64_LENGTH_MODIFIER__ "d"
-#define PRIi64        __PRI_64_LENGTH_MODIFIER__ "i"
-#define PRIo64        __PRI_64_LENGTH_MODIFIER__ "o"
-#define PRIu64        __PRI_64_LENGTH_MODIFIER__ "u"
-#define PRIx64        __PRI_64_LENGTH_MODIFIER__ "x"
-#define PRIX64        __PRI_64_LENGTH_MODIFIER__ "X"
-
-#else
-// this system has inttypes.h by default
-#include <inttypes.h>
-#endif
-
 #endif
diff --git a/myinittypes.h b/myinittypes.h
new file mode 100644
index 0000000..7543ee1
--- /dev/null
+++ b/myinittypes.h
@@ -0,0 +1,87 @@
+/* Capstone Disassembly Engine */
+/* By Axel Souchet, 2014 */
+
+#ifndef CS_MYINTTYPES_H
+#define CS_MYINTTYPES_H
+
+
+// handle C99 issue (for pre-2013 VisualStudio)
+#if defined(CAPSTONE_HAS_OSXKERNEL) || (defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE)))
+// this system does not have inttypes.h
+
+#if defined(_MSC_VER) && (_MSC_VER < 1600 || defined(_KERNEL_MODE))
+// this system does not have stdint.h
+typedef signed char  int8_t;
+typedef signed short int16_t;
+typedef signed int   int32_t;
+typedef unsigned char  uint8_t;
+typedef unsigned short uint16_t;
+typedef unsigned int   uint32_t;
+typedef signed long long   int64_t;
+typedef unsigned long long uint64_t;
+
+#define INT8_MIN         (-127i8 - 1)
+#define INT16_MIN        (-32767i16 - 1)
+#define INT32_MIN        (-2147483647i32 - 1)
+#define INT64_MIN        (-9223372036854775807i64 - 1)
+#define INT8_MAX         127i8
+#define INT16_MAX        32767i16
+#define INT32_MAX        2147483647i32
+#define INT64_MAX        9223372036854775807i64
+#define UINT8_MAX        0xffui8
+#define UINT16_MAX       0xffffui16
+#define UINT32_MAX       0xffffffffui32
+#define UINT64_MAX       0xffffffffffffffffui64
+#endif
+
+#define __PRI_8_LENGTH_MODIFIER__ "hh"
+#define __PRI_64_LENGTH_MODIFIER__ "ll"
+
+#define PRId8         __PRI_8_LENGTH_MODIFIER__ "d"
+#define PRIi8         __PRI_8_LENGTH_MODIFIER__ "i"
+#define PRIo8         __PRI_8_LENGTH_MODIFIER__ "o"
+#define PRIu8         __PRI_8_LENGTH_MODIFIER__ "u"
+#define PRIx8         __PRI_8_LENGTH_MODIFIER__ "x"
+#define PRIX8         __PRI_8_LENGTH_MODIFIER__ "X"
+
+#define PRId16        "hd"
+#define PRIi16        "hi"
+#define PRIo16        "ho"
+#define PRIu16        "hu"
+#define PRIx16        "hx"
+#define PRIX16        "hX"
+
+#if defined(_MSC_VER) && _MSC_VER <= 1700
+#define PRId32        "ld"
+#define PRIi32        "li"
+#define PRIo32        "lo"
+#define PRIu32        "lu"
+#define PRIx32        "lx"
+#define PRIX32        "lX"
+#else	// OSX
+#define PRId32        "d"
+#define PRIi32        "i"
+#define PRIo32        "o"
+#define PRIu32        "u"
+#define PRIx32        "x"
+#define PRIX32        "X"
+#endif
+
+#if defined(_MSC_VER) && _MSC_VER <= 1700
+// redefine functions from inttypes.h used in cstool
+#define strtoull _strtoui64
+#endif
+
+#define PRId64        __PRI_64_LENGTH_MODIFIER__ "d"
+#define PRIi64        __PRI_64_LENGTH_MODIFIER__ "i"
+#define PRIo64        __PRI_64_LENGTH_MODIFIER__ "o"
+#define PRIu64        __PRI_64_LENGTH_MODIFIER__ "u"
+#define PRIx64        __PRI_64_LENGTH_MODIFIER__ "x"
+#define PRIX64        __PRI_64_LENGTH_MODIFIER__ "X"
+
+#else
+// this system has inttypes.h by default
+#include <inttypes.h>
+#endif
+
+#endif
-- 
1.9.1

