From 225c12f847d802e87e003c9542334b8d9385be95 Mon Sep 17 00:00:00 2001
From: anitha3x <anithax.h.chandrasekar@intel.com>
Date: Wed, 25 Apr 2018 14:23:41 +0530
Subject: [PATCH 3/3] eSco setup command failed with status Invalid packet

issue : - eSco link for Voip call failed
- The HCI_Enhanced_Setup_Synchronous_Connection returned
"Invalid HCI command parameters" from controller
fix:
- Modified eSco CVSD params as per Intel connectivity
- considered S1 setting params for eSco
Testing :
- Voip call initiating from DUT to phone via hangout app
- Voip call initiating from phone to DUT via hangout app

Change-Id: Ieb278dce84f669472a3dadd1f6f1cbbd24f53f7c
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-64813
Signed-off-by: anitha3x <anithax.h.chandrasekar@intel.com>
---
 bta/ag/bta_ag_sco.cc          |  9 ++++++---
 device/src/esco_parameters.cc | 21 +++++++++++----------
 2 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/bta/ag/bta_ag_sco.cc b/bta/ag/bta_ag_sco.cc
index f118988..4e2dbcc 100644
--- a/bta/ag/bta_ag_sco.cc
+++ b/bta/ag/bta_ag_sco.cc
@@ -404,7 +404,8 @@ static void bta_ag_create_sco(tBTA_AG_SCB* p_scb, bool is_orig) {
         p_bta_ag_cfg->sco_pkt_types | ESCO_PKT_TYPES_MASK_NO_3_EV3;
     if ((!(p_scb->features & BTA_AG_FEAT_ESCO)) ||
         (!(p_scb->peer_features & BTA_AG_PEER_FEAT_ESCO))) {
-      params.max_latency_ms = 10;
+      /* eSco S1 setting */
+      params.max_latency_ms = 7;
       params.retransmission_effort = ESCO_RETRANSMISSION_POWER;
     }
   }
@@ -471,7 +472,8 @@ static void bta_ag_create_pending_sco(tBTA_AG_SCB* p_scb, bool is_local) {
       params = esco_parameters_for_codec(ESCO_CODEC_CVSD);
       if ((!(p_scb->features & BTA_AG_FEAT_ESCO)) ||
           (!(p_scb->peer_features & BTA_AG_PEER_FEAT_ESCO))) {
-        params.max_latency_ms = 10;
+        /* eSco S1 setting */
+        params.max_latency_ms = 7;
         params.retransmission_effort = ESCO_RETRANSMISSION_POWER;
       }
     }
@@ -504,7 +506,8 @@ static void bta_ag_create_pending_sco(tBTA_AG_SCB* p_scb, bool is_local) {
     params = esco_parameters_for_codec(ESCO_CODEC_CVSD);
     if ((!(p_scb->features & BTA_AG_FEAT_ESCO)) ||
         (!(p_scb->peer_features & BTA_AG_PEER_FEAT_ESCO))) {
-      params.max_latency_ms = 10;
+      /* eSco S1 setting*/
+      params.max_latency_ms = 7;
       params.retransmission_effort = ESCO_RETRANSMISSION_POWER;
     }
 
diff --git a/device/src/esco_parameters.cc b/device/src/esco_parameters.cc
index 80f5e76..f38e56f 100644
--- a/device/src/esco_parameters.cc
+++ b/device/src/esco_parameters.cc
@@ -21,24 +21,24 @@
 #include "device/include/esco_parameters.h"
 
 static const enh_esco_params_t default_esco_parameters[ESCO_NUM_CODECS] = {
-    // CVSD
+    // CVSD eSco S1 Setting
     {.transmit_bandwidth = TXRX_64KBITS_RATE,
      .receive_bandwidth = TXRX_64KBITS_RATE,
      .transmit_coding_format = {.coding_format = ESCO_CODING_FORMAT_CVSD,
-                                .company_id = 0x0000,
+                                .company_id = 0x0002, /* Intel Corp.*/
                                 .vendor_specific_codec_id = 0x0000},
      .receive_coding_format = {.coding_format = ESCO_CODING_FORMAT_CVSD,
-                               .company_id = 0x0000,
+                               .company_id = 0x0002, /* Intel Corp.*/
                                .vendor_specific_codec_id = 0x0000},
-     .transmit_codec_frame_size = 60,
-     .receive_codec_frame_size = 60,
+     .transmit_codec_frame_size = 8,
+     .receive_codec_frame_size = 8,
      .input_bandwidth = INPUT_OUTPUT_64K_RATE,
      .output_bandwidth = INPUT_OUTPUT_64K_RATE,
      .input_coding_format = {.coding_format = ESCO_CODING_FORMAT_LINEAR,
-                             .company_id = 0x0000,
+                             .company_id = 0x0002, /* Intel Corp.*/
                              .vendor_specific_codec_id = 0x0000},
      .output_coding_format = {.coding_format = ESCO_CODING_FORMAT_LINEAR,
-                              .company_id = 0x0000,
+                              .company_id = 0x0002, /* Intel Corp.*/
                               .vendor_specific_codec_id = 0x0000},
      .input_coded_data_size = 16,
      .output_coded_data_size = 16,
@@ -48,12 +48,13 @@ static const enh_esco_params_t default_esco_parameters[ESCO_NUM_CODECS] = {
      .output_pcm_payload_msb_position = 0,
      .input_data_path = ESCO_DATA_PATH_PCM,
      .output_data_path = ESCO_DATA_PATH_PCM,
-     .input_transport_unit_size = 0x00,
-     .output_transport_unit_size = 0x00,
+     .input_transport_unit_size = 0x10,
+     .output_transport_unit_size = 0x10,
 #if (BTA_HFP_VERSION >= HFP_VERSION_1_7)
      .max_latency_ms = 12,
 #else
-     .max_latency_ms = 10,
+     /* eSco S1 setting */
+     .max_latency_ms = 7,
 #endif
 
      .packet_types =
-- 
1.9.1

