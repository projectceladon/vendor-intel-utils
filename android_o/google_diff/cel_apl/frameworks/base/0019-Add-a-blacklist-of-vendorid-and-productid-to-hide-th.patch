From b38f54cc90d61af2abba561fea831361ee4d0930 Mon Sep 17 00:00:00 2001
From: "Yan, WalterX" <walterx.yan@intel.com>
Date: Thu, 7 Jun 2018 13:10:01 +0800
Subject: [PATCH 19/21] Add a blacklist of vendorid and productid to hide the
 usb device.

Hide the dedicated BT usb device to avoid apps reading it.

Change-Id: Iab1701c53e578efe14e16c1ccedb1fdfba63dd7c
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-63483
Signed-off-by: Yan, WalterX <walterx.yan@intel.com>
---
 .../com/android/server/usb/UsbHostManager.java     | 31 +++++++++++++++++++---
 1 file changed, 27 insertions(+), 4 deletions(-)

diff --git a/services/usb/java/com/android/server/usb/UsbHostManager.java b/services/usb/java/com/android/server/usb/UsbHostManager.java
index c657a1b..9d03db7 100644
--- a/services/usb/java/com/android/server/usb/UsbHostManager.java
+++ b/services/usb/java/com/android/server/usb/UsbHostManager.java
@@ -74,6 +74,20 @@ public class UsbHostManager {
     @GuardedBy("mLock")
     private ComponentName mUsbDeviceConnectionHandler;
 
+    private static class VendorIdProductId {
+        public VendorIdProductId(int venderId, int productId) {
+            VendorId  = venderId;
+            ProductId = productId;
+        }
+        public int VendorId;
+        public int ProductId;
+    }
+
+    //TODO: move the ids to the config of platform
+    private VendorIdProductId[] mVidPidBlackList = {
+        new VendorIdProductId(0x8087,0x0a2b), //dedicated for BT in Celadon
+    };
+
     public UsbHostManager(Context context, UsbAlsaManager alsaManager,
             UsbSettingsManager settingsManager) {
         mContext = context;
@@ -125,14 +139,23 @@ public class UsbHostManager {
     }
 
     /* returns true if the USB device should not be accessible by applications */
-    private boolean isBlackListed(int clazz, int subClass) {
+    private boolean isBlackListed(int clazz, int subClass, int vendorID, int productID) {
         // blacklist hubs
         if (clazz == UsbConstants.USB_CLASS_HUB) return true;
 
         // blacklist HID boot devices (mouse and keyboard)
-        return clazz == UsbConstants.USB_CLASS_HID
-                && subClass == UsbConstants.USB_INTERFACE_SUBCLASS_BOOT;
+        if (clazz == UsbConstants.USB_CLASS_HID
+                && subClass == UsbConstants.USB_INTERFACE_SUBCLASS_BOOT) return true;
 
+        //blacklist vendor id & product id devices
+        for (VendorIdProductId id : mVidPidBlackList) {
+            if (id.VendorId == vendorID
+                    && id.ProductId == productID) {
+                return true;
+            }
+        }
+
+        return false;
     }
 
     /* Called from JNI in monitorUsbHostBus() to report new USB devices
@@ -165,7 +188,7 @@ public class UsbHostManager {
         // such test until endUsbDeviceAdded() when we have that info.
 
         if (isBlackListed(deviceName) ||
-                isBlackListed(deviceClass, deviceSubclass)) {
+                isBlackListed(deviceClass, deviceSubclass, vendorID, productID)) {
             return false;
         }
 
-- 
1.9.1

