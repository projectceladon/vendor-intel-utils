From 3e172568267d3b03a89c5d2e0a2690399fa59630 Mon Sep 17 00:00:00 2001
From: "Yue, VincentX" <vincentx.yue@intel.com>
Date: Wed, 27 Dec 2017 16:04:47 +0800
Subject: [PATCH 1/2] Add support scan sdcard media files

The Environment.getExternalStorageDirectory only return
the primary external storage directory, when insert SDcard,
also need to scan its media files.

Test: Copy image/video files from internal to SD card through Setting

Change-Id: If579c163f92be8f3f558207bb699fa90ff719d54
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-53792
Signed-off-by: Yue, VincentX <vincentx.yue@intel.com>
---
 .../providers/media/MediaScannerReceiver.java       | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/src/com/android/providers/media/MediaScannerReceiver.java b/src/com/android/providers/media/MediaScannerReceiver.java
index 8a098af..23495a6 100644
--- a/src/com/android/providers/media/MediaScannerReceiver.java
+++ b/src/com/android/providers/media/MediaScannerReceiver.java
@@ -23,6 +23,9 @@ import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Environment;
+import android.os.UserHandle;
+import android.os.storage.StorageManager;
+import android.os.storage.StorageVolume;
 import android.util.Log;
 
 import java.io.File;
@@ -60,24 +63,36 @@ public class MediaScannerReceiver extends BroadcastReceiver {
                     // scan whenever any volume is mounted
                     scan(context, MediaProvider.EXTERNAL_VOLUME);
                 } else if (Intent.ACTION_MEDIA_SCANNER_SCAN_FILE.equals(action) &&
-                        path != null && path.startsWith(externalStoragePath + "/")) {
+                        path != null && isExternalStoragePath(path)) {
                     scanFile(context, path);
                 }
             }
         }
     }
 
+    private static boolean isExternalStoragePath(String path) {
+        // See Environment.UserEnvironment.getExternalDirs
+        final StorageVolume[] volumes = StorageManager.getVolumeList(UserHandle.myUserId(),
+                StorageManager.FLAG_FOR_WRITE);
+        for (int i = 0; i < volumes.length; i++) {
+            if (path.startsWith(volumes[i].getPath() + "/")) {
+                return true;
+            }
+        }
+        return false;
+    }
+
     private void scan(Context context, String volume) {
         Bundle args = new Bundle();
         args.putString("volume", volume);
         context.startService(
                 new Intent(context, MediaScannerService.class).putExtras(args));
-    }    
+    }
 
     private void scanFile(Context context, String path) {
         Bundle args = new Bundle();
         args.putString("filepath", path);
         context.startService(
                 new Intent(context, MediaScannerService.class).putExtras(args));
-    }    
+    }
 }
-- 
1.9.1

