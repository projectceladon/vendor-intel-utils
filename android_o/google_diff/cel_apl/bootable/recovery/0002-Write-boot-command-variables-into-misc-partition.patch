From 4e33b27ea11b6b77bfb3de4c5c86aec1f9838311 Mon Sep 17 00:00:00 2001
From: "Zhou, Lihua" <lihuax.zhou@intel.com>
Date: Thu, 1 Feb 2018 08:28:11 +0800
Subject: [PATCH 2/4] Write boot command variables into misc partition

Update write_reboot_bootloader() funtion to support
different boot reason, such as bootloader, fastboot,
and recovery.

Jira: None.
Test: Test it on Joule and KBL NUC.

Change-Id: Ie8a87d893dd884896925338a68892b5f7fdb9b2a
Signed-off-by: Zhou, Lihua <lihuax.zhou@intel.com>
---
 bootloader_message/bootloader_message.cpp                    | 12 +++++++++---
 .../include/bootloader_message/bootloader_message.h          |  2 +-
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/bootloader_message/bootloader_message.cpp b/bootloader_message/bootloader_message.cpp
index f91446b..311077b 100644
--- a/bootloader_message/bootloader_message.cpp
+++ b/bootloader_message/bootloader_message.cpp
@@ -191,7 +191,7 @@ bool update_bootloader_message(const std::vector<std::string>& options, std::str
   return write_bootloader_message(boot, err);
 }
 
-bool write_reboot_bootloader(std::string* err) {
+bool write_reboot_bootloader(std::string* err, std::string* cmd) {
   bootloader_message boot;
   if (!read_bootloader_message(&boot, err)) {
     return false;
@@ -200,7 +200,12 @@ bool write_reboot_bootloader(std::string* err) {
     *err = "Bootloader command pending.";
     return false;
   }
-  strlcpy(boot.command, "bootonce-bootloader", sizeof(boot.command));
+  if (*cmd == "bootonce-bootloader")
+    strlcpy(boot.command, "bootonce-bootloader", sizeof(boot.command));
+  else if (*cmd == "bootonce-fastboot")
+    strlcpy(boot.command, "bootonce-fastboot", sizeof(boot.command));
+  else if (*cmd == "bootonce-recovery")
+    strlcpy(boot.command, "bootonce-recovery", sizeof(boot.command));
   return write_bootloader_message(boot, err);
 }
 
@@ -225,7 +230,8 @@ bool write_wipe_package(const std::string& package_data, std::string* err) {
 
 extern "C" bool write_reboot_bootloader(void) {
   std::string err;
-  return write_reboot_bootloader(&err);
+  std::string cmd = "None";
+  return write_reboot_bootloader(&err, &cmd);
 }
 
 extern "C" bool write_bootloader_message(const char* options) {
diff --git a/bootloader_message/include/bootloader_message/bootloader_message.h b/bootloader_message/include/bootloader_message/bootloader_message.h
index 2ffbfc9..93c5738 100644
--- a/bootloader_message/include/bootloader_message/bootloader_message.h
+++ b/bootloader_message/include/bootloader_message/bootloader_message.h
@@ -211,7 +211,7 @@ bool update_bootloader_message(const std::vector<std::string>& options, std::str
 bool clear_bootloader_message(std::string* err);
 
 // Writes the reboot-bootloader reboot reason to the bootloader_message.
-bool write_reboot_bootloader(std::string* err);
+bool write_reboot_bootloader(std::string* err, std::string* cmd);
 
 // Read the wipe package from BCB (from offset WIPE_PACKAGE_OFFSET_IN_MISC).
 bool read_wipe_package(std::string* package_data, size_t size, std::string* err);
-- 
1.9.1

