From 633f82e8b931ed76e8183a35483d191c7ac7ca25 Mon Sep 17 00:00:00 2001
From: HeYue <yue.he@intel.com>
Date: Mon, 11 Jul 2022 13:39:53 +0800
Subject: [PATCH] CiV SRIOV virtio-gpu power management qemu

Tracked-On: OAM-102664
Signed-off-by: Yuan, Hang <hang.yuan@intel.com>
---
 hw/display/virtio-gpu.c                       | 19 +++++++++++++++++++
 include/hw/virtio/virtio-gpu.h                |  2 ++
 .../standard-headers/linux/virtio_config.h    |  4 ++++
 3 files changed, 25 insertions(+)

diff --git a/hw/display/virtio-gpu.c b/hw/display/virtio-gpu.c
index 5e15c79b9..7d7a72169 100644
--- a/hw/display/virtio-gpu.c
+++ b/hw/display/virtio-gpu.c
@@ -1341,6 +1341,7 @@ void virtio_gpu_device_realize(DeviceState *qdev, Error **errp)
     g->cursor_vq = virtio_get_queue(vdev, 1);
     g->ctrl_bh = qemu_bh_new(virtio_gpu_ctrl_bh, g);
     g->cursor_bh = qemu_bh_new(virtio_gpu_cursor_bh, g);
+    g->suspended = false;
     QTAILQ_INIT(&g->reslist);
     QTAILQ_INIT(&g->cmdq);
     QTAILQ_INIT(&g->fenceq);
@@ -1352,6 +1353,10 @@ void virtio_gpu_reset(VirtIODevice *vdev)
     struct virtio_gpu_simple_resource *res, *tmp;
     struct virtio_gpu_ctrl_command *cmd;
 
+    if (g->suspended) {
+        return;
+    }
+
     QTAILQ_FOREACH_SAFE(res, &g->reslist, next, tmp) {
         virtio_gpu_resource_destroy(g, res);
     }
@@ -1392,6 +1397,19 @@ virtio_gpu_set_config(VirtIODevice *vdev, const uint8_t *config)
     }
 }
 
+static void
+virtio_gpu_set_status(VirtIODevice *vdev, uint8_t status)
+{
+    VirtIOGPU *g = VIRTIO_GPU(vdev);
+
+    if (status == VIRTIO_CONFIG_S_SUSPEND) {
+        g->suspended = true;
+    }
+    if ((status == VIRTIO_CONFIG_S_RESUME) || (status & VIRTIO_CONFIG_S_DRIVER)) {
+        g->suspended = false;
+    }
+}
+
 /*
  * For historical reasons virtio_gpu does not adhere to virtio migration
  * scheme as described in doc/virtio-migration.txt, in a sense that no
@@ -1444,6 +1462,7 @@ static void virtio_gpu_class_init(ObjectClass *klass, void *data)
     vdc->reset = virtio_gpu_reset;
     vdc->get_config = virtio_gpu_get_config;
     vdc->set_config = virtio_gpu_set_config;
+    vdc->set_status = virtio_gpu_set_status;
 
     dc->vmsd = &vmstate_virtio_gpu;
     device_class_set_props(dc, virtio_gpu_properties);
diff --git a/include/hw/virtio/virtio-gpu.h b/include/hw/virtio/virtio-gpu.h
index 2e28507ef..d0ddd61d6 100644
--- a/include/hw/virtio/virtio-gpu.h
+++ b/include/hw/virtio/virtio-gpu.h
@@ -159,6 +159,8 @@ typedef struct VGPUDMABuf {
 struct VirtIOGPU {
     VirtIOGPUBase parent_obj;
 
+    bool suspended;
+
     uint64_t conf_max_hostmem;
 
     VirtQueue *ctrl_vq;
diff --git a/include/standard-headers/linux/virtio_config.h b/include/standard-headers/linux/virtio_config.h
index 965ee6ae2..632b72b70 100644
--- a/include/standard-headers/linux/virtio_config.h
+++ b/include/standard-headers/linux/virtio_config.h
@@ -40,6 +40,10 @@
 #define VIRTIO_CONFIG_S_DRIVER_OK	4
 /* Driver has finished configuring features */
 #define VIRTIO_CONFIG_S_FEATURES_OK	8
+/* Device will enter suspend state */
+#define VIRTIO_CONFIG_S_SUSPEND        0x10
+/* Device resumed */
+#define VIRTIO_CONFIG_S_RESUME     0x11
 /* Device entered invalid state, driver must reset it */
 #define VIRTIO_CONFIG_S_NEEDS_RESET	0x40
 /* We've given up on this device. */
-- 
2.25.1

