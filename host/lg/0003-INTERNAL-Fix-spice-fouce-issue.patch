From 5e73bf2b5ebc2571971e2e7e734fa40bb197119f Mon Sep 17 00:00:00 2001
From: renchenglei <chenglei.ren@intel.com>
Date: Fri, 2 Apr 2021 23:58:11 +0800
Subject: [PATCH 03/14] INTERNAL: Fix spice fouce issue

Now, we can get spice work with on cursor focue window
---
 client/src/main.c | 60 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 60 insertions(+)

diff --git a/client/src/main.c b/client/src/main.c
index 6694c2d..f99277c 100644
--- a/client/src/main.c
+++ b/client/src/main.c
@@ -620,6 +620,16 @@ int eventFilter(void * userdata, SDL_Event * event)
 
     case SDL_MOUSEMOTION:
     {
+      if (!spice_running)
+      {
+        if(params.useSpiceInput && !spice_ready())
+        {
+          if (!spice_connect(params.spiceHost, params.spicePort, "") && !spice_ready() && !spice_process())
+            DEBUG_ERROR("SDL_MOUSEMOTION: reconnect mouse");
+          else
+            spice_running = true;
+        }
+      }
       if (state.ignoreInput || !params.useSpiceInput)
         break;
 
@@ -696,6 +706,16 @@ int eventFilter(void * userdata, SDL_Event * event)
 
     case SDL_KEYDOWN:
     {
+      if (!spice_running)
+      {
+        if(params.useSpiceInput && !spice_ready())
+        {
+          if (!spice_connect(params.spiceHost, params.spicePort, "") && !spice_ready() && !spice_process())
+            DEBUG_ERROR("SDL_MOUSEMOTION: reconnect mouse");
+          else
+            spice_running = true;
+        }
+      }
       SDL_Scancode sc = event->key.keysym.scancode;
       if (sc == params.escapeKey)
       {
@@ -732,6 +752,16 @@ int eventFilter(void * userdata, SDL_Event * event)
 
     case SDL_KEYUP:
     {
+      if (!spice_running)
+      {
+        if(params.useSpiceInput && !spice_ready())
+        {
+          if (!spice_connect(params.spiceHost, params.spicePort, "") && !spice_ready() && !spice_process())
+            DEBUG_ERROR("SDL_MOUSEMOTION: reconnect mouse");
+          else
+            spice_running = true;
+        }
+      }
       SDL_Scancode sc = event->key.keysym.scancode;
       if (state.escapeActive)
       {
@@ -787,6 +817,16 @@ int eventFilter(void * userdata, SDL_Event * event)
     }
 
     case SDL_MOUSEWHEEL:
+      if (!spice_running)
+      {
+        if(params.useSpiceInput && !spice_ready())
+        {
+          if (!spice_connect(params.spiceHost, params.spicePort, "") && !spice_ready() && !spice_process())
+            DEBUG_ERROR("SDL_MOUSEMOTION: reconnect mouse");
+          else
+            spice_running = true;
+        }
+      }
       if (state.ignoreInput || !params.useSpiceInput)
         break;
 
@@ -801,6 +841,16 @@ int eventFilter(void * userdata, SDL_Event * event)
       break;
 
     case SDL_MOUSEBUTTONDOWN:
+      if (!spice_running)
+      {
+        if(params.useSpiceInput && !spice_ready())
+        {
+          if (!spice_connect(params.spiceHost, params.spicePort, "") && !spice_ready() && !spice_process())
+            DEBUG_ERROR("SDL_MOUSEMOTION: reconnect mouse");
+          else
+            spice_running = true;
+        }
+      }
       if (state.ignoreInput || !params.useSpiceInput)
         break;
 
@@ -818,6 +868,16 @@ int eventFilter(void * userdata, SDL_Event * event)
       break;
 
     case SDL_MOUSEBUTTONUP:
+      if (!spice_running)
+      {
+        if(params.useSpiceInput && !spice_ready())
+        {
+          if (!spice_connect(params.spiceHost, params.spicePort, "") && !spice_ready() && !spice_process())
+            DEBUG_ERROR("SDL_MOUSEMOTION: reconnect mouse");
+          else
+            spice_running = true;
+        }
+      }
       if (state.ignoreInput || !params.useSpiceInput)
         break;
 
-- 
2.25.1

