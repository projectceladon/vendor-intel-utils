From 2a23a15ef8b614bec292c073ed41098bcf2f4296 Mon Sep 17 00:00:00 2001
From: renchenglei <chenglei.ren@intel.com>
Date: Fri, 18 Jun 2021 21:33:47 +0800
Subject: [PATCH 10/14] INTERNAL: Improve LG Client performace

We don't need cursor thread on Android, comment
it. And we should not do render when there is no
frame changes.
---
 client/src/config.c |  1 +
 client/src/main.c   | 21 ++++++++++++++++++++-
 2 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/client/src/config.c b/client/src/config.c
index 5735319..359124b 100644
--- a/client/src/config.c
+++ b/client/src/config.c
@@ -97,6 +97,7 @@ static struct Option options[] =
     .module        = "app",
     .name          = "framePollInterval",
     .description   = "How often to check for a frame update in microseconds",
+    .shortopt       = 'R',
     .type          = OPTION_TYPE_INT,
     .value.x_int   = 1000
   },
diff --git a/client/src/main.c b/client/src/main.c
index b53bb63..d321932 100644
--- a/client/src/main.c
+++ b/client/src/main.c
@@ -48,6 +48,7 @@ Place, Suite 330, Boston, MA 02111-1307 USA
 #endif
 
 static bool spice_running = true;
+static bool frame_ready = false;
 
 // forwards
 static int cursorThread(void * unused);
@@ -116,9 +117,26 @@ static int renderThread(void * unused)
 
   struct timespec time;
   clock_gettime(CLOCK_MONOTONIC, &time);
+  frame_ready = true;
 
   while(state.running)
   {
+    uint64_t nsec = time.tv_nsec + state.frameTime;
+    if(!frame_ready) {
+      if (nsec > 1e9)
+      {
+        time.tv_nsec = nsec - 1e9;
+        ++time.tv_sec;
+      }
+      else
+        time.tv_nsec = nsec;
+
+      clock_nanosleep(CLOCK_MONOTONIC, TIMER_ABSTIME, &time, NULL);
+      continue;
+    }
+    else
+      frame_ready = false;
+
     if (state.lgrResize)
     {
       if (state.lgr)
@@ -148,7 +166,6 @@ static int renderThread(void * unused)
       }
     }
 
-    uint64_t nsec = time.tv_nsec + state.frameTime;
     if (nsec > 1e9)
     {
       time.tv_nsec = nsec - 1e9;
@@ -167,6 +184,7 @@ static int renderThread(void * unused)
 
 static int cursorThread(void * unused)
 {
+  return 0;
   KVMFRCursor         header;
   LG_RendererCursor   cursorType     = LG_CURSOR_COLOR;
   uint32_t            version        = 0;
@@ -300,6 +318,7 @@ static int frameThread(void * unused)
       usleep(params.framePollInterval);
       continue;
     }
+    frame_ready = true;
 
     // we must take a copy of the header to prevent the contained
     // arguments from being abused to overflow buffers.
-- 
2.25.1

