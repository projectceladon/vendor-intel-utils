From 4793c25732063f145a3059f95658d732c9cbc956 Mon Sep 17 00:00:00 2001
From: Wan Shuang <shuang.wan@intel.com>
Date: Thu, 12 May 2022 15:04:37 +0800
Subject: [PATCH] [PATCH] [DO NOT MERGE] Map input position using horizontal
 screen resolution.

Map input position for display initalized with horizontal mode.

Signed-off-by: Wan Shuang <shuang.wan@intel.com>
Tracked-On: OAM-101264
---
 client/include/vInputClient.h |  4 ++--
 client/src/main.c             | 44 +++++++++++++++++++++++++++++++++--
 client/src/vInputClient.c     | 29 ++++++++++++-----------
 3 files changed, 59 insertions(+), 18 deletions(-)

diff --git a/client/include/vInputClient.h b/client/include/vInputClient.h
index 9b9b71c0..fe12612e 100644
--- a/client/include/vInputClient.h
+++ b/client/include/vInputClient.h
@@ -1,5 +1,5 @@
-#define XRES_MAX 600.00
-#define YRES_MAX 960.00
+#define XRES_MAX 960.00
+#define YRES_MAX 600.00
 #define LTRB_Y   292.00
 #define LG_LEFT_ARROW 57419
 #define LG_RIGHT_ARROW 57421
diff --git a/client/src/main.c b/client/src/main.c
index 66b432e3..81546882 100644
--- a/client/src/main.c
+++ b/client/src/main.c
@@ -751,7 +751,27 @@ int eventFilter(void * userdata, SDL_Event * event)
     {
 #ifdef USE_INTELVTOUCH
     ev.a = MOVE;
-    vinput_touch(ev);
+    if (event->button.x < state.dstRect.x                   ||
+          event->button.x > state.dstRect.x + state.dstRect.w ||
+          event->button.y < state.dstRect.y                   ||
+          event->button.y > state.dstRect.y + state.dstRect.h
+    )
+    {
+        printf("skip motion out of UI bounds: x:%d, y:%d\n", event->button.x, event->button.y);
+    }
+    else {
+        int ui_bound_x = 0;
+        int ui_bound_y = 0;
+        ui_bound_x = event->button.x - state.dstRect.x;
+        ui_bound_y = event->button.y - state.dstRect.y;
+        ui_bound_x = (float)ui_bound_x * state.scaleX;
+        ui_bound_y = (float)ui_bound_y * state.scaleY;
+        ev.x = ui_bound_x;
+        ev.y = ui_bound_y;
+        ev.rotation = state.rotate;
+        vinput_touch(ev);
+    }
+
     if (realignGuest)
         realignGuest = false;
 #else
@@ -1021,7 +1041,27 @@ int eventFilter(void * userdata, SDL_Event * event)
     case SDL_MOUSEBUTTONDOWN:
 #ifdef USE_INTELVTOUCH
     ev.a = PRESS;
-    vinput_touch(ev);
+    if (event->button.x < state.dstRect.x                   ||
+        event->button.x > state.dstRect.x + state.dstRect.w ||
+        event->button.y < state.dstRect.y                   ||
+        event->button.y > state.dstRect.y + state.dstRect.h
+    )
+    {
+        printf("skip click out of UI bounds: x:%d, y:%d\n", event->button.x, event->button.y);
+    }
+    else {
+        int ui_bound_x = 0;
+        int ui_bound_y = 0;
+        ui_bound_x = event->button.x - state.dstRect.x;
+        ui_bound_y = event->button.y - state.dstRect.y;
+        ui_bound_x = (float)ui_bound_x * state.scaleX;
+        ui_bound_y = (float)ui_bound_y * state.scaleY;
+        ev.x = ui_bound_x;
+        ev.y = ui_bound_y;
+        ev.rotation = state.rotate;
+        vinput_touch(ev);
+    }
+
 #else
       if (!spice_running)
       {
diff --git a/client/src/vInputClient.c b/client/src/vInputClient.c
index 70ab925c..269869b3 100644
--- a/client/src/vInputClient.c
+++ b/client/src/vInputClient.c
@@ -72,6 +72,7 @@ bool vinput_touch(struct vinputEvent ev){
 	if (mqId == -1) {
 		return false;
 	}
+	uint32_t temp;
 	switch(ev.keys){
                 case LG_LEFT_ARROW:
                         ev.keys = LINUX_LEFT;
@@ -98,13 +99,13 @@ bool vinput_touch(struct vinputEvent ev){
 		switch (ev.rotation) {
 		    case 1:
 		    case 3:
-			if(ev.x <= ev.dstRectx ){
-                            ev.x = 0;}
-                        else{
-                            ev.x -= ev.dstRectx;}
-			ev.x *= XRES_MAX/ev.dstRectw;
-			ev.y *= XRES_MAX/ev.dstRectw;
-			ev.y += LTRB_Y;
+                        if (ev.y < 0 ) {
+                            ev.y = 0;
+                        }
+                        temp = ev.y;
+                        ev.y = ev.x;
+                        ev.x = temp;
+                        ev.y = YRES_MAX - ev.y;
 			break;
 
 		    case 2:
@@ -114,10 +115,6 @@ bool vinput_touch(struct vinputEvent ev){
 			break;
 
 		    case 0:
-			ev.x -= ev.dstRectx;
-			ev.x *= XRES_MAX/ev.dstRectw;
-			ev.y *= YRES_MAX/ev.dstRecth;
-
 		    default:
 			break;
 		}
@@ -127,9 +124,13 @@ bool vinput_touch(struct vinputEvent ev){
                 switch (ev.rotation) {
                     case 1:
                     case 3:
-                        ev.x *= XRES_MAX/YRES_MAX;
-                        ev.y *= XRES_MAX/YRES_MAX;
-                        ev.y += LTRB_Y;
+                        if (ev.y < 0 ) {
+                            ev.y = 0;
+                        }
+                        temp = ev.y;
+                        ev.y = ev.x;
+                        ev.x = temp;
+                        ev.y = YRES_MAX - ev.y;
                         break;
 
                     case 2:
-- 
2.25.1

